<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UL.Aria.Service</name>
    </assembly>
    <members>
        <member name="T:UL.Aria.Service.Auditing.AssetLinkAuditInterceptor">
            <summary>
            Class AssetLinkAuditInterceptor.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2">
            <summary>
            Class AuditInterceptionBehaviorBase.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2.#ctor(UL.Aria.Service.Provider.IHistoryProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProfileManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2"/> class.
            </summary>
            <param name="historyProvider">The history provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="profileManager">The profile manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2.Invoke(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation,Microsoft.Practices.Unity.InterceptionExtension.GetNextInterceptionBehaviorDelegate)">
            <summary>
            Implement this method to execute your behavior processing.
            </summary>
            <param name="input">Inputs to the current call to the target.</param>
            <param name="getNext">Delegate to execute to get the next delegate in the behavior chain.</param>
            <returns>
            Return value from the target.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2.GetEntityType(`1)">
            <summary>
            Gets the type of the entity.
            </summary>
            <param name="dto">The dto.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2.GetEntityId(`0)">
            <summary>
            Gets the entity identifier.
            </summary>
            <param name="entity">The entity.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2.GetEntity(System.Guid)">
            <summary>
            Gets the entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>T.</returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2.ConvertToDto(`0)">
            <summary>
            when implemented in a derived class, returns a DataContract Serializable
            object to be stored as the audit details.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2.XmlSerialize(`1)">
            <summary>
            XMLs the serialize.
            </summary>
            <param name="dto">The dto.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2.XmlSerializeInternal(`1)">
            <summary>
            XMLs the serialize internal.
            </summary>
            <param name="dto">The dto.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2.GetRequiredInterfaces">
            <summary>
            Returns the interfaces required by the behavior for the objects it intercepts.
            </summary>
            <returns>
            The required interfaces.
            </returns>
        </member>
        <member name="P:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2.WillExecute">
            <summary>
            Returns a flag indicating if this behavior will actually do anything when invoked.
            </summary>
            <remarks>
            This is used to optimize interception. If the behaviors won't actually
                        do anything (for example, PIAB where no policies match) then the interception
                        mechanism can be skipped completely.
            </remarks>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AssetLinkAuditInterceptor.#ctor(UL.Aria.Service.Provider.IHistoryProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.AssetLinkAuditInterceptor"/> class.
            </summary>
            <param name="historyProvider">The history provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AssetLinkAuditInterceptor.ConvertToDto(UL.Aria.Service.Domain.Entity.AssetLink)">
            <summary>
            when implemented in a derived class, returns a DataContract Serializable object to be stored as the audit details.
            </summary>
            <param name="entity">The entity.</param>
            <returns>AssetLinkDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AssetLinkAuditInterceptor.GetEntityType(UL.Aria.Service.Contracts.Dto.AssetLinkDto)">
            <summary>
            Gets the type of the entity.
            </summary>
            <param name="dto">The dto.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AssetLinkAuditInterceptor.GetEntityId(UL.Aria.Service.Domain.Entity.AssetLink)">
            <summary>
            Gets the entity identifier.
            </summary>
            <param name="entity">The entity.</param>
            <returns>Guid.</returns>
        </member>
        <member name="T:UL.Aria.Service.Auditing.AuditAttribute">
            <summary>
            Indicates that an interface, when intercepted, should have audit behavior.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Auditing.AuditConfigurationException">
            <summary>
            Exception for when a class marked to be audited is not configured properly
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditConfigurationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.AuditConfigurationException"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditConfigurationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.AuditConfigurationException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.AuditConfigurationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:UL.Aria.Service.Auditing.AuditIgnoreAttribute">
            <summary>
            Indicates that a property should be ignored by the Audit delta identification process.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Auditing.AuditInterceptionBehaviorEntityBase`2">
            <summary>
            Class AuditInterceptionBehaviorBase.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorEntityBase`2.#ctor(UL.Aria.Service.Provider.IHistoryProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProfileManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.AuditInterceptionBehaviorBase`2"/> class.
            </summary>
            <param name="historyProvider">The history provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="profileManager">The profile manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditInterceptionBehaviorEntityBase`2.GetEntityId(`0)">
            <summary>
            Gets the entity identifier.
            </summary>
            <param name="entity">The entity.</param>
            <returns>
            Guid.
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Auditing.DocumentAuditInterceptor">
            <summary>
            Class DocumentAuditInterceptor.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Auditing.DocumentAuditInterceptor.#ctor(UL.Aria.Service.Provider.IHistoryProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.DocumentAuditInterceptor"/> class.
            </summary>
            <param name="historyProvider">The history provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Auditing.DocumentAuditInterceptor.ConvertToDto(UL.Aria.Service.Domain.Entity.Document)">
            <summary>
            when implemented in a derived class, returns a DataContract Serializable object to be stored as the audit details.
            </summary>
            <param name="entity">The entity.</param>
            <returns>DocumentDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.DocumentAuditInterceptor.GetEntity(System.Guid)">
            <summary>
            Gets the entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>T.</returns>
        </member>
        <member name="T:UL.Aria.Service.Auditing.DocumentManagerAuditInterceptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Auditing.DocumentManagerAuditInterceptor.#ctor(UL.Aria.Service.Provider.IHistoryProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProfileManager,UL.Aria.Service.Provider.IAssetProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.DocumentManagerAuditInterceptor"/> class.
            </summary>
            <param name="historyProvider">The history provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="assetProvider">The asset provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Auditing.DocumentManagerAuditInterceptor.GetEntityId(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the entity identifier.
            </summary>
            <param name="entity">The entity.</param>
            <returns>
            Guid.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.DocumentManagerAuditInterceptor.ConvertToDto(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            when implemented in a derived class, returns a DataContract Serializable
            object to be stored as the audit details.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.DocumentManagerAuditInterceptor.XmlSerialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            XMLs the serialize.
            </summary>
            <param name="dto">The dto.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.DocumentManagerAuditInterceptor.GetEntity(System.Guid)">
            <summary>
            Gets the entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>
            T.
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Auditing.ProjectAuditInterceptor">
            <summary>
            Provides a DI interceptor for the the Project Manager Interface.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Auditing.ProjectAuditInterceptor.#ctor(UL.Aria.Service.Provider.IHistoryProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.ProjectAuditInterceptor"/> class.
            </summary>
            <param name="historyProvider">The history provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Auditing.ProjectAuditInterceptor.ConvertToDto(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            When implemented in a derived class, returns a DataContract Serializable
            object to be stored as the audit details.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Auditing.TaskAuditInterceptor">
            <summary>
            Provides a DI interceptor for the the Task Repository Interface.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Auditing.TaskAuditInterceptor.#ctor(UL.Aria.Service.Provider.IHistoryProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.TaskAuditInterceptor"/> class.
            </summary>
            <param name="historyProvider">The history provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Auditing.TaskAuditInterceptor.ConvertToDto(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            When implemented in a derived class, returns a DataContract Serializable
            object to be stored as the audit details.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Auditing.TaskAuditInterceptor.GetEntity(System.Guid)">
            <summary>
            Gets the entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>T.</returns>
        </member>
        <member name="T:UL.Aria.Service.Caching.CacheBehaviorBase">
            <summary>
            Provides an abstract class for handling a cache action.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Caching.ICacheBehavior">
            <summary>
            Provides an interface for a Cache Behavior strategy
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheBehavior.Execute(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation,Microsoft.Practices.Unity.InterceptionExtension.GetNextInterceptionBehaviorDelegate,UL.Aria.Service.Caching.ICacheManager,UL.Aria.Service.Caching.CacheResourceAttribute,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Executes the cache behavior
            </summary>
            <param name="input">The input.</param>
            <param name="getNext">The get next.</param>
            <param name="cacheManager">The cache manager.</param>
            <param name="attribute">The attribute.</param>
            <param name="logManager">The log manager.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheBehaviorBase.Execute(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation,Microsoft.Practices.Unity.InterceptionExtension.GetNextInterceptionBehaviorDelegate,UL.Aria.Service.Caching.ICacheManager,UL.Aria.Service.Caching.CacheResourceAttribute,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Executes the cache behavior
            </summary>
            <param name="input">The input.</param>
            <param name="getNext">The get next.</param>
            <param name="cacheManager">The cache manager.</param>
            <param name="attribute">The attribute.</param>
            <param name="logManager">The log manager.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheBehaviorBase.GetLookupKey(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation,UL.Aria.Service.Caching.CacheResourceAttribute)">
            <summary>
            Gets the lookup key by concation of all paramater values where the parameter name matches 
            the specified key in the attribute's Keys array. 
            If no array is supplied, Concats all paramters that are of a suppored CacheKey type.
            </summary>
            <param name="input">The input.</param>
            <param name="attribute">The attribute.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheBehaviorBase.GetEntities``1(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation,UL.Aria.Service.Caching.CacheResourceAttribute)">
            <summary>
            Gets the entity(s), pased on the attribute's specified CacheTarget.
            If CacheTarget value is not supplied looks for an a method paramenter of type T or generic IEnumerable of T.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input">The input.</param>
            <param name="attribute">The attribute.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheBehaviorBase.LogCacheException(UL.Enterprise.Foundation.Logging.ILogManager,System.Exception,System.Int32,System.String)">
            <summary>
            Logs the cache exception.
            </summary>
            <param name="logManager">The log manager.</param>
            <param name="ex">The ex.</param>
            <param name="messageId">The message identifier.</param>
            <param name="cacheKey">The cache key.</param>
        </member>
        <member name="T:UL.Aria.Service.Caching.CacheBehaviorFactory">
            <summary>
            Provides a factory for retrieving Cached Behaviors
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Caching.ICacheBehaviorFactory">
            <summary>
            Provides an interface for a Cache Behavior Factory
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheBehaviorFactory.GetCacheBehavior(UL.Aria.Service.Caching.CacheResourceAttribute)">
            <summary>
            Gets the cache behavior based on the configuration in the specified attribute.
            </summary>
            <param name="attr">The attribute.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheBehaviorFactory.GetCacheBehavior(UL.Aria.Service.Caching.CacheResourceAttribute)">
            <summary>
            Gets the cache behavior based on the configuration in the specified attribute.
            </summary>
            <param name="attr">The attribute.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Caching.Behaviors.CacheIndexIdByUniqueKey">
            <summary>
            Provides a behavior for creating a cache index entry for resolvoing the Entity.Id based 
            on the Unique Key specified as a parameter in the decorated method.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Caching.Behaviors.CacheIndexIdByUniqueKey.Execute(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation,Microsoft.Practices.Unity.InterceptionExtension.GetNextInterceptionBehaviorDelegate,UL.Aria.Service.Caching.ICacheManager,UL.Aria.Service.Caching.CacheResourceAttribute,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Executes the cache behavior
            </summary>
            <param name="input">The input.</param>
            <param name="getNext">The get next.</param>
            <param name="cacheManager">The cache manager.</param>
            <param name="attribute">The attribute.</param>
            <param name="logManager">The log manager.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Caching.Behaviors.CacheIncomingTargetByIdBehavior">
            <summary>
            Provides a Caching behavior, to cache entity object being passed into the target method.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Caching.Behaviors.CacheIncomingTargetByIdBehavior.Execute(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation,Microsoft.Practices.Unity.InterceptionExtension.GetNextInterceptionBehaviorDelegate,UL.Aria.Service.Caching.ICacheManager,UL.Aria.Service.Caching.CacheResourceAttribute,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Executes the cache behavior
            </summary>
            <param name="input">The input.</param>
            <param name="getNext">The get next.</param>
            <param name="cacheManager">The cache manager.</param>
            <param name="attribute">The attribute.</param>
            <param name="logManager">The log manager.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Caching.Behaviors.CacheReturnValueBehavior">
            <summary>
            Provides a behavior for Caching a returned object againsed the Key(s) specified as parameters in decorated method signature.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Caching.Behaviors.CacheReturnValueBehavior.Execute(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation,Microsoft.Practices.Unity.InterceptionExtension.GetNextInterceptionBehaviorDelegate,UL.Aria.Service.Caching.ICacheManager,UL.Aria.Service.Caching.CacheResourceAttribute,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Executes the specified input.
            </summary>
            <param name="input">The input.</param>
            <param name="getNext">The get next.</param>
            <param name="cacheManager">The cache manager.</param>
            <param name="attr">The attribute.</param>
            <param name="logManager">The log manager.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Caching.Behaviors.CachePassthroughBehavior">
            <summary>
            Passes the call through to the decorated class without taking any action.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Caching.CacheResourceAttribute">
            <summary>
            Attribute that designates a method to use a cache behavior.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheResourceAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Caching.CacheResourceAttribute"/> class.
            </summary>
            <param name="behaviorType">Type of the behavior.</param>        
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:UL.Aria.Service.Caching.CacheResourceAttribute.CacheTarget">
            <summary>
            Gets or sets the cache target.
            </summary>
            <value>
            The cache target.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Caching.CacheResourceAttribute.Keys">
            <summary>
            Gets or sets the name of the pramamters to be used as Cross Reference keys.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Caching.CacheResourceAttribute.CacheBehavior">
            <summary>
            Whe the Cache Operation is set to Custom, the is the item that is the 
            strategy that will be executed.
            </summary>
            <value>
            The type of the cache behavior.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Caching.CacheResourceAttribute.TargetType">
            <summary>
            Gets the type of the target associated with the generic type of the interceptor
            </summary>
            <value>
            The type of the target.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Caching.CacheManager">
            <summary>
            The Redis Cache Manager
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Caching.ICacheManager">
            <summary>
            Provides an interface for a Cache Manager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.GetItem``1(System.String)">
            <summary>
            Gets the item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.GetItem(System.String)">
            <summary>
            Gets the item.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.StoreItem(System.String,System.Object,System.TimeSpan)">
            <summary>
            Stores the item.
            </summary>
            <param name="key">The key.</param>
            <param name="data">The data.</param>
            <param name="expiry">The expiry.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.GetGroupedItem(System.String,System.String)">
            <summary>
            Gets the grouped item.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.StoreGroupedItem(System.String,System.String,System.Object)">
            <summary>
            Stores the grouped item.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="key">The key.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.StoreIndex(System.String,System.String)">
            <summary>
            Stores the index.
            </summary>
            <param name="index">The index.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.GetIndex(System.String)">
            <summary>
            Gets the index key.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.RemoveIndex(System.String)">
            <summary>
            Removes the index.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.RemoveItem(System.String)">
            <summary>
            Removes the item.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.GetGroupedItem``1(System.String,System.String)">
            <summary>
            Gets the grouped item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="groupId">The group identifier.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.ICacheManager.RemoveGroupedItem(System.String,System.String)">
            <summary>
            Removes the grouped item.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.#ctor(UL.Aria.Service.Configuration.IServiceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Caching.CacheManager"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.GetItem``1(System.String)">
            <summary>
            Gets the item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.GetItem(System.String)">
            <summary>
            Gets the item.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.StoreItem(System.String,System.Object,System.TimeSpan)">
            <summary>
            Stores the item.
            </summary>
            <param name="key">The key.</param>
            <param name="data">The data.</param>
            <param name="expiry">The expiry.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.RemoveItem(System.String)">
            <summary>
            Removes the item.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.GetGroupedItem``1(System.String,System.String)">
            <summary>
            Gets the grouped item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="groupId">The group identifier.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.GetGroupedItem(System.String,System.String)">
            <summary>
            Gets the grouped item.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.StoreGroupedItem(System.String,System.String,System.Object)">
            <summary>
            Stores the grouped item.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="key">The key.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.RemoveGroupedItem(System.String,System.String)">
            <summary>
            Removes the grouped item.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="key">The key.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.StoreIndex(System.String,System.String)">
            <summary>
            Stores the index.
            </summary>
            <param name="index">The index.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.GetIndex(System.String)">
            <summary>
            Gets the index key.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.RemoveIndex(System.String)">
            <summary>
            Removes the index.
            </summary>
            <param name="key">The key.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheManager.GetHashID(System.String)">
            <summary>
            Gets a hash identifier based on the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Caching.CacheInterceptor`1">
            <summary>
            Provides a calls for the interception registration for a Caching decorator.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheInterceptor`1.#ctor(UL.Aria.Service.Caching.ICacheManager,UL.Aria.Service.Caching.ICacheBehaviorFactory,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Caching.CacheInterceptor`1"/> class.
            </summary>
            <param name="cacheManager">The cache manager.</param>
            <param name="factory">The factory.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheInterceptor`1.GetRequiredInterfaces">
            <summary>
            Returns the interfaces required by the behavior for the objects it intercepts.
            </summary>
            <returns>
            The required interfaces.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheInterceptor`1.Invoke(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation,Microsoft.Practices.Unity.InterceptionExtension.GetNextInterceptionBehaviorDelegate)">
            <summary>
            Implement this method to execute your behavior processing.
            </summary>
            <param name="input">Inputs to the current call to the target.</param>
            <param name="getNext">Delegate to execute to get the next delegate in the behavior chain.</param>
            <returns>
            Return value from the target.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Caching.CacheInterceptor`1.GetAttribute(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation)">
            <summary>
            Gets the CacheResouce attribute.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Caching.CacheInterceptor`1.WillExecute">
            <summary>
            Returns a flag indicating if this behavior will actually do anything when invoked.
            </summary>
            <remarks>
            This is used to optimize interception. If the behaviors won't actually
                        do anything (for example, PIAB where no policies match) then the interception
                        mechanism can be skipped completely.
            </remarks>
        </member>
        <member name="T:UL.Aria.Service.Caching.Behaviors.DeleteByKeysCachingBehavior">
            <summary>
            Provides a Caching behavior for deleting cached items based on the Keys in the specified in the decorated method signature.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Caching.Behaviors.DeleteByKeysCachingBehavior.Execute(Microsoft.Practices.Unity.InterceptionExtension.IMethodInvocation,Microsoft.Practices.Unity.InterceptionExtension.GetNextInterceptionBehaviorDelegate,UL.Aria.Service.Caching.ICacheManager,UL.Aria.Service.Caching.CacheResourceAttribute,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Executes the cache behavior
            </summary>
            <param name="input">The input.</param>
            <param name="getNext">The get next.</param>
            <param name="cacheManager">The cache manager.</param>
            <param name="attribute">The attribute.</param>
            <param name="logManager">The log manager.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Configuration.ContainerSetup">
            <summary>
                Static class containing helper methods for setting up unity containers.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupGlobalCommon``1(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
                Sets up the log manager and other dependencies that apply to ALL applications.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupServiceCommon(Microsoft.Practices.Unity.IUnityContainer,System.Boolean)">
            <summary>
            Setups the common dependencies that apply to ALL services.
            </summary>
            <param name="container">The container.</param>
            <param name="useThreadResolver">if set to <c>true</c> [use thread resolver].</param>
            <returns>IUnityContainer.</returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupDocumentService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the document service.
            </summary>
            <param name="container">The container.</param>
            <returns>IUnityContainer.</returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupTaskNotification(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the task notification.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupTaskTypeNotification(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the task type notification.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupCacheLayer(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the cache layer.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupLinkService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the link serivce.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupTaskTypeService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the task type serivce.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupUserTeamService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the user team service.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupProductService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the product service.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupProjectService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the project service.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupHistoryService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the history service.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupLookupService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the Lookup service.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupSharepointBase(Microsoft.Practices.Unity.IUnityContainer,System.Boolean)">
            <summary>
            Sets up the sharepoint base.
            </summary>
            <param name="container">The container.</param>
            <param name="useThreadResolver">if set to <c>true</c> [use thread resolver].</param>
            <returns>IUnityContainer.</returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupInboundOrderMessage(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the inbound order message.
            </summary>
            <param name="container">The container.</param>
            <returns>IUnityContainer.</returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupAzureStorage(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the outbound document.
            </summary>
            <param name="container">The container.</param>
            <returns>IUnityContainer.</returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupDataManipulation(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the data manipulation managers.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupProjectManager(Microsoft.Practices.Unity.IUnityContainer,System.Boolean)">
            <summary>
            Sets up the project manager.
            </summary>
            <param name="container">The container.</param>
            <param name="useThreadResolver">if set to <c>true</c> [use thread resolver].</param>
            <returns>IUnityContainer.</returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupProductFamilyManager(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
                Sets up the product family manager.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupProductFamilyService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the product family service.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupProductManager(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
                Sets up the product service.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupScratchSpace(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
                Registers the scratch space.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupClaimsManagers(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
                Registers the claims managers.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupAuthorizationCommon(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the common authorization.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupTaskService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the task service.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupProjectValidation(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the task validation.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupTaskStatus(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the task status.
            </summary>
            <param name="container">The container.</param>
            <returns>IUnityContainer.</returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupTaskValidation(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the task validation.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupOrderService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the order service.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupServiceAuthorization(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
                Setups the service authorization.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupWcfBehaviors(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the WCF behaviors.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupNotificationService(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the notification service.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupNotifications(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the notifications.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupTaskProgressQueryBuilder(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the task progress query builder.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupSearchCoordinator(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the search coordinator which enables us to add muniputaion behavior 
            to the search criteria and then rollback the changes.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupInterception(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the entity change tracking.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ContainerSetup.SetupTaskTemplate(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Setups the task template.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Configuration.IServiceConfiguration">
            <summary>
            Represents the configuration settings used by the aria portal
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.AriaRootUri">
            <summary>
                Gets the root URI to the aria web portal
            </summary>
            <value>
                The aria root URI.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.PortalAdminEmail">
            <summary>
            Gets the portal admin's email address.
            </summary>
            <value>
            Portal admin's email address.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.DefaultSenderEmail">
            <summary>
            Gets the From email address to use by default for emails sent by Aria
            </summary>
            <value>
            The default sender email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.CustomerSupportEmail">
            <summary>
                Gets the Aria customer support email address.
            </summary>
            <value>
                The contact us from email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.ProductSupportEmail">
            <summary>
                Gets the Aria product support email address.  Will default to the CustomerSupportEmail.
            </summary>
            <value>
                The contact us from email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.GlobalBccEmail">
            <summary>
                Gets the email address to BCC on all emails sent from Aria.  This can be blank.
            </summary>
            <value>
                The global BCC email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.UlCompanyId">
            <summary>
            Gets the ul company unique identifier.
            </summary>
            <value>
            The ul company unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.StorageConnectionString">
            <summary>
            Gets the storage connection string.
            </summary>
            <value>
            The storage connection string.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.ScratchSpaceRootPath">
            <summary>
            Gets or sets the name of the storage container.
            </summary>
            <value>
            The name of the storage container.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.ScratchSpaceStorageOption">
            <summary>
            Gets the storage mode.
            </summary>
            <value>
            The storage mode.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.ScratchSpaceExpiration">
            <summary>
            Gets the scratch space expiration.
            </summary>
            <value>
            The scratch space expiration.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.RedisCacheConnectionString">
            <summary>
            Gets or sets the redis cache connection string.
            </summary>
            <value>
            The redis cache connection string.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.RedisItemDefaultExpiryMin">
            <summary>
            Gets or sets the redis item default expiry minimum.
            </summary>
            <value>
            The redis item default expiry minimum.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.IsRedisCacheEnabled">
            <summary>
            Gets a value indicating whether this instance is redis cache enabled.
            </summary>
            <value><c>true</c> if this instance is redis cache enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.AllBusinessUnitId">
            <summary>
            Gets or sets all business unit identifier.
            </summary>
            <value>
            All business unit identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.FreeformTaskTypeId">
            <summary>
            Gets the freeform task type identifier.
            </summary>
            <value>
            The freeform task type identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.IServiceConfiguration.TaskReviewGroupEmail">
            <summary>
            Gets the task review group email.
            </summary>
            <value>
            The task review group email.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Configuration.ScratchSpaceStorageOption">
            <summary>
            Gets or sets the blob storage option.
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Configuration.ScratchSpaceStorageOption.Default">
            <summary>
            use default storage
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Configuration.ScratchSpaceStorageOption.Azure">
            <summary>
            use azure storage
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Configuration.ServiceConfiguration">
            <summary>
                Represents the configuration settings used by the service
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Configuration.ServiceConfiguration.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Configuration.ServiceConfiguration"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.AriaRootUri">
            <summary>
                Gets the hostname and port of the Aria home page
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.CustomerSupportEmail">
            <summary>
                Gets the Aria customer support email address.
            </summary>
            <value>
                The contact us from email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.ProductSupportEmail">
            <summary>
            Gets the Aria product support email address.  Will default to the CustomerSupportEmail.
            </summary>
            <value>
            The contact us from email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.GlobalBccEmail">
            <summary>
                Gets the email address to BCC on all emails sent from Aria.  This can be blank.
            </summary>
            <value>
                The global BCC email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.DefaultSenderEmail">
            <summary>
            Gets the From email address to use by default for emails sent by Aria
            </summary>
            <value>
            The default sender email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.PortalAdminEmail">
            <summary>
            Gets the email address of portal admin.
            </summary>
            <value>
            Portal admin's email address.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.UlCompanyId">
            <summary>
            Gets the ul company unique identifier.
            </summary>
            <value>
            The ul company unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.StorageConnectionString">
            <summary>
            Gets the storage connection string.
            </summary>
            <value>
            The storage connection string.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.ScratchSpaceRootPath">
            <summary>
            Gets or sets the name of the storage container.
            </summary>
            <value>
            The name of the storage container.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.ScratchSpaceStorageOption">
            <summary>
            Gets the storage mode.
            </summary>
            <value>
            The storage mode.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.ScratchSpaceExpiration">
            <summary>
            Gets the scratch space expiration.
            </summary>
            <value>
            The scratch space expiration.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.RedisCacheConnectionString">
            <summary>
            Gets or sets the redis cache connection string.
            </summary>
            <value>
            The redis cache connection string.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.RedisItemDefaultExpiryMin">
            <summary>
            Gets or sets the redis item default expiry minimum.
            </summary>
            <value>
            The redis item default expiry minimum.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.IsRedisCacheEnabled">
            <summary>
            Gets or sets the is redis cache enabled.
            </summary>
            <value>The is redis cache enabled.</value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.AllBusinessUnitId">
            <summary>
            Gets or sets all business unit identifier.
            </summary>
            <value>
            All business unit identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.FreeformTaskTypeId">
            <summary>
            Gets or sets the freeform task type identifier.
            </summary>
            <value>
            The freeform task type identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Configuration.ServiceConfiguration.TaskReviewGroupEmail">
            <summary>
            Gets the task review group email.
            </summary>
            <value>
            The task review group email.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.AriaMetaData">
            <summary>
            Class AriaMetaData.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.ParentAssetId">
            <summary>
            Gets or sets the parent asset identifier.
            </summary>
            <value>The parent asset identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.Uri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.AssetName">
            <summary>
            Gets or sets the name of the asset.
            </summary>
            <value>The name of the asset.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.MetaData">
            <summary>
            Gets or sets the meta data.
            </summary>
            <value>The meta data.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.Claims">
            <summary>
            Gets or sets the claims.
            </summary>
            <value>The claims.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.SecurityDescriptor">
            <summary>
            Gets or sets the security descriptor.
            </summary>
            <value>The security descriptor.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.LastModifiedTime">
            <summary>
            Gets or sets the last modified time.
            </summary>
            <value>The last modified time.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.IsParsed">
            <summary>
            Gets or sets a value indicating whether this instance is parsed.
            </summary>
            <value><c>true</c> if this instance is parsed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.IsDeleted">
            <summary>
            Gets or sets a value indicating whether this instance is deleted.
            </summary>
            <value><c>true</c> if this instance is deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.RowNumber">
            <summary>
            Gets or sets the row number.
            </summary>
            <value>The row number.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AriaMetaData.AvailableClaims">
            <summary>
            Gets or sets the available claims.
            </summary>
            <value>The available claims.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty">
            <summary>
                Defines properties of a Certification Request.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskProperty">
            <summary>
                Defines an extensible property for a <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> entity
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Repository.AuditableEntity">
            <summary>
            
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Repository.IAuditableEntity">
            <summary>
            AuditableEntity interface
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Repository.IAuditableEntity.CreatedById">
            <summary>
                Gets or sets the user it was created by.
            </summary>
            <value>
                The created by.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Repository.IAuditableEntity.CreatedDateTime">
            <summary>
                Gets or sets the created on.
            </summary>
            <value>
                The created on.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Repository.IAuditableEntity.UpdatedDateTime">
            <summary>
                Gets or sets the updated on.
            </summary>
            <value>
                The updated on.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Repository.IAuditableEntity.UpdatedById">
            <summary>
                Gets or sets who it was updated by.
            </summary>
            <value>
                The updated by person.
            </value>
        </member>
        <member name="M:UL.Aria.Service.Domain.Repository.AuditableEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Repository.AuditableEntity"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Repository.AuditableEntity.CreatedById">
            <summary>
                Gets or sets the user it was created by.
            </summary>
            <value>
                The created by.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Repository.AuditableEntity.CreatedDateTime">
            <summary>
                Gets or sets the created on.
            </summary>
            <value>
                The created on.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Repository.AuditableEntity.UpdatedDateTime">
            <summary>
                Gets or sets the updated on.
            </summary>
            <value>
                The updated on.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Repository.AuditableEntity.UpdatedById">
            <summary>
                Gets or sets who it was updated by.
            </summary>
            <value>
                The updated by person.
            </value>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskProperty.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TaskProperty"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskProperty.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskProperty.GetChildPropertyValue(System.String)">
            <summary>
            Gets the child property value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskProperty.SetChildPropertyValue(System.String,System.String)">
            <summary>
            Sets the child property value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskProperty.GetTaskPropertyTypeForConstruction(System.String)">
            <summary>
            Gets the task property type for construction.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskProperty.GetTaskPropertyTypeAttribute(System.String)">
            <summary>
            Gets the task property type attribute.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.ParentTaskPropertyId">
            <summary>
            Gets or sets the parent identifier.
            </summary>
            <value>
            The parent identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.TaskId">
            <summary>
            Gets or sets the task identifier.
            </summary>
            <value>
            The task identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.TaskPropertyTypeId">
            <summary>
            Gets or sets the task property type identifier.
            </summary>
            <value>
            The task property type identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.TaskPropertyType">
            <summary>
            Gets or sets the type of the task property.
            </summary>
            <value>
            The type of the task property.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProperty.Children">
            <summary>
            Gets or sets the children.
            </summary>
            <value>
            The children.
            </value>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.CertificationRequestTaskPropertyTypeName">
            <summary>
                The certification request task property type name
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.CertificationRequestTaskPropertyTypeId">
            <summary>
                The certification request task property type identifier
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.CCN">
            <summary>
                Gets or sets the CCN.
            </summary>
            <value>
                The CCN.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.Comments">
            <summary>
                Gets or sets the comments to co.
            </summary>
            <value>
                The comments to co.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.DepartmentCode">
            <summary>
                Gets or sets the department code.
            </summary>
            <value>
                The department code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.FileNo">
            <summary>
                Gets or sets the file number.
            </summary>
            <value>
                The file number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.SubmittingUserName">
            <summary>
                Gets or sets the final name of the review.
            </summary>
            <value>
                The final name of the review.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.ProjectEndDate">
            <summary>
                Gets or sets the project end date.
            </summary>
            <value>
                The project end date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.ProjectHandler">
            <summary>
                Gets or sets the project handler.
            </summary>
            <value>
                The project handler.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.ProjectId">
            <summary>
                Gets or sets the project identifier.
            </summary>
            <value>
                The project identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.ScopeOfRequest">
            <summary>
                Gets or sets the scope of request.
            </summary>
            <value>
                The scope of request.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.CcnIndustry">
            <summary>
                Gets or sets the industry.
            </summary>
            <value>
                The industry.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.CcnDescription">
            <summary>
                Gets or sets the CCN description.
            </summary>
            <value>
                The CCN description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.ContactEmail">
            <summary>
                Gets or sets the contact email.
            </summary>
            <value>
                The contact email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.ContactName">
            <summary>
                Gets or sets the name of the contact.
            </summary>
            <value>
                The name of the contact.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.IsOutsideLab">
            <summary>
            Gets or sets the is outside lab.
            </summary>
            <value>
            The is outside lab.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.StandardsAndEditions">
            <summary>
            Gets or sets the standards and editions.
            </summary>
            <value>
            The standards and editions.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.SubscriberNumber">
            <summary>
            Gets or sets the subscriber number.
            </summary>
            <value>
            The subscriber number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.HandlerLocation">
            <summary>
            Gets or sets the handler location.
            </summary>
            <value>
            The handler location.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty.ProjectNumber">
            <summary>
            Gets or sets the project number.
            </summary>
            <value>
            The project number.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.DepartmentCode">
            <summary>
            Class DepartmentCode.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.LookupCodeBase">
            <summary>
                Industry Code
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.LookupCodeBase.Label">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.LookupCodeBase.ExternalId">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.LookupCodeBase.UL#Enterprise#Foundation#Data#ISearchResult#Metadata">
             <summary>
            Not implemented, returns null;
             </summary>
             <value>
             The metadata.
             </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.LookupCodeBase.UL#Enterprise#Foundation#Data#ISearchResult#Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.LookupCodeBase.UL#Enterprise#Foundation#Data#ISearchResult#Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ItemUsage">
            <summary>
            Provides an classifer for checking an entites usage.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ItemUsage.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation">
            <summary>
            Link classifier.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation.ParentId">
            <summary>
            Gets or sets the parent identifier.
            </summary>
            <value>
            The parent identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation.DocumentTemplateId">
            <summary>
            Gets or sets the document template identifier.
            </summary>
            <value>
            The document template identifier.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate">
            <summary>
                Project ProjectTemplate class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.ParentId">
            <summary>
                Gets or sets the parent identifier.
            </summary>
            <value>
                The parent identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.ProjectId">
            <summary>
                Gets or sets the project identifier.
            </summary>
            <value>
                The project identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.ProjectTemplateId">
            <summary>
                Gets or sets the project template identifier.
            </summary>
            <value>
                The project template identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.IsOriginal">
            <summary>
                Gets or sets a value indicating whether this instance is part of the templates originally used when the project was
                created.
            </summary>
            <value>
                <c>true</c> if this instance is original; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.RecordVersion">
            <summary>
                Gets or sets the Record Version.
            </summary>
            <value>
                Timestamp.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.EntityType">
            <summary>
                Gets or sets the type of the entity.
            </summary>
            <value>
                The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.UL#Enterprise#Foundation#Data#ISearchResult#ChangeDate">
            <summary>
                Gets or sets the change date.
            </summary>
            <value>
                The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.UL#Enterprise#Foundation#Data#ISearchResult#EntityType">
            <summary>
                Gets or sets the type of the entity.
            </summary>
            <value>
                The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.UL#Enterprise#Foundation#Data#ISearchResult#Metadata">
            <summary>
                Gets or sets the metadata dictionary.
            </summary>
            <value>
                The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.UL#Enterprise#Foundation#Data#ISearchResult#Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectProjectTemplate.UL#Enterprise#Foundation#Data#ISearchResult#Title">
            <summary>
                Gets or sets the title.
            </summary>
            <value>
                The title.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskChangeResult">
            <summary>
            Provides a package for returning task and ids that have beed updated and deleted, 
            respectiviely, as a result of a Delete bulk tasks operation
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskChangeResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TaskChangeResult"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskChangeResult.UpdatedTasks">
            <summary>
            Gets or sets the update task.
            </summary>
            <value>
            The update task.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskChangeResult.DeletedTasks">
            <summary>
            Gets or sets the deleted task ids.
            </summary>
            <value>
            The deleted task ids.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskTypeNotification">
            <summary>
            Task type notification class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeNotification.TaskTypeId">
            <summary>
            Gets or sets the task type identifier.
            </summary>
            <value>
            The task identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeNotification.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeNotification.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeNotification.UL#Enterprise#Foundation#Data#ISearchResult#ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeNotification.UL#Enterprise#Foundation#Data#ISearchResult#EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeNotification.UL#Enterprise#Foundation#Data#ISearchResult#Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeNotification.UL#Enterprise#Foundation#Data#ISearchResult#Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeNotification.UL#Enterprise#Foundation#Data#ISearchResult#Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskPropertyType">
            <summary>
                Defines an extensible property definition for a <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> entity
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskPropertyType.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TaskProperty"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskPropertyType.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyType.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyType.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyType.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyType.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyType.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyType.ParentTaskPropertyTypeId">
            <summary>
            Gets or sets the parent identifier.
            </summary>
            <value>
            The parent identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyType.DataTypeId">
            <summary>
            Gets or sets the data type identifier.
            </summary>
            <value>
            The data type identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyType.ParentTaskPropertyType">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyType.AllowMultiple">
            <summary>
            Gets or sets a value indicating whether [allow multiple].
            </summary>
            <value>
              <c>true</c> if [allow multiple]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskPropertyTypeAttribute">
            <summary>
                Attribute for information about how a <see cref="T:UL.Aria.Service.Domain.Entity.TaskPropertyType"/> should be applied to a property
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyTypeAttribute.Id">
            <summary>
                Gets or sets the identifier. Must be parseable to Guid
            </summary>
            <value>
                The identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPropertyTypeAttribute.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskStatusList">
            <summary>
            Class TaskStatusList.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskStatusList.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskStatusList.StatusList">
            <summary>
            Gets or sets the status list.
            </summary>
            <value>The status list.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskNotification">
            <summary>
            Task notification class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskNotification.TaskId">
            <summary>
            Gets or sets the task identifier.
            </summary>
            <value>
            The task identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskNotification.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskNotification.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskNotification.UL#Enterprise#Foundation#Data#ISearchResult#ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskNotification.UL#Enterprise#Foundation#Data#ISearchResult#EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskNotification.UL#Enterprise#Foundation#Data#ISearchResult#Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskNotification.UL#Enterprise#Foundation#Data#ISearchResult#Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskNotification.UL#Enterprise#Foundation#Data#ISearchResult#Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior">
            <summary>
            Defines available extended behaviors for <see cref="T:UL.Aria.Service.Domain.TaskType"/> when applied to a <see cref="T:UL.Aria.Service.Domain.Entity.Task"/>.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField">
            <summary>
            Defines available extended behaviors for <see cref="T:UL.Aria.Service.Domain.TaskType"/> when applied to a <see cref="T:UL.Aria.Service.Domain.Entity.Task"/>.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField.TaskTypeAvailableBehaviorId">
            <summary>
            Gets or sets the task type available behavior identifier.
            </summary>
            <value>
            The task type available behavior identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskTypeBehavior">
            <summary>
            Defines extended behaviors for <see cref="T:UL.Aria.Service.Domain.TaskType"/> when applied to a <see cref="T:UL.Aria.Service.Domain.Entity.Task"/>.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeBehavior.TaskTypeId">
            <summary>
            Gets or sets the task type identifier.
            </summary>
            <value>
            The task type identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeBehavior.TaskTypeAvailableBehaviorId">
            <summary>
            Gets or sets <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior"/>.
            </summary>
            <value>
            The task type available behavior.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeBehavior.BehaviorName">
            <summary>
            Gets or sets the name of the behavior.
            </summary>
            <value>
            The name of the behavior.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeBehavior.TaskTypeAvailableBehaviorFieldId">
            <summary>
            Gets or sets the <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField"/>.
            </summary>
            <value>
            The task type available behavior field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeBehavior.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>
            The name of the field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeBehavior.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeBehavior.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeBehavior.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeBehavior.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTypeBehavior.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Repository.AssocationRepository`1">
            <summary>
            Association Repository abstract class.
            </summary>
            <typeparam name="E"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Domain.Repository.AssocationRepository`1.MapPrimaryEntityToDataRow(`0,System.Data.DataRow)">
            <summary>
            Maps the primary entity to data row.
            </summary>
            <param name="src">The source.</param>
            <param name="dest">The dest.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Repository.AssocationRepository`1.DefinePrimaryEntityIDataReaderMapping(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the primary entity i data reader mapping.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.BusinessUnitAssociation">
            <summary>
            Business Unit Association
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity">
            <summary>
                A domain entity object with audit tracking
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ITrackedDomainEntity">
            <summary>
            Defines properites for domain entities with tracking.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ITrackedDomainEntity.CreatedById">
            <summary>
                Gets or sets the user it was created by.
            </summary>
            <value>
                The created by.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ITrackedDomainEntity.CreatedDateTime">
            <summary>
                Gets or sets the created on.
            </summary>
            <value>
                The created on.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ITrackedDomainEntity.UpdatedDateTime">
            <summary>
                Gets or sets the updated on.
            </summary>
            <value>
                The updated on.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ITrackedDomainEntity.UpdatedById">
            <summary>
                Gets or sets who it was updated by.
            </summary>
            <value>
                The updated by person.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ITrackedDomainEntity.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TrackedDomainEntity.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TrackedDomainEntity.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TrackedDomainEntity.CreatedById">
            <summary>
                Gets or sets the user it was created by.
            </summary>
            <value>
                The created by.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TrackedDomainEntity.CreatedDateTime">
            <summary>
                Gets or sets the created on.
            </summary>
            <value>
                The created on.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TrackedDomainEntity.UpdatedDateTime">
            <summary>
                Gets or sets the updated on.
            </summary>
            <value>
                The updated on.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TrackedDomainEntity.UpdatedById">
            <summary>
                Gets or sets who it was updated by.
            </summary>
            <value>
                The updated by person.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.BusinessUnitAssociation.BusinessUnitId">
            <summary>
            Gets or sets the business unit identifier.
            </summary>
            <value>
            The business unit identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.BusinessUnitAssociation.ParentId">
            <summary>
            Gets or sets the parent identifier.
            </summary>
            <value>
            The parent identifier.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Document">
            <summary>
            Class Document. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Document.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Document"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Document.#ctor(System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Document.DocumentVersionId">
            <summary>
            Gets or sets the document version identifier.
            </summary>
            <value>The document version identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Document.HashValue">
            <summary>
            Gets or sets the hash value.
            </summary>
            <value>The hash value.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.AssetLink">
            <summary>
            Class AssetLink.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetLink.ParentAssetId">
            <summary>
            Gets or sets the parent asset identifier.
            </summary>
            <value>The parent asset identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetLink.AssetId">
            <summary>
            Gets or sets the asset identifier.
            </summary>
            <value>The asset identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetLink.ParentAssetType">
            <summary>
            Gets or sets the type of the parent asset.
            </summary>
            <value>The type of the parent asset.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetLink.AssetType">
            <summary>
            Gets or sets the type of the asset.
            </summary>
            <value>The type of the asset.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetLink.AssetName">
            <summary>
            Gets or sets the name of the asset.
            </summary>
            <value>The name of the asset.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ContactRoleEnum">
            <summary>
                Enum ContactRoleEnum
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.ContactRoleEnum.Customer">
            <summary>
                The customer
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.ContactRoleEnum.BillTo">
            <summary>
                The bill to
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.ContactRoleEnum.ShipTo">
            <summary>
                The ship to
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.CustomerOrganization">
            <summary>
            Defines attributes of an organization.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.CustomerOrganization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.CustomerOrganization"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CustomerOrganization.Customer">
            <summary>
            Gets or sets the customer.
            </summary>
            <value>
            The customer.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CustomerOrganization.Contacts">
            <summary>
            Gets or sets the contacts.
            </summary>
            <value>
            The contacts.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.CustomerOrganization.Locations">
            <summary>
            Gets or sets the locations.
            </summary>
            <value>
            The locations.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.DocumentVersion">
            <summary>
            Class DocumentVersion. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.DocumentVersion.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.DocumentVersion"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.DocumentVersion.#ctor(System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.DocumentVersion.HashValue">
            <summary>
            Gets or sets the hash value.
            </summary>
            <value>The hash value.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.EntityAssetLinkHistory">
            <summary>
            Class EntityAssetLinkHistory. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.EntityHistory">
            <summary>
            Class EntityHistory.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.EntityHistory.CreatedBy">
            <summary>
                Gets or sets the created by.
            </summary>
            <value>The created by.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.EntityHistory.CreatedDate">
            <summary>
                Gets or sets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.EntityAssetLinkHistory.AssetLink">
            <summary>
            Gets or sets the asset link.
            </summary>
            <value>The asset link.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.EntityTaskHistory">
            <summary>
            Class EntityTaskHistory. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.EntityTaskHistory.Task">
            <summary>
            Gets or sets the task.
            </summary>
            <value>The task.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Link">
            <summary>
            Link classifier.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Link.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Link"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.Label">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.RootUrl">
            <summary>
            Gets or sets the root URL.
            </summary>
            <value>
            The root URL.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.IsDeleted">
            <summary>
            Gets or sets a value indicating whether this instance is deleted.
            </summary>
            <value>
            <c>true</c> if this instance is deleted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.BusinessUnits">
            <summary>
            Gets or sets the business units.
            </summary>
            <value>The business units.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.BusinessUnitCodes">
            <summary>
            Gets or sets the business unit codes.
            </summary>
            <value>The business unit codes.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.UpdatedByLoginId">
            <summary>
            Gets or sets the updated by login identifier.
            </summary>
            <value>
            The updated by login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.CreatedByLoginId">
            <summary>
            Gets or sets the created by login identifier.
            </summary>
            <value>
            The created by login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Link.IsModal">
            <summary>
            Gets or sets the is modal.
            </summary>
            <value>
            The is modal.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.LinkAssociation">
            <summary>
            Link classifier.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.LinkAssociation.ParentId">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.LinkAssociation.LinkId">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.LinkAssociation.Order">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.LocationCode">
            <summary>
                Location Code
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskBase">
            <summary>
            Provides a base structure for Task entities.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase">
            <summary>
                Container entity.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.GetContainerMetadata(UL.Aria.Service.Domain.Entity.IAssetFieldMetadata)">
            <summary>
                Gets the share point metadata.
            </summary>
            <param name="assetFieldMetadata">The asset field metadata.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.GetAssetMetadata(UL.Aria.Service.Domain.Entity.IAssetFieldMetadata)">
            <summary>
                Serializes this instance.
            </summary>
            <param name="assetFieldMetadata">The asset field metadata.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.SerializeParent(System.Xml.XmlWriter,System.Object,UL.Aria.Service.Domain.Entity.IAssetFieldMetadata,System.Boolean)">
            <summary>
                Serializes the parent.
            </summary>
            <param name="xmlWriter">The XML writer.</param>
            <param name="parent">The parent.</param>
            <param name="assetFieldMetadata">The asset field metadata.</param>
            <param name="isContainerOnly"></param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.WriteSpMetadataElement(System.Xml.XmlWriter,System.Reflection.PropertyInfo,System.String,System.Object,UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto,UL.Aria.Service.Domain.Entity.IAssetFieldMetadata)">
            <summary>
                Writes the sp metadata element.
            </summary>
            <param name="xmlWriter">The XML writer.</param>
            <param name="propertyInfo">The property info.</param>
            <param name="parentsName">Name of the parents.</param>
            <param name="o">The o.</param>
            <param name="type">The type.</param>
            <param name="assetFieldMetadata">The asset field metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.WriteSpAttributes(System.Xml.XmlWriter,UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField)">
            <summary>
                Writes the sp attributes.
            </summary>
            <param name="xmlWriter">The XML writer.</param>
            <param name="assetField">The asset field.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.SecurityGroup">
            <summary>
            Gets the security group.
            </summary>
            <value>
            The security group.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.CreateContainer">
            <summary>
                Gets or sets a value indicating whether [create container].
            </summary>
            <value>
                <c>true</c> if [create container]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.ContainerId">
            <summary>
                Gets or sets the db container id.
            </summary>
            <value>The db container id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.Name">
            <summary>
                Gets or sets the Aria name.  This is the name that can be edited in the Aria portal.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.Type">
            <summary>
                Gets or sets the container type.
            </summary>
            <value>
                The type.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase.CompanyId">
            <summary>
                Gets or sets the company id.
            </summary>
            <value>
                The company id.
            </value>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TaskBase"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.ActualDuration">
            <summary>
                Gets or sets the actual duration.
            </summary>
            <value>The actual duration.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Title">
            <summary>
                Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.TaskOwner">
            <summary>
                Gets or sets the task owner.
            </summary>
            <value>The task owner.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.TaskNumber">
            <summary>
                Gets or sets the task number.
            </summary>
            <value>The task number.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Status">
            <summary>
                Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Predecessors">
            <summary>
                Gets or sets the predecessors.
            </summary>
            <value>The predecessors.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.ParentTaskNumber">
            <summary>
                The parent task number
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.ModifiedBy">
            <summary>
                Gets or sets the modified by.
            </summary>
            <value>The modified by.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Modified">
            <summary>
                Gets or sets the modified.
            </summary>
            <value>The modified.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Group">
            <summary>
                Gets or sets the group.
            </summary>
            <value>The group.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.EstimatedStartDayNumber">
            <summary>
                Gets or sets the estimated start day number.
            </summary>
            <value>The estimated start day number.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.EstimatedDuration">
            <summary>
                Gets or sets the duration of the estimated.
            </summary>
            <value>The duration of the estimated.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Comment">
            <summary>
                Gets or sets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.ClientBarrierHours">
            <summary>
                Gets or sets the client barrier hours.
            </summary>
            <value>The client barrier hours.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Category">
            <summary>
                Gets or sets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Body">
            <summary>
                Gets or sets the body.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Progress">
            <summary>
                Gets or sets the progress.
            </summary>
            <value>The progress.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.CreationOrder">
            <summary>
            Gets or sets the creation order.
            </summary>
            <value>The creation order.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.StartDate">
            <summary>
                Gets or sets the start date.
            </summary>
            <value>The start date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.DueDate">
            <summary>
                Gets or sets the due date.
            </summary>
            <value>The due date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.PercentComplete">
            <summary>
                Gets or sets the percent complete.
            </summary>
            <value>The percent complete.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.IsProjectHandlerRestricted">
            <summary>
            Gets or sets a value indicating whether this instance is project handler restricted.
            </summary>
            <value>
            <c>true</c> if this instance is project handler restricted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskBase.ShouldTriggerBilling">
            <summary>
            Gets or sets a value indicating whether [should trigger billing].
            </summary>
            <value><c>true</c> if [should trigger billing]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskCategory">
            <summary>
            
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskCategory.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskCategory.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskHistory">
            <summary>
                Class TaskHistory
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskHistory.CreatedBy">
            <summary>
                Gets or sets the created by.
            </summary>
            <value>The created by.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskHistory.CreatedDate">
            <summary>
                Gets or sets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskHistory.Task">
            <summary>
                Gets or sets the task.
            </summary>
            <value>The task.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.TaskType">
            <summary>
            Class TaskType.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.TaskType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.TaskType"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.UL#Enterprise#Foundation#Data#ISearchResult#Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.BusinessUnits">
            <summary>
            Gets or sets the business units.
            </summary>
            <value>The business units.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.Links">
            <summary>
            Gets or sets the links.
            </summary>
            <value>The links.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.EstimatedDuration">
            <summary>
                Gets or sets the duration of the estimated.
            </summary>
            <value>The duration of the estimated.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.TaskOwner">
            <summary>
                Gets or sets the task owner.
            </summary>
            <value>The task owner.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.DocumentTemplates">
            <summary>
            Gets or sets the document templates.
            </summary>
            <value>
            The document templates.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.Notifications">
            <summary>
            Gets or sets the notifications.
            </summary>
            <value>
            The notifications.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.CreatedByLoginId">
            <summary>
            Gets or sets the created by login identifier.
            </summary>
            <value>
            The created by login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.UpdatedByLoginId">
            <summary>
            Gets or sets the updated by login identifier.
            </summary>
            <value>
            The updated by login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.BusinessUnitCodes">
            <summary>
            Gets or sets the business unit codes.
            </summary>
            <value>
            The business unit codes.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.IsDeleted">
            <summary>
            Gets or sets a value indicating whether this instance is deleted.
            </summary>
            <value>
            <c>true</c> if this instance is deleted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.PreventDeletion">
            <summary>
            Gets or sets a value indicating whether [prevent deletion].
            </summary>
            <value><c>true</c> if [prevent deletion]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.TaskType.TaskTypeBehaviors">
            <summary>
            Gets or sets the task type behaviors.
            </summary>
            <value>
            The task type behaviors.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.UserTeam">
            <summary>
            User team class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.UserTeam.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.UserTeam"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeam.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeam.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeam.TeamMembers">
            <summary>
            Gets or sets the team members.
            </summary>
            <value>
            The team members.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeam.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeam.UL#Enterprise#Foundation#Data#ISearchResult#ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeam.UL#Enterprise#Foundation#Data#ISearchResult#EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeam.UL#Enterprise#Foundation#Data#ISearchResult#Metadata">
            <summary>
            Not implemented for this class, returns nulll.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeam.UL#Enterprise#Foundation#Data#ISearchResult#Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.UserTeamMember">
            <summary>
            User team member class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeamMember.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeamMember.UserLoginId">
            <summary>
            Gets or sets the user login identifier.
            </summary>
            <value>
            The user login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeamMember.UserTeamId">
            <summary>
            Gets or sets the user team identifier.
            </summary>
            <value>
            The user team identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeamMember.IncludedUserTeamId">
            <summary>
            Gets or sets the included user team identifier.
            </summary>
            <value>
            The included user team identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeamMember.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeamMember.UL#Enterprise#Foundation#Data#ISearchResult#ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeamMember.UL#Enterprise#Foundation#Data#ISearchResult#EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeamMember.UL#Enterprise#Foundation#Data#ISearchResult#Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeamMember.UL#Enterprise#Foundation#Data#ISearchResult#Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserTeamMember.UL#Enterprise#Foundation#Data#ISearchResult#Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Lookup.BusinessUnit">
            <summary>
            Business Unit Domain Model
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Lookup.BusinessUnit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Lookup.BusinessUnit"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Lookup.BusinessUnit.#ctor(System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Lookup.BusinessUnit"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.Name">
            <summary>
            Gets or sets the name of the business unit.
            </summary>
            <value>
            The name of the business unit.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.EntityType">
            <summary>
            Gets or sets the entity type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.Code">
            <summary>
            BusinessUnitCode
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.Note">
            <summary>
            Gets the note.
            </summary>
            <value>
            The note.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.UL#Enterprise#Foundation#Data#ISearchResult#EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.UpdatedByLoginId">
            <summary>
            Gets or sets the updated by login identifier.
            </summary>
            <value>
            The updated by login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.CreatedByLoginId">
            <summary>
            Gets or sets the created by login identifier.
            </summary>
            <value>
            The created by login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.BusinessUnit.IsDeletePrevented">
            <summary>
            Gets or sets a value indicating whether this instance is delete prevented.
            </summary>
            <value>
            <c>true</c> if this instance is delete prevented; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.MetaDelta">
            <summary>
            Provides a data contract to show diferences at a field level for a specific version of an entity.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.MetaDelta.OrignalValue">
            <summary>
            Gets or sets the orignal value.
            </summary>
            <value>
            The orignal value.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.MetaDelta.ModifiedValue">
            <summary>
            Gets or sets the modified value.
            </summary>
            <value>
            The modified value.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.MetaDelta.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.MetaDelta.AriaFieldName">
            <summary>
            Gets or sets the name of the aria field.
            </summary>
            <value>
            The name of the aria field.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskDelta">
            <summary>
            Provides a classifier that contains information about the change and the list of field level delta.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskDelta.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TaskDelta"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskDelta.MetaDeltaList">
            <summary>
            Gets or sets the meta delta list.
            </summary>
            <value>
            The meta delta list.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskDelta.CreatedBy">
            <summary>
            Gets or sets the created by.
            </summary>
            <value>
            The created by.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskDelta.CreatedDate">
            <summary>
            Gets or sets the created date.
            </summary>
            <value>
            The created date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskDelta.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.History">
            <summary>
            History Domain Model
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.History.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.History"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.History.HistoryId">
            <summary>
            Primary guid
            PK guid
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.History.EntityId">
            <summary>
            Entity reference guid
            FK guid for project,task,order,product,request,company
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.History.ActionDate">
            <summary>
            DateTime.UtcNow
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.History.ActionUserId">
            <summary>
            Guid for UserContext.CurrentUser
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.History.ActionUserText">
            <summary>
            String for UserContext.CurrentUser
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.History.ActionType">
            <summary>
            String for Created,Changed,Deleted
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.History.ActionDetail">
            <summary>
            String for now, maybe a sub-model based on Type
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.History.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.History.TrackedInfo">
            <summary>
            Gets or sets the tracked items.
            </summary>
            <value>
            The tracked items.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.History.ActionDetailEntityType">
            <summary>
            Gets or sets the type of the action detail entity.
            </summary>
            <value>The type of the action detail entity.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ServiceCode">
            <summary>
                Service Code
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Lookup">
            <summary>
            Lookup object, contains name and minimum number of ids needed to do a entity lookup.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Lookup.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Lookup.ContainerId">
            <summary>
            Gets or sets the container identifier. 
            Note: this Property will be null when not applicable.
            </summary>
            <value>
            The container identifier.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.MetaDataLink">
            <summary>
                Class MetaDataLink.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.MetaDataLink.ParentId">
            <summary>
                Gets or sets the parent id.
            </summary>
            <value>The parent id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.MetaDataLink.AssetId">
            <summary>
                Gets or sets the asset id.
            </summary>
            <value>The asset id.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Notification">
            <summary>
            Notification Domain Enity.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Notification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Notification"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Notification.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Notification"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Notification.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Notification.NotificationType">
            <summary>
            Gets or sets the type of the notification.
            </summary>
            <value>
            The type of the notification.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Notification.EntityId">
            <summary>
            Gets or sets the entity identifier.
            </summary>
            <value>
            The entity identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Notification.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Notification.Body">
            <summary>
            Gets or sets the notification body.
            </summary>
            <value>
            The notification body.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Notification.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Notification.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>       
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Notification.ContainerId">
            <summary>
            Gets or sets the container identifier, this is only used when the Enity Type 
            is managed in SharePoint.
            </summary>
            <value>
            The container identifier.
            </value>    
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.OrderServiceLineDetail">
            <summary>
                Class OrderServiceLineDetail.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.OrderServiceLineDetail.OrderId">
            <summary>
                Gets or sets the order identifier.
            </summary>
            <value>The order identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.OrderServiceLineDetail.LineId">
            <summary>
                Gets or sets the line identifier.
            </summary>
            <value>The line identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.OrderServiceLineDetail.SenderName">
            <summary>
                Gets or sets the name of the sender.
            </summary>
            <value>The name of the sender.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.OrderServiceLineDetail.GroupName">
            <summary>
                Gets or sets the name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.OrderServiceLineDetail.OriginalXml">
            <summary>
                Gets or sets the original XML.
            </summary>
            <value>The original XML.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.OrderServiceLineDetail.LineXml">
            <summary>
                Gets or sets the line XML.
            </summary>
            <value>The line XML.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.OrderServiceLineDetail.SenderId">
            <summary>
                Gets or sets the sender identifier.
            </summary>
            <value>The sender identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.OrderServiceLineDetail.HasCustom">
            <summary>
                Gets or sets a value indicating whether this instance has custom.
            </summary>
            <value><c>true</c> if this instance has custom; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.FavoriteSearch">
            <summary>
            Saved search domain entity.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.FavoriteSearch.Name">
            <summary>
            Gets or sets the saved search name.
            </summary>
            <value>
            The saved search name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.FavoriteSearch.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.FavoriteSearch.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.FavoriteSearch.SearchCriteria">
            <summary>
            Gets or sets the search criteria.
            </summary>
            <value>
            The search criteria.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.FavoriteSearch.ActiveDefault">
            <summary>
            Gets or sets a value indicating whether [active default].
            </summary>
            <value>
              <c>true</c> if [active default]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.FavoriteSearch.AvailableDefault">
            <summary>
            Gets or sets a value indicating whether [available default].
            </summary>
            <value>
              <c>true</c> if [available default]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch">
            <summary>
            Partial update favorite search class.
            </summary>
            <remarks>This class should only be consumed for partial updates.</remarks>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch.SearchCriteria">
            <summary>
            Gets or sets the search criteria.
            </summary>
            <value>
            The search criteria.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch.ActiveDefault">
            <summary>
            Gets or sets a value indicating whether [active default].
            </summary>
            <value>
              <c>true</c> if [active default]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch.AvailableDefault">
            <summary>
            Gets or sets a value indicating whether [available default]. 
            </summary>
            <value>
              <c>true</c> if [available default]; otherwise, <c>false</c>
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel">
            <summary>
                Class ProductFamilyCharacteristicUpload
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel.CharacteristicId">
            <summary>
                Gets or sets the characteristic identifier.
            </summary>
            <value>The characteristic identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel.CharacteristicType">
            <summary>
                Gets or sets the characteristic type id.
            </summary>
            <value>
                The characteristic type id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel.AllowedFeatureValueIds">
            <summary>
                Gets or sets the allowed feature value ids.
            </summary>
            <value>The allowed feature value ids.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel.OptionIds">
            <summary>
            Gets or sets the options.
            </summary>
            <value>
            The options.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyDetail">
            <summary>
                Class ProductFamilyDetail
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyDetail.ProductFamily">
            <summary>
                Gets or sets the product family.
            </summary>
            <value>The product family.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyDetail.Characteristics">
            <summary>
                Gets or sets the characteristics.
            </summary>
            <value>The characteristics.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyDetail.Dependencies">
            <summary>
                Gets or sets the dependency mappings.
            </summary>
            <value>The dependency mappings.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency">
            <summary>
            Describes dependencies between <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue"/> objects within a family.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency.ParentProductFamilyFeatureAllowedValueId">
            <summary>
            Gets or sets the parent product family feature allowed value.
            </summary>
            <value>
            The parent product family feature allowed value.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency.ChildProductFamilyFeatureAllowedValueId">
            <summary>
            Gets or sets the child product family feature allowed value.
            </summary>
            <value>
            The child product family feature allowed value.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency">
            <summary>
            Dependency for product family features.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency.ParentId">
            <summary>
                Gets or sets the parent.
            </summary>
            <value>
                The parent.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency.ParentValueIds">
            <summary>
                Gets or sets the parent value ids.
            </summary>
            <value>The parent value ids.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency.ChildId">
            <summary>
                Gets or sets the child.
            </summary>
            <value>
                The child.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency.ChildValueIds">
            <summary>
                Gets or sets the child value ids.
            </summary>
            <value>The child value ids.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessageServiceLine">
            <summary>
            Status information pertaining to order service lines
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessageServiceLine.ProjectServiceLineId">
            <summary>
            Gets or sets the project service lind id.
            </summary>
            <value>
            The project service lind id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessageServiceLine.ServiceLineAction">
            <summary>
            Gets or sets the service line action.
            </summary>
            <value>
            The service line action.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessageServiceLine.ServiceLine">
            <summary>
            Gets or sets the service line.
            </summary>
            <value>
            The service line.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessage">
            <summary>
                Status messages pertaining to projects
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessage"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessage"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.ProjectId">
            <summary>
                Gets or sets the project id.
            </summary>
            <value>
                The project id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.NewStatus">
            <summary>
                Gets or sets the new status.
            </summary>
            <value>
                The new status.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.OldStatus">
            <summary>
                Gets or sets the old status.
            </summary>
            <value>
                The old status.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.ProjectName">
            <summary>
                Gets or sets the name of the project.
            </summary>
            <value>
                The name of the project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.ProjectNumber">
            <summary>
                Gets or sets the project number.
            </summary>
            <value>
                The project number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.OrderNumber">
            <summary>
                Gets or sets the order number.
            </summary>
            <value>
                The order number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.ExternalProjectId">
            <summary>
                Gets or sets the external project id.
            </summary>
            <value>
                The external project id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.ProjectServiceLineStatuses">
            <summary>
                Gets or sets the order service line statuses.
            </summary>
            <value>
                The order service line statuses.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.EventId">
            <summary>
                Gets or sets the event id.
            </summary>
            <value>
                The event id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.WorkOrderBusinessComponentId">
            <summary>
                Gets or sets the work order business component id.
            </summary>
            <value>The work order business component id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.WorkOrderId">
            <summary>
                Gets or sets the work order id.
            </summary>
            <value>The work order id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectStatusMessage.CorrelationId">
            <summary>
            Gets or sets the correlation identifier.
            </summary>
            <value>
            The correlation identifier.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProjectDetail">
            <summary>
            A <see cref="P:UL.Aria.Service.Domain.Entity.ProjectDetail.Project"/> with its <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProjectDetail.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProjectDetail"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectDetail.Project">
            <summary>
            Gets or sets the project.
            </summary>
            <value>
            The project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectDetail.Tasks">
            <summary>
            Gets the tasks.
            </summary>
            <value>
            The tasks.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectDetail.ParentTasks">
            <summary>
            Gets the parent tasks.
            </summary>
            <value>
            The parent tasks.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectDetail.ProductIds">
            <summary>
            Gets the products.
            </summary>
            <value>
            The products.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectDetail.CanDeleteTasks">
            <summary>
            Gets or sets a value indicating whether this instance can delete tasks.
            </summary>
            <value>
            <c>true</c> if this instance can delete tasks; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Sender">
            <summary>
                Class Sender.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Sender.Id">
            <summary>
                Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Sender.GroupName">
            <summary>
                Gets or sets the name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Sender.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskCompletionHistory">
            <summary>
            Class TaskCompletionHistoryDtoy
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskHistoryBase">
            <summary>
            Base class for <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> history.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskHistoryBase.CreatedBy">
            <summary>
            Gets or sets the created by.
            </summary>
            <value>The created by.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskHistoryBase.CreatedDate">
            <summary>
            Gets or sets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskHistoryBase.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskCompletionHistory.Completion">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskCompletionHistory.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskContainer">
            <summary>
                Class TaskContainer.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskContainer.ContainerId">
            <summary>
                Gets or sets the container identifier.
            </summary>
            <value>The container identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskContainer.Tasks">
            <summary>
                Gets or sets the tasks.
            </summary>
            <value>The tasks.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskProjectMapping">
            <summary>
            Mapping betwee project and tasks
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProjectMapping.ProjectId">
            <summary>
            Gets or sets the project id.
            </summary>
            <value>
            The project id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProjectMapping.ProjectName">
            <summary>
            Gets or sets the name of the project.
            </summary>
            <value>
            The name of the project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskProjectMapping.Task">
            <summary>
            Gets or sets the task.
            </summary>
            <value>
            The task.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskStatusHistory">
            <summary>
            Class TaskStatusHistory
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskStatusHistory.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskStatusHistory.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.IndustryCode">
            <summary>
                Industry Code
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.NameValuePair">
            <summary>
            Provides a Name value object.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.NameValuePair.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.NameValuePair.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Repository.AssociatedPrimaryRepository`1">
            <summary>
            
            </summary>
            <typeparam name="E"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Domain.Repository.AssociatedPrimaryRepository`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Repository.AssociatedPrimaryRepository`1"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Repository.AssociatedPrimaryRepository`1.MapPrimaryEntityToDataRow(`0,System.Data.DataRow)">
            <summary>
            Maps the primary entity to data row.
            </summary>
            <param name="src">The source.</param>
            <param name="dest">The dest.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Repository.AssociatedPrimaryRepository`1.DefinePrimaryEntityIDataReaderMapping(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the primary entity i data reader mapping.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="T:UL.Aria.Service.Domain.Repository.PrimaryRepository`1">
            <summary>
            
            </summary>
            <typeparam name="E"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Domain.Repository.PrimaryRepository`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Repository.PrimaryRepository`1"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Repository.PrimaryRepository`1.MapPrimaryEntityToDataRow(`0,System.Data.DataRow)">
            <summary>
            Maps the primary entity to data row.
            </summary>
            <param name="src">The source.</param>
            <param name="dest">The dest.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Repository.PrimaryRepository`1.DefinePrimaryEntityIDataReaderMapping(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the primary entity i data reader mapping.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="T:UL.Aria.Service.Domain.Lookup.DocumentTemplate">
            <summary>
            Class DocumentTemplate.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Lookup.DocumentTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Lookup.DocumentTemplate"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Lookup.DocumentTemplate.#ctor(System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.DocumentId">
            <summary>
            Gets or sets the document identifier.
            </summary>
            <value>The document identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.BusinessUnits">
            <summary>
            Gets or sets the business units.
            </summary>
            <value>The business units.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.BusinessUnitCodes">
            <summary>
            Gets or sets the business unit codes.
            </summary>
            <value>The business unit codes.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.EntityType">
            <summary>
            Gets or sets the entity type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>The change date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.UL#Enterprise#Foundation#Data#ISearchResult#EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.CreatedByLoginId">
            <summary>
            Gets or sets the created by login identifier.
            </summary>
            <value>
            The created by login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.UpdatedByLoginId">
            <summary>
            Gets or sets the updated by login identifier.
            </summary>
            <value>
            The updated by login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Lookup.DocumentTemplate.IsDeleted">
            <summary>
            Gets or sets a value indicating whether this instance is deleted.
            </summary>
            <value>
            <c>true</c> if this instance is deleted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.CompanySearchResult">
            <summary>
            A search result for a <see cref="P:UL.Aria.Service.Domain.Search.CompanySearchResult.Company"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.SearchResult">
            <summary>
            Represents a search result
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResult.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResult.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResult.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResult.EntityType">
            <summary>
            Gets or sets the entity type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResult.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResult.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResult.UL#Enterprise#Foundation#Data#ISearchResult#EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.CompanySearchResult.Company">
            <summary>
            Gets or sets the <see cref="P:UL.Aria.Service.Domain.Search.CompanySearchResult.Company"/>.
            </summary>
            <value>
            The company.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.CompanySearchResultSet">
            <summary>
            <see cref="T:UL.Aria.Service.Domain.Search.SearchResult"/> implementation that is customised to support <see cref="T:UL.Aria.Service.Domain.Entity.Company"/> objects.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.SearchResultSetBase`1">
            <summary>
            Base class for search result sets.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.SearchResultSetBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Search.SearchResultSetBase`1"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResultSetBase`1.Summary">
            <summary>
            Gets or sets the summary for this result set
            </summary>
            <value>
            The summary.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResultSetBase`1.Results">
            <summary>
            Gets or sets the results.
            </summary>
            <value>
            The results.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResultSetBase`1.SearchCriteria">
            <summary>
            Gets or sets the search criteria.
            </summary>
            <value>
            The search criteria.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchResultSetBase`1.RefinerResults">
            <summary>
                Gets or sets the refiner results.
            </summary>
            <value>The refiner results.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.DepartmentCodeSearchResult">
            <summary>
            Class DepartmentCodeSearchResult.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.LookupCodeSearchResult`1">
            <summary>
            Search result for <see cref="T:UL.Aria.Service.Domain.Entity.LookupCodeBase"/> entities. 
            </summary>
            <typeparam name="TLookupCode">The type of the lookup code.</typeparam>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.LookupCodeSearchResult`1.LookupCode">
            <summary>
            Gets or sets the lookup code.
            </summary>
            <value>
            The industry code.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.DepartmentCodeSearchResultSet">
            <summary>
            Class DepartmentCodeSearchResultSet.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.IndustryCodeSearchResult">
            <summary>
            <see cref="T:UL.Aria.Service.Domain.Search.SearchResult"/> for <see cref="T:UL.Aria.Service.Domain.Entity.IndustryCode"/> objects.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.IndustryCodeSearchResultSet">
            <summary>
            <see cref="T:UL.Aria.Service.Domain.Search.SearchResultSet"/> for <see cref="T:UL.Aria.Service.Domain.Entity.IndustryCode"/> objects.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.ISearchRepositoryBase`1">
            <summary>
            
            </summary>
            <typeparam name="TDomainEntity">The type of the domain entity.</typeparam>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.ISearchRepositoryBase`1.DefaultSearch``1(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Defaults the search.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.LinkSearchResult">
            <summary>
            Link Search Result.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.LinkSearchResult.Link">
            <summary>
            Gets or sets the link.
            </summary>
            <value>
            The link.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.LinkSearchResultSet">
            <summary>
            Link Search result domain entity.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.OrderServiceLineDetailSearchResult">
            <summary>
                Class OrderServiceLineDetailSearchResult.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.OrderServiceLineDetailSearchResult.OrderServiceLineDetail">
            <summary>
                Gets or sets the order service line detail.
            </summary>
            <value>The order service line detail.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.OrderServiceLineDetailSearchResultSet">
            <summary>
                Class OrderServiceLineDetailSearchResultSet.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.FavoriteSearchSearchResult">
            <summary>
            Favorite search result class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.FavoriteSearchSearchResult.Criteria">
            <summary>
            Gets or sets the search criteria.
            </summary>
            <value>
            The search criteria.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.FavoriteSearchSearchResult.Summary">
            <summary>
            Gets or sets the search summary.
            </summary>
            <value>
            The search summary.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.FavoriteSearchSearchResult.FavoriteSearches">
            <summary>
            Gets or sets the favorite searches.
            </summary>
            <value>
            The favorite searches.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.SearchBaseResultSet`1">
            <summary>
            Class SearchBaseResultSet.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchBaseResultSet`1.Results">
            <summary>
            Gets or sets the search results.
            </summary>
            <value>
            The results.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchBaseResultSet`1.SearchCriteria">
            <summary>
            Gets or sets the search criteria.
            </summary>
            <value>
            The search criteria.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchBaseResultSet`1.Summary">
            <summary>
            Gets or sets the total results.
            </summary>
            <value>s
            The total results.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.SearchRepositoryBase`1">
            <summary>
            Abstract Repository for adding a Base Search functionallity
            </summary>
            <typeparam name="TSearchDomainEntity">The type of the search domain entity.</typeparam>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.SearchRepositoryBase`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Search.SearchRepositoryBase`1"/> class.
            </summary>
            <param name="dbIdFieldName">Name of the database identifier field.</param>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.SearchRepositoryBase`1.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Aria.Service.Domain.Search.SearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            When implemented in derived classes, allows for additional situation specific paramters to be added beyond
            the minimum parameters handled by the InitializeSearchCommand method.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.SearchRepositoryBase`1.DefaultSearch``1(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>ProjectTemplateSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.SearchRepositoryBase`1.InitializeSearchCommand(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Initializes the search command.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.SearchRepositoryBase`1.ExecuteSearchCommand``1(System.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand},System.Func{System.Data.IDataReader,UL.Aria.Service.Domain.Search.SearchResultSetBase{``0}},System.Func{System.Data.IDataReader,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{UL.Enterprise.Foundation.Data.IRefinementItem}}})">
            <summary>
            Executes the reader command.
            </summary>
            <typeparam name="T">Domain entity type</typeparam>
            <param name="InitializeCommandDelegate">The initialize command delegate.</param>
            <param name="ConstructSearchResultSetDelegate">The construct search result set delegate.</param>
            <param name="ConstructRefinersDelegate">The construct refiners delegate.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.SearchRepositoryBase`1.SetMapperConfiguration``1">
            <summary>
            Sets the mapper configuration.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.SearchRepositoryBase`1.AddFilter(System.Data.Common.DbCommand,UL.Aria.Service.Domain.Search.SearchCriteria,System.String,System.String)">
            <summary>
            Adds the filter.
            </summary>
            <param name="cmd">The command.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="assetFieldName">Name of the asset field.</param>
            <param name="parameterName">Name of the parameter.</param>       
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchRepositoryBase`1.TableName">
            <summary>
                Gets the name of the table.
            </summary>
            <value>
                The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.ServiceCodeSearchResult">
            <summary>
            <see cref="T:UL.Aria.Service.Domain.Search.SearchResult"/> for <see cref="T:UL.Aria.Service.Domain.Entity.ServiceCode"/> objects.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.ServiceCodeSearchResultSet">
            <summary>
            <see cref="T:UL.Aria.Service.Domain.Search.SearchResultSet"/> for <see cref="T:UL.Aria.Service.Domain.Entity.ServiceCode"/> objects.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.TaskTemplateSearchResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.TaskTemplateSearchResult.TaskTemplate">
            <summary>
            Gets or sets the task template.
            </summary>
            <value>
            The task template.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.TaskCategorySearchResultSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.TaskCategorySearchResultSet.Criteria">
            <summary>
            Gets or sets the search criteria.
            </summary>
            <value>
            The search criteria.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.TaskCategorySearchResultSet.Summary">
            <summary>
            Gets or sets the search summary.
            </summary>
            <value>
            The search summary.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.TaskCategorySearchResultSet.Results">
            <summary>
            Gets or sets the favorite searches.
            </summary>
            <value>
            The favorite searches.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.SharePoint.MetaDataTypeAndValue">
            <summary>
            Struct MetaDataTypeAndValue
            Encapsulates type and value
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.SharePoint.MetaDataTypeAndValue.MetadataType">
            <summary>
            The metadata type
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.SharePoint.MetaDataTypeAndValue.MetadataValue">
            <summary>
            The metadata value
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.SharePoint.SharePointContainer">
            <summary>
            Class Container
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.SharePoint.SharePointContainer.DefaultLocale">
            <summary>
            The default locale
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.SharePoint.SharePointContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.Container"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.SharePoint.SharePointContainer.GetListsWithClaims">
            <summary>
            Gets the lists with claims.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.SharePoint.SharePointContainer.GuidToName(System.Guid)">
            <summary>
            GUIDs to name.
            </summary>
            <param name="id">The id.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Parse(System.String)">
            <summary>
            
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Lists">
            <summary>
            Gets or sets the lists.
            </summary>
            <value>The lists.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Groups">
            <summary>
            Gets or sets the groups.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.ContainerType">
            <summary>
            Gets or sets the type of the container.
            </summary>
            <value>The type of the container.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Locale">
            <summary>
            Gets the locale.
            </summary>
            <value>The locale.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Partition">
            <summary>
            Gets or sets the partition.
            </summary>
            <value>The partition.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.MetaData">
            <summary>
            Gets or sets the meta data.
            </summary>
            <value>The meta data.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainer.Definition">
            <summary>
            Gets or sets the definition.
            </summary>
            <value>The definition.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.SharePoint.SharePointContainerClaim">
            <summary>
            Class SharePointContainerClaim
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainerClaim.ClaimType">
            <summary>
            Gets or sets the type of the claim.
            </summary>
            <value>The type of the claim.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainerClaim.ClaimValue">
            <summary>
            Gets or sets the claim value.
            </summary>
            <value>The claim value.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainerClaim.ClaimValueType">
            <summary>
            Gets or sets the type of the claim value.
            </summary>
            <value>The type of the claim value.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.SharePoint.SharePointContainerGroup">
            <summary>
            Class SharePointContainerGroup
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainerGroup.GroupName">
            <summary>
            Gets or sets the name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainerGroup.Claims">
            <summary>
            Gets or sets the claims.
            </summary>
            <value>The claims.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.SharePoint.SharePointContainerGroupPermission">
            <summary>
            Class ContainerGroupPermission
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainerGroupPermission.GroupName">
            <summary>
            Gets or sets the name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainerGroupPermission.Permission">
            <summary>
            Gets or sets the permission.
            </summary>
            <value>The permission.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.SharePoint.SharePointContainerList">
            <summary>
            Class SharePointContainerList
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.SharePoint.SharePointContainerList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.SharePoint.SharePointContainerList"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainerList.ListName">
            <summary>
            Gets or sets the name of the list.
            </summary>
            <value>The name of the list.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainerList.ListType">
            <summary>
            Gets or sets the type of the list.
            </summary>
            <value>The type of the list.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.SharePoint.SharePointContainerList.GroupPermissions">
            <summary>
            Gets or sets the group permissions.
            </summary>
            <value>The group permissions.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.SharePoint.SharePointContainerListType">
            <summary>
            Enum SharePointContainerListType
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.SharePoint.SharePointContainerListType.Document">
            <summary>
            The document
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.SharePoint.SharePointContainerListType.Task">
            <summary>
            The task
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Validator.FavoriteSearchValidator">
            <summary>
            Favorite search validator class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Validator.FavoriteSearchValidator.#ctor(UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Validator.FavoriteSearchValidator"/> class.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Validator.FavoriteSearchValidator.ValidateInstance(UL.Aria.Service.Domain.Entity.FavoriteSearch,System.Collections.Generic.List{System.String})">
            <summary>
            Validates the instance.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Domain.View.ContactUs">
            <summary>
            The view model for the contact us email
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ContactUs.ContactEmail">
            <summary>
            Gets or sets the contact email.
            </summary>
            <value>
            The contact email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ContactUs.IndustryName">
            <summary>
            Gets or sets the industry.
            </summary>
            <value>
            The industry.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ContactUs.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ContactUs.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ContactUs.ContactCopyEmail">
            <summary>
            Gets or sets the contact copy email.
            </summary>
            <value>
            The contact copy email.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.View.NewCompanyEmail">
            <summary>
                Create new company email
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.NewCompanyEmail.OrderNumber">
            <summary>
            Gets or sets the order number.
            </summary>
            <value>
            Order Number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.NewCompanyEmail.CompanyName">
            <summary>
            Gets or sets the name of the company.
            </summary>
            <value>
            Company Name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.NewCompanyEmail.AccountNumber">
            <summary>
            Gets or sets the account number.
            </summary>
            <value>
            Account Number.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.View.ProjectAssignmentEmail">
            <summary>
                Project creation emails
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectAssignmentEmail.ProjectId">
            <summary>
            Gets or sets the project unique identifier.
            </summary>
            <value>
            The project unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectAssignmentEmail.ProjectName">
            <summary>
            Gets or sets the name of the project.
            </summary>
            <value>
            The name of the project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectAssignmentEmail.ActorLoginId">
            <summary>
            Gets or sets the actor login unique identifier.
            </summary>
            <value>
            The actor login unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectAssignmentEmail.ActorId">
            <summary>
            Gets the id of the acting user.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectAssignmentEmail.RecipientName">
            <summary>
            Gets or sets the name of the recipient.
            </summary>
            <value>
            The name of the recipient.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectAssignmentEmail.ActorName">
             <summary>
             Gets or sets the name of the actor.
             </summary>
            <value>The actor name value.</value>         
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectAssignmentEmail.DueDate">
            <summary>
            Gets or sets the due date.
            </summary>
            <value>
            The due date.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.View.ProjectCompletedEmail">
            <summary>
            Class ProjectCompletedEmail. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectCompletedEmail.ProjectId">
            <summary>
            Gets or sets the project unique identifier.
            </summary>
            <value>
            The project unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectCompletedEmail.ProjectName">
            <summary>
            Gets or sets the name of the project.
            </summary>
            <value>
            The name of the project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectCompletedEmail.ActorLoginId">
            <summary>
            Gets or sets the actor login unique identifier.
            </summary>
            <value>
            The actor login unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectCompletedEmail.ActorId">
            <summary>
            Gets the id of the acting user.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectCompletedEmail.RecipientName">
            <summary>
            Gets or sets the name of the recipient.
            </summary>
            <value>
            The name of the recipient.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectCompletedEmail.ActorName">
             <summary>
             Gets or sets the name of the actor.
             </summary>
            <value>The actor name value.</value>         
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectCompletedEmail.DueDate">
            <summary>
            Gets or sets the due date.
            </summary>
            <value>
            The due date.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.View.ProjectEmail">
            <summary>
                Project creation emails
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectEmail.ProjectId">
            <summary>
            Gets or sets the project unique identifier.
            </summary>
            <value>
            The project unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectEmail.ProjectName">
            <summary>
            Gets or sets the name of the project.
            </summary>
            <value>
            The name of the project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectEmail.ActorLoginId">
            <summary>
            Gets or sets the actor login unique identifier.
            </summary>
            <value>
            The actor login unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectEmail.ActorId">
            <summary>
            Gets the id of the acting user.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectEmail.RecipientName">
            <summary>
            Gets or sets the name of the recipient.
            </summary>
            <value>
            The name of the recipient.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectEmail.ActorName">
             <summary>
             Gets or sets the name of the actor.
             </summary>
            <value>The actor name value.</value>         
        </member>
        <member name="T:UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail">
            <summary>
            Class ProjectOrderOwnerReassignedEmail. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail.ProjectId">
            <summary>
            Gets or sets the project unique identifier.
            </summary>
            <value>
            The project unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail.ProjectName">
            <summary>
            Gets or sets the name of the project.
            </summary>
            <value>
            The name of the project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail.ActorLoginId">
            <summary>
            Gets or sets the actor login unique identifier.
            </summary>
            <value>
            The actor login unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail.ActorId">
            <summary>
            Gets the id of the acting user.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail.RecipientName">
            <summary>
            Gets or sets the name of the recipient.
            </summary>
            <value>
            The name of the recipient.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail.ActorName">
             <summary>
             Gets or sets the name of the actor.
             </summary>
            <value>The actor name value.</value>         
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail.NewOrderOwner">
            <summary>
            Gets or sets the new order owner.
            </summary>
            <value>The new order owner.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail.OriginalOrderOwner">
            <summary>
            Gets or sets the original order owner.
            </summary>
            <value>The original order owner.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.View.TaskCompletedEmail">
            <summary>
                Task assignment cahnge emails
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.TaskId">
            <summary>
                Gets or sets the task id.
            </summary>
            <value>The task id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.ProjectId">
            <summary>
            Gets or sets the project unique identifier.
            </summary>
            <value>
            The project unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.ProjectName">
            <summary>
            Gets or sets the name of the project.
            </summary>
            <value>
            The name of the project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.TaskName">
            <summary>
                Gets or sets the name of the task.
            </summary>
            <value>
                The name of the task.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.DueDate">
            <summary>
                Gets or sets the due date.
            </summary>
            <value>
                The due date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.ActorName">
            <summary>
            Gets or sets the previous task owner.
            </summary>
            <value>
            The previous task owner.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.ActorLoginId">
            <summary>
            Gets or sets the actor login unique identifier.
            </summary>
            <value>
            The actor login unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.RecipientName">
            <summary>
            Gets or sets the name of the recipient.
            </summary>
            <value>
            The name of the recipient.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.TaskPhase">
            <summary>
            Gets or sets the task phase.
            </summary>
            <value>
            The task phase.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.TaskProgress">
            <summary>
            Gets or sets the task progress.
            </summary>
            <value>
            The task progress.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskCompletedEmail.LastPostedComment">
            <summary>
            Gets or sets the last posted comment.
            </summary>
            <value>
            The last posted comment.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.View.TaskEmail">
            <summary>
                Task assignment cahnge emails
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskEmail.TaskId">
            <summary>
                Gets or sets the task id.
            </summary>
            <value>The task id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskEmail.ProjectId">
            <summary>
            Gets or sets the project unique identifier.
            </summary>
            <value>
            The project unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskEmail.ProjectName">
            <summary>
            Gets or sets the name of the project.
            </summary>
            <value>
            The name of the project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskEmail.TaskName">
            <summary>
                Gets or sets the name of the task.
            </summary>
            <value>
                The name of the task.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskEmail.EndDate">
            <summary>
                Gets or sets the end date.
            </summary>
            <value>
                The end date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskEmail.ActorName">
            <summary>
            Gets or sets the previous task owner.
            </summary>
            <value>
            The previous task owner.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskEmail.ActorLoginId">
            <summary>
            Gets or sets the actor login unique identifier.
            </summary>
            <value>
            The actor login unique identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.View.TaskEmail.RecipientName">
            <summary>
            Gets or sets the name of the recipient.
            </summary>
            <value>
            The name of the recipient.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Implementation.BusinessUnitService">
            <summary>
            Implements operations for a service for <see cref="T:UL.Aria.Service.Contracts.Dto.BusinessUnitDto"/> entites.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.BusinessUnitService.#ctor(UL.Aria.Service.Manager.IBusinessUnitManager,UL.Aria.Common.Authorization.IAuthorizationManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.BusinessUnitService"/> class.
            </summary>
            <param name="businessUnitManager">The business unit manager.</param>
            <param name="authorizationManager">The authorization manager.</param>
            <param name="mapperRegistry"></param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.BusinessUnitService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteriaDto">The search criteria dto.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.BusinessUnitService.FetchById(System.String)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.BusinessUnitService.Create(UL.Aria.Service.Contracts.Dto.BusinessUnitDto)">
            <summary>
            Creates the specified task template.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.BusinessUnitService.Validate(UL.Aria.Service.Contracts.Dto.BusinessUnitDto)">
            <summary>
            Validates the specified business unit.
            </summary>
            <param name="entity"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.BusinessUnitService.Update(System.String,UL.Aria.Service.Contracts.Dto.BusinessUnitDto)">
            <summary>
            Updates the specified business unit identifier.
            </summary>
            <param name="id"></param>
            <param name="entity">The business unit.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.BusinessUnitService.Delete(System.String)">
            <summary>
            Deletes the task template by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.BusinessUnitService.FetchAll">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.CategoryService">
            <summary>
                Class CategoryService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CategoryService.#ctor(UL.Aria.Service.Provider.ICategoryProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.CategoryService"/> class.
            </summary>
            <param name="categoryProvider">The category provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CategoryService.FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{CategoryDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CategoryService.Fetch(System.String)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>CategoryDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CategoryService.Create(UL.Aria.Service.Contracts.Dto.CategoryDto)">
            <summary>
                Creates the specified category.
            </summary>
            <param name="category">The category.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CategoryService.Update(System.String,UL.Aria.Service.Contracts.Dto.CategoryDto)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="category">The category.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CategoryService.Delete(System.String)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.CertificationManagementService">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CertificationManagementService.#ctor(UL.Aria.Service.Manager.ICertificationRequestManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.CertificationManagementService"/> class.
            </summary>
            <param name="certificationRequestManager">The certification request manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CertificationManagementService.PublishCertificationRequest(UL.Aria.Service.Contracts.Dto.CertificationManagementDto)">
            <summary>
            Submits a certification request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CertificationManagementService.FetchCertificationRequests(System.String)">
            <summary>
            Fetches the certification requests.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">taskId</exception>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ContactService">
            <summary>
            Implements operations for working with <see cref="T:UL.Aria.Service.Contracts.Dto.IncomingOrderContactDto"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ContactService.#ctor(UL.Aria.Service.Manager.IContactManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ContactService"/> class.
            </summary>
            <param name="contactManager">The contact manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ContactService.UpdateByOrderNumber(System.String)">
            <summary>
            Forces updates of contacts based on Order Number. This operation will only trigger the operation.
            </summary>
            <param name="orderNumber">The order number.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ContentService">
            <summary>
                Class ContentService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ContentService.#ctor(UL.Aria.Service.Provider.IAssetProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ContentService"/> class.
            </summary>
            <param name="assetprovider">The assetprovider.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ContentService.Create(System.String,System.IO.Stream)">
            <summary>
                Creates the content with the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="contentStream">The content stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ContentService.Update(System.String,System.IO.Stream)">
            <summary>
                Updates the content specified by the id.
            </summary>
            <param name="id">The id.</param>
            <param name="contentStream">The content stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ContentService.Fetch(System.String)">
            <summary>
                Fetches the content specified by the id.
            </summary>
            <param name="id">The id.</param>
            <returns>Stream.</returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.CustomerService">
            <summary>
                Provides operations for customer information.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CustomerService.#ctor(UL.Aria.Service.Manager.ICustomerManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.CustomerService"/> class.
            </summary>
            <param name="customerManager">The customer manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CustomerService.Fetch(System.String)">
            <summary>
            Gets the customer.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.DepartmentCodeService">
            <summary>
                Class DepartmentCodeService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DepartmentCodeService.#ctor(UL.Aria.Service.Provider.IDepartmentCodeProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.DepartmentCodeService"/> class.
            </summary>
            <param name="departmentCodeProvider">The Department code provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DepartmentCodeService.FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{DepartmentCodeDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DepartmentCodeService.Fetch(System.String)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>DepartmentCodeDto</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DepartmentCodeService.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>DepartmentCodeDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DepartmentCodeService.Create(UL.Aria.Service.Contracts.Dto.DepartmentCodeDto)">
            <summary>
                Creates the specified Department code.
            </summary>
            <param name="departmentCode">The Department code.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DepartmentCodeService.Update(System.String,UL.Aria.Service.Contracts.Dto.DepartmentCodeDto)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="departmentCode">The Department code.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DepartmentCodeService.Delete(System.String)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DepartmentCodeService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.DocumentContentService">
            <summary>
            Class DocumentContentService. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentContentService.#ctor(UL.Aria.Service.Manager.IDocumentContentManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.DocumentContentService"/> class.
            </summary>
            <param name="documentContentManager">The document content manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentContentService.Create(System.String,System.String,System.IO.Stream)">
            <summary>
            Stores the document in the stream by the specified identifier with the content type.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contentType">Document content type.</param>
            <param name="stream">The document stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentContentService.Save(System.IO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentContentService.FetchById(System.String)">
            <summary>
            Fetches the document with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentContentService.CreateDocumentTemplate(System.String,System.String,System.IO.Stream)">
            <summary>
            This will create document templates and omits to assert provider call.Stores the document in the stream by the specified identifier with the content type.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contentType">Document content type.</param>
            <param name="stream">The document stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentContentService.PrepareDocumentForEdit(System.String,System.Boolean)">
            <summary>
            Prepares the document for edit.
            </summary>
            <param name="id">The identifier.</param>
            <param name="applyLock">if set to <c>true</c> [apply lock].</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.DocumentManagementService">
            <summary>
            Class DocumentManagementService.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentManagementService.#ctor(UL.Aria.Service.Manager.IDocumentManagementManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.DocumentManagementService"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentManagementService.CreateAndLink(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates the existing document in the container with the primary search entity and links it to the task.
            </summary>
            <param name="documentId">The document identifier.</param>
            <param name="containerId">The container identifier.</param>
            <param name="taskId">The task identifier.</param>
            <param name="metaData">The meta data.</param>
            <returns>The document Id, System.String.</returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.DocumentsService">
            <summary>
            Class DocumentsService.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentsService.#ctor(UL.Aria.Service.Manager.IDocumentManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.DocumentsService"/> class.
            </summary>
            <param name="documentManager">The document manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentsService.Create(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates the specified container identifier.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="metaData">The meta data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentsService.Update(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Updates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentsService.FetchById(System.String)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>IDictionary&lt;System.String, System.String&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentsService.Delete(System.String)">
            <summary>
            Deletes the document with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentsService.FetchDocumentById(System.String)">
            <summary>
            Fetches the document by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>DocumentDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentsService.Ping">
            <summary>
            Pings this instance.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentsService.Lock(System.String)">
            <summary>
            Locks the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentsService.Unlock(System.String)">
            <summary>
            Unlocks the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.DocumentTemplateService">
            <summary>
            Class DocumentTemplateService.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentTemplateService.#ctor(UL.Aria.Service.Manager.IDocumentTemplateManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.DocumentTemplateService"/> class.
            </summary>
            <param name="documentTemplateManager">The document template manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentTemplateService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the specified search criteria dto.
            </summary>
            <param name="searchCriteriaDto">The search criteria dto.</param>
            <returns>DocumentTemplateSearchResultSetDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentTemplateService.FetchById(System.String)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>DocumentTemplateDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentTemplateService.Create(UL.Aria.Service.Contracts.Dto.DocumentTemplateDto)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>DocumentTemplateDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentTemplateService.Update(System.String,UL.Aria.Service.Contracts.Dto.DocumentTemplateDto)">
            <summary>
            Updates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="entity">The entity.</param>
            <returns>DocumentTemplateDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentTemplateService.Delete(System.String)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentTemplateService.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.DocumentTemplateService.Validate(UL.Aria.Service.Contracts.Dto.DocumentTemplateDto)">
            <summary>
            Validates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.LinkService">
            <summary>
            Provides Link data services.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LinkService.#ctor(UL.Aria.Service.Manager.ILinkManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.LinkService"/> class.
            </summary>
            <param name="linkManager">The link manager.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LinkService.FetchById(System.String)">
            <summary>
            Fetches the link matching the specified id.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LinkService.FetchLinksByEntity(System.String)">
            <summary>
            Fetches all active links associated with the specified entityId.
            </summary>
            <param name="entityId">The owner entity identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LinkService.Delete(System.String)">
            <summary>
            Deletes a link with the specified linkId.
            </summary>
            <param name="linkId">The link identifier.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LinkService.Create(UL.Aria.Service.Contracts.Dto.LinkDto)">
            <summary>
            Creates the specified link.
            </summary>
            <param name="link">The link.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LinkService.Update(System.String,UL.Aria.Service.Contracts.Dto.LinkDto)">
            <summary>
            Updates the specified link.
            </summary>
            <param name="linkId">The link identifier.</param>
            <param name="link">The link.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LinkService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the specified search criteria dto.
            </summary>
            <param name="searchCriteriaDto">The search criteria dto.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LinkService.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Implementation.LocationCodeService">
            <summary>
                Class LocationCodeService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LocationCodeService.#ctor(UL.Aria.Service.Provider.ILocationCodeProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.LocationCodeService"/> class.
            </summary>
            <param name="locationCodeProvider">The location code provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LocationCodeService.FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{LocationCodeDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LocationCodeService.Fetch(System.String)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>LocationCodeDto</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LocationCodeService.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>LocationCodeDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LocationCodeService.Create(UL.Aria.Service.Contracts.Dto.LocationCodeDto)">
            <summary>
                Creates the specified Location code.
            </summary>
            <param name="locationCode">The location code.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LocationCodeService.Update(System.String,UL.Aria.Service.Contracts.Dto.LocationCodeDto)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="locationCode">The location code.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LocationCodeService.Delete(System.String)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.LookupService">
            <summary>
                fulfills operations for Lookup Services
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LookupService.#ctor(UL.Aria.Service.Manager.ILookupManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.LookupService"/> class.
            </summary>
            <param name="lookupManager">The business unit manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.LookupService.FetchAllBusinessUnits">
            <summary>
                Fetch all business units
            </summary>
            <returns>
                IEnumerable{BusinessUnitDto}
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.HistoryService">
            <summary>
                fulfills operations for
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.HistoryService.#ctor(UL.Aria.Service.Manager.IHistoryManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.HistoryService"/> class.
            </summary>
            <param name="historyManager">The history manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.HistoryService.FetchHistoryByEntityId(System.String)">
            <summary>
                Gets history items by entity id.
            </summary>
            <param name="id">The entity id.</param>
            <returns>
                IEnumerable{HistoryDto}
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.HistoryService.Create(UL.Aria.Service.Contracts.Dto.HistoryDto)">
            <summary>
                Creates a new history item.
            </summary>
            <param name="historyDto">The new history item.</param>
            <returns>historyId</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.HistoryService.DownloadHistoryByEntityId(System.String)">
            <summary>
            Downloads the history by entity identifier.
            </summary>
            <param name="id">The entity identifier.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.HistoryService.DownloadTaskHistory(System.String,System.String)">
            <summary>
            Downloads the task history.
            </summary>
            <param name="id">The identifier.</param>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.HistoryService.FetchTaskHistory(System.String,System.String)">
            <summary>
            Fetches the task history.
            </summary>
            <param name="id">The identifier.</param>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ServiceCodeService">
            <summary>
                Class ServiceCodeService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ServiceCodeService.#ctor(UL.Aria.Service.Provider.IServiceCodeProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ServiceCodeService"/> class.
            </summary>
            <param name="serviceCodeProvider">The Service code provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ServiceCodeService.FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{UnitOfMeasureDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ServiceCodeService.Fetch(System.String)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>ServiceCodeDto</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ServiceCodeService.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>ServiceCodeDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ServiceCodeService.Create(UL.Aria.Service.Contracts.Dto.ServiceCodeDto)">
            <summary>
                Creates the specified Service code.
            </summary>
            <param name="serviceCode">The Service code.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ServiceCodeService.Update(System.String,UL.Aria.Service.Contracts.Dto.ServiceCodeDto)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="serviceCode">The Service code.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ServiceCodeService.Delete(System.String)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ServiceCodeService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.NotificationService">
            <summary>
            Provides a Service Implemenation of the INotificationService interface.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.NotificationService.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.NotificationService"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.NotificationService.FetchById(System.String)">
            <summary>
            Fetches the notification matching the specified id.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.NotificationService.FetchNotificationsByUser(System.String)">
            <summary>
            Fetches all active notifications associated with the specified userId.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.NotificationService.FetchNotificationsByEntity(System.String)">
            <summary>
            Fetches all active notifications associated with the specified entityId.
            </summary>
            <param name="entityId">The owner entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.NotificationService.Delete(System.String)">
            <summary>
            Deletes a notification with the specified notificationId.
            </summary>
            <param name="notificationId">The notification identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.NotificationService.DeleteNotificationsForEntity(System.String)">
            <summary>
            Deletes the notifications associated with the specified entityId.
            </summary>
            <param name="entityId">The owner entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.NotificationService.Create(UL.Aria.Service.Contracts.Dto.NotificationDto)">
            <summary>
            Creates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.NotificationService.Update(UL.Aria.Service.Contracts.Dto.NotificationDto,System.String)">
            <summary>
            Updates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
            <param name="notificationId"></param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.NotificationService.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Contracts.Dto.NotificationDto},System.String)">
            <summary>
            Updates the list of notifications in the bulk for the specified entityId.
            </summary>
            <param name="notifications">The notifications.</param>
            <param name="entityId">The owner entity identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.OrderServiceLineDetailService">
            <summary>
                Class OrderServiceLineDetailService.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderServiceLineDetailService.#ctor(UL.Aria.Service.Provider.IOrderServiceLineDetailProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.OrderServiceLineDetailService"/> class.
            </summary>
            <param name="orderServiceLineDetailProvider">The order service line detail provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderServiceLineDetailService.Create(UL.Aria.Service.Contracts.Dto.OrderServiceLineDetailDto)">
            <summary>
                Creates the specified order service line detail.
            </summary>
            <param name="orderServiceLineDetail">The order service line detail.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderServiceLineDetailService.FetchAll">
            <summary>
                Fetches all order service line details.
            </summary>
            <returns>IList{OrderServiceLineDetailDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderServiceLineDetailService.Fetch(System.String,System.String)">
            <summary>
                Fetches a order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="lineId">The line identifier.</param>
            <returns>UL.Aria.Service.Contracts.Dto.OrderServiceLineDetailDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderServiceLineDetailService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
                Searches for order service line details by the specified search criteria.
                Note: Keyword should be a valid order id, sorting is fixed and not supported via the SearchCrieriaDto
                and refiners are not supported.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>OrderServiceLineDetailSearchResultSetDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderServiceLineDetailService.Update(System.String,UL.Aria.Service.Contracts.Dto.OrderServiceLineDetailDto)">
            <summary>
            Updates the specified order service line detail.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="orderServiceLineDetail">The order service line detail.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderServiceLineDetailService.Delete(System.String,System.String)">
            <summary>
                Deletes the order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="lineId">The line identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ProductFamilyFeatureValueService">
            <summary>
                Class ProductFamilyFeatureValueService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureValueService.#ctor(UL.Aria.Service.Provider.IProductFamilyFeatureValueProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ProductFamilyFeatureValueService"/> class.
            </summary>
            <param name="productFamilyFeatureValueProvider">The product family feature value provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureValueService.FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{ProductFamilyFeatureValueDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureValueService.Fetch(System.String)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>IList{ProductFamilyFeatureValueDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureValueService.FetchByProductFeatureId(System.String)">
            <summary>
            Fetches the by product family id.
            </summary>
            <param name="productFeatureId">The product feature id.</param>
            <returns>IList{ProductFamilyFeatureValueDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureValueService.Create(UL.Aria.Service.Contracts.Dto.ProductFamilyFeatureValueDto)">
            <summary>
                Creates the specified product family feature value.
            </summary>
            <param name="productFamilyFeatureValue">The product family feature value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureValueService.Update(System.String,UL.Aria.Service.Contracts.Dto.ProductFamilyFeatureValueDto)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="productFamilyFeatureValue">The product family feature value.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureValueService.Delete(System.String)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.IndustryCodeService">
            <summary>
                Class IndustryCodeService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IndustryCodeService.#ctor(UL.Aria.Service.Provider.IIndustryCodeProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.IndustryCodeService"/> class.
            </summary>
            <param name="industryCodeProvider">The industry code provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IndustryCodeService.FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{UnitOfMeasureDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IndustryCodeService.Fetch(System.String)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>IndustryCodeDto</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IndustryCodeService.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>IndustryCodeDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IndustryCodeService.Create(UL.Aria.Service.Contracts.Dto.IndustryCodeDto)">
            <summary>
                Creates the specified industry code.
            </summary>
            <param name="industryCode">The industry code.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IndustryCodeService.Update(System.String,UL.Aria.Service.Contracts.Dto.IndustryCodeDto)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="industryCode">The industry code.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IndustryCodeService.Delete(System.String)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IndustryCodeService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.TaskCategoryService">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskCategoryService.#ctor(UL.Aria.Service.Manager.ITaskCategoryManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.TaskCategoryService"/> class.
            </summary>
            <param name="taskCategoryManager">The task template manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskCategoryService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskCategoryService.FetchById(System.String)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskCategoryService.Create(UL.Aria.Service.Contracts.Dto.TaskCategoryDto)">
            <summary>
            Creates the specified task template.
            </summary>
            <param name="taskTemplate">The task template.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskCategoryService.Update(System.String,UL.Aria.Service.Contracts.Dto.TaskCategoryDto)">
            <summary>
            Updates the task template.
            </summary>
            <param name="taskCategoryId"></param>
            <param name="taskCategory"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskCategoryService.Delete(System.String)">
            <summary>
            Deletes the task template by id.
            </summary>
            <param name="id">The id.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskCategoryService.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Implementation.TaskTypeAvailableBehaviorService">
            <summary>
            Implements service operations for Task Type Available Behaviors
            </summary>
            
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeAvailableBehaviorService.#ctor(UL.Aria.Service.Manager.ITaskTypeAvailableBehaviorFieldManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.TaskTypeAvailableBehaviorService"/> class.
            </summary>
            <param name="taskTypeAvailableBehaviorFieldManager">The task type available behavior field manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeAvailableBehaviorService.FindByTaskTypeAvailableBehaviorId(System.String)">
            <summary>
            Fetches the fields for the corresponding available behavior by identifier.
            </summary>
            <param name="taskTypeAvailableBehaviorId">The task type available behavior identifier.</param>
            <returns>
            TaskTypeDto.
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.TaskTypeService">
            <summary>
            Class TaskTypeService.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.#ctor(UL.Aria.Service.Manager.ITaskTypeManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.TaskTypeService"/> class.
            </summary>
            <param name="taskTypeManager">The task type manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.AssureGuidId(System.String,System.String)">
            <summary>
            Assures the unique identifier identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.FetchById(System.String)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>TaskTypeDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.Delete(System.String)">
            <summary>
            Deletes the specified task type identifier.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.Create(UL.Aria.Service.Contracts.Dto.TaskTypeDto)">
            <summary>
            Creates the specified task type.
            </summary>
            <param name="taskTypeDto">Type of the task.</param>
            <returns>TaskTypeDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.Update(System.String,UL.Aria.Service.Contracts.Dto.TaskTypeDto)">
            <summary>
            Updates the specified task type dto.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
            <param name="taskTypeDto">The task type dto.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the specified search criteria dto.
            </summary>
            <param name="searchCriteriaDto">The search criteria dto.</param>
            <returns>TaskTypeSearchModelDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
            <returns>List&lt;LookupDto&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.GetLookups(System.String)">
            <summary>
            Gets the lookups.
            </summary>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskTypeService.Validate(UL.Aria.Service.Contracts.Dto.TaskTypeDto)">
            <summary>
            Validates the specified task type.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.UnitOfMeasureService">
            <summary>
                Class UnitOfMeasureService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UnitOfMeasureService.#ctor(UL.Aria.Service.Provider.IUnitOfMeasureProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.UnitOfMeasureService"/> class.
            </summary>
            <param name="unitOfMeasureProvider">The unit of measure provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UnitOfMeasureService.FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{UnitOfMeasureDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UnitOfMeasureService.Fetch(System.String)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>UnitOfMeasureDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UnitOfMeasureService.Create(UL.Aria.Service.Contracts.Dto.UnitOfMeasureDto)">
            <summary>
                Creates the specified unit of measure.
            </summary>
            <param name="unitOfMeasure">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UnitOfMeasureService.Update(System.String,UL.Aria.Service.Contracts.Dto.UnitOfMeasureDto)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="unitOfMeasure">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UnitOfMeasureService.Delete(System.String)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Auditing.AuditResourceAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditResourceAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.AuditResourceAttribute"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Auditing.AuditResourceAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Auditing.AuditResourceAttribute"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="P:UL.Aria.Service.Auditing.AuditResourceAttribute.Target">
            <summary>
            Gets the target entity parameter name.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Auditing.AuditResourceAttribute.ActionType">
            <summary>
            Gets or sets the type of the action.
            </summary>
            <value>The type of the action.</value>
        </member>
        <member name="T:UL.Aria.Service.Implementation.UserTeamService">
            <summary>
            User team service implementation.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserTeamService.#ctor(UL.Aria.Service.Manager.IUserTeamManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.UserTeamService"/> class.
            </summary>
            <param name="userTeamManager">The user team manager.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserTeamService.FetchById(System.String)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserTeamService.FetchByUserId(System.String)">
            <summary>
            Fetches the by user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserTeamService.Create(UL.Aria.Service.Contracts.Dto.UserTeamDto)">
            <summary>
            Creates the specified user team.
            </summary>
            <param name="userTeam">The user team.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserTeamService.Update(System.String,UL.Aria.Service.Contracts.Dto.UserTeamDto)">
            <summary>
            Updates the specified user team.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
            <param name="userTeam">The user team.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserTeamService.Delete(System.String)">
            <summary>
            Deletes the specified user team identifier.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Logging.LoggingUtility">
            <summary>
            Extension and static helpers for Logging
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Logging.LoggingUtility.ProjectIdLabel">
            <summary>
            The project identifier label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Logging.LoggingUtility.ProjectNewStatusLabel">
            <summary>
            The project new status label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Logging.LoggingUtility.ProjectOldStatusLabel">
            <summary>
            The project old status
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Logging.LoggingUtility.DecorateLogMessage(UL.Aria.Service.Domain.Entity.ProjectStatusMessage,UL.Enterprise.Foundation.Logging.LogMessage)">
            <summary>
            Decorates the supplied <see cref="T:UL.Enterprise.Foundation.Logging.LogMessage"/> with data specific to the supplied <see cref="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessage"/>.
            </summary>
            <param name="logMessage">The log message.</param>
            <param name="projectStatusMessage">The project status message.</param>
        </member>
        <member name="M:UL.Aria.Service.Logging.LoggingUtility.DecorateLogMessage(UL.Aria.Service.Contracts.Dto.ProjectStatusMessageDto,UL.Enterprise.Foundation.Logging.LogMessage)">
            <summary>
            Decorates the supplied <see cref="T:UL.Enterprise.Foundation.Logging.LogMessage"/> with data specific to the supplied <see cref="T:UL.Aria.Service.Contracts.Dto.ProjectStatusMessageDto"/>.
            </summary>
            <param name="logMessage">The log message.</param>
            <param name="projectStatusMessage">The project status message.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.BusinessUnitManager">
            <summary>
            Implements manager operations for <see cref="T:UL.Aria.Service.Domain.Lookup.BusinessUnit"/> entities
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.SearchManagerBase`1">
            <summary>
            Common base for managers with search capabilties.
            </summary>
            <typeparam name="TDomainEntity">The type of the domain entity.</typeparam>
        </member>
        <member name="T:UL.Aria.Service.Manager.ManagerBase`1">
            <summary>
                Common base for Managers
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:UL.Aria.Service.Manager.IManagerBase`1">
            <summary>
            Defines a generic manager.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Manager.IManagerBase`1.Fetch(System.Guid)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>IndustryCode</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IManagerBase`1.Create(`0)">
            <summary>
                Creates the specified industry code.
            </summary>
            <param name="entity">The industry code.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IManagerBase`1.Update(System.Guid,`0)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="entity">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IManagerBase`1.Delete(System.Guid)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IManagerBase`1.Validate(`0)">
            <summary>
            Validates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ManagerBase`1.#ctor(UL.Aria.Service.Provider.IProviderBase{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ManagerBase`1"/> class.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ManagerBase`1.Fetch(System.Guid)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>
                IndustryCode
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ManagerBase`1.Create(`0)">
            <summary>
                Creates the specified industry code.
            </summary>
            <param name="entity">The industry code.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ManagerBase`1.Update(System.Guid,`0)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="entity">The unit of measure.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ManagerBase`1.Delete(System.Guid)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ManagerBase`1.ValidateForSave(`0)">
            <summary>
                When overridden in derived classes, validates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>A list of validations violations. If empty, successful. Should not return null.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ManagerBase`1.Validate(`0)">
            <summary>
            Validates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ISearchManagerBase`1">
            <summary>
            Defines a generic search manager
            </summary>
            <typeparam name="TSearchResult">The type of the search result.</typeparam>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISearchManagerBase`1.Search(UL.Enterprise.Foundation.Data.ISearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.SearchManagerBase`1.Search(UL.Enterprise.Foundation.Data.ISearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.SearchManagerBase`1.#ctor(UL.Aria.Service.Provider.ISearchProviderBase{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.SearchManagerBase`1"/> class.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IBusinessUnitManager">
            <summary>
            Defines manager operations for <see cref="T:UL.Aria.Service.Domain.Lookup.BusinessUnit"/> entities.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IBusinessUnitManager.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.BusinessUnitManager.#ctor(UL.Aria.Service.Provider.IBusinessUnitProvider,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.BusinessUnitManager"/> class.
            </summary>
            <param name="provider">The provider.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.BusinessUnitManager.Delete(System.Guid)">
            <summary>
            Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.BusinessUnitManager.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.BusinessUnitManager.ValidateForSave(UL.Aria.Service.Domain.Lookup.BusinessUnit)">
            <summary>
            When overridden in derived classes, validates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>
            A list of validations violations. If empty, successful. Should not return null.
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.CertificationRequestManager">
            <summary>
            Implements operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty"/> objects
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.ICertificationRequestManager">
            <summary>
            Defines operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty"/> objects
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICertificationRequestManager.PublishRequest(UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty)">
            <summary>
            Publishes the request.
            </summary>
            <param name="certificationRequest">The certification request.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICertificationRequestManager.FetchRequests(System.Guid)">
            <summary>
            Gets the requests.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.CertificationRequestManager.#ctor(UL.Aria.Service.Provider.ITaskPropertyProvider,UL.Aria.Service.Provider.IProjectProvider,UL.Aria.Service.Repository.ITaskRepository,UL.Aria.Service.Contracts.Service.ICertificationRequestService,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.CertificationRequestManager"/> class.
            </summary>
            <param name="taskPropertyProvider">The task property provider.</param>
            <param name="projectProvider">The project provider.</param>
            <param name="taskRepository">The task repository.</param>
            <param name="certificationRequestService">The certification request service.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.CertificationRequestManager.PublishRequest(UL.Aria.Service.Domain.Entity.CertificationRequestTaskProperty)">
            <summary>
            Publishes the request.
            </summary>
            <param name="certificationRequest">The certification request.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.CertificationRequestManager.FetchRequests(System.Guid)">
            <summary>
            Gets the requests.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.IDataRuleContext">
            <summary>
            Data context
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2">
            <summary>
            
            </summary>
            <typeparam name="TParent">The type of the parent.</typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.RecordEntityUpdate(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Records the task update.
            </summary>
            <param name="updatedTask">The updated task.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.GetUpdatedEntities(System.Boolean)">
            <summary>
            Gets the updated entities.
            </summary>
            <param name="flatten">if set to <c>true</c> [flatten].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.HasDirtyEntities">
            <summary>
            Determines whether [has dirty entities].
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.RecordEntityDelete(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Records the task update.
            </summary>
            <param name="deletedTask">The deleted task.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.GetDeletedEntities">
            <summary>
            Gets the deleted entities.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.GetUpdatedParent">
            <summary>
            Gets the updated parent.
            </summary>
            <returns>TParent.</returns>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.SyncErrors">
            <summary>
            Gets the synchronize errors.
            </summary>
            <value>
            The synchronize errors.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.OriginalProject">
            <summary>
            Gets or sets the project.
            </summary>
            <value>
            The project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.ActiveProject">
            <summary>
            Gets or sets the project.
            </summary>
            <value>
            The project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.ProcessingQueue">
            <summary>
            Gets or sets the process stack.
            </summary>
            <value>
            The process stack.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.OriginalTasks">
            <summary>
            Gets the original tasks2.
            </summary>
            <value>
            The original tasks2.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.UserAlteredTaskIds">
            <summary>
            Gets the user altered task ids.
            </summary>
            <value>
            The user altered task ids.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.WorkingTasks">
            <summary>
            Gets the working tasks.
            </summary>
            <value>
            The working tasks.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.WorkflowState">
            <summary>
            Gets or sets the state of the workflow.
            </summary>
            <value>
            The state of the workflow.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.IDataRuleContext`2.IsActiveProjectDirty">
            <summary>
            Gets or sets a value indicating whether this instance is active project dirty.
            </summary>
            <value><c>true</c> if this instance is active project dirty; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.IDataRuleManager`1">
            <summary>
            Defines operatrions to manage data rules.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IDataRuleManager`1.Process(`0)">
            <summary>
            Process2s the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.IWorkflowDataContextFactory">
            <summary>
            Workflow Data context factory
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IWorkflowDataContextFactory.Create``2(``0,System.Collections.Generic.List{``1},System.Boolean)">
            <summary>
            Creates a workflow data context object given the sepecified parameters.
            </summary>
            <typeparam name="TParent">The type of the parent.</typeparam>
            <typeparam name="T"></typeparam>
            <param name="parent">The parent.</param>
            <param name="userAlteredEntities">The user altered entities.</param>
            <param name="isDeleteMode">if set to <c>true</c> [is delete mode].</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.IWorkflowManagerFactory">
            <summary>
            Workflow Manager Factory Interface
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IWorkflowManagerFactory.Create``2(UL.Aria.Service.Manager.DataRule.Workflow)">
            <summary>
            Creates the specified workflow name.
            </summary>
            <param name="workflowName">Name of the workflow.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.DeletedTaskDeletesAllChildren">
            <summary>
            Deletes any decendants of target task that are not already marked for deletion.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.TaskWorkflowRuleBase">
            <summary>
            The Task workflow rule base.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.ITaskWorkflowRule">
            <summary>
            The Workflow rule interface
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.IDataManipulationRule`2">
            <summary>
            Defines data manipulation rules for Tasks.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IDataManipulationRule`2.ShouldProcess(`0,`1)">
            <summary>
            Determines if this rule should be processed.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.IDataManipulationRule`2.Process(`0,`1)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskWorkflowRuleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DataRule.Task.TaskWorkflowRuleBase"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskWorkflowRuleBase.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Determines if this rule should be processed.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskWorkflowRuleBase.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.DeletedTaskDeletesAllChildren.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Determines if this rule should be processed.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.DeletedTaskDeletesAllChildren.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.DeletedTaskRemoveSuccessorPredecessorRelationships">
            <summary>
            Task Delete Rule that when a task is being deleted, its Successor/Predecessor relationships are removed.
            /// </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.DeletedTaskRemoveSuccessorPredecessorRelationships.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Determines if this rule should be processed.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.DeletedTaskRemoveSuccessorPredecessorRelationships.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the rule given specified context and target.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.LastTaskCompletedCanceledSetProjectComplete">
            <summary>
            Class LastTaskCompletedCanceledSetProjectComplete. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.LastTaskCompletedCanceledSetProjectComplete.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Determines if this rule should be processed.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.LastTaskCompletedCanceledSetProjectComplete.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.SendProjectStatusMessageDataManipulationRule">
            <summary>
            Class SendProjectStatusMessageDataManipulationRule. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SendProjectStatusMessageDataManipulationRule.#ctor(UL.Aria.Service.Provider.IProjectStatusMessageProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DataRule.Task.SendProjectStatusMessageDataManipulationRule"/> class.
            </summary>
            <param name="projectStatusMessageProvider">The project status message provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SendProjectStatusMessageDataManipulationRule.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Shoulds the process.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SendProjectStatusMessageDataManipulationRule.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="ruleContext">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.SetTaskOwnerForProjectHandlerTokenReplacementDataManipulationRule">
            <summary>
            Applies token replacement to the TaskOwner Member when the ProjectHandler Token is found
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetTaskOwnerForProjectHandlerTokenReplacementDataManipulationRule.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Shoulds the process.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetTaskOwnerForProjectHandlerTokenReplacementDataManipulationRule.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.SetTaskSearchMetaDataDataManipulationRule">
            <summary>
            <see cref="T:IDataManipulationRule"/> that sets <see cref="N:UL.Aria.Service.Manager.DataRule.Task"/> properties that are needed for search metadata..
            </summary>    
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetTaskSearchMetaDataDataManipulationRule.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Shoulds the process.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetTaskSearchMetaDataDataManipulationRule.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.SetTaskStatusDateManipulationRule">
            <summary>
            Class SetTaskStatusDateManipulationRule. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetTaskStatusDateManipulationRule.#ctor(UL.Aria.Service.TaskStatus.ITaskFetchStatusStrategyFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DataRule.Task.SetTaskStatusDateManipulationRule"/> class.
            </summary>
            <param name="taskFetchStatusStrategyFactory">The task fetch status strategy factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetTaskStatusDateManipulationRule.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Shoulds the process.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetTaskStatusDateManipulationRule.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.SetTaskSuccessorsStartDateWhenAllPredecessorsCompletedDataManipulationRule">
            <summary>
            Class SetTaskSuccessorsStartDateWhenAllPredecessorsCompletedDataManipulationRule. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetTaskSuccessorsStartDateWhenAllPredecessorsCompletedDataManipulationRule.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Shoulds the process.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetTaskSuccessorsStartDateWhenAllPredecessorsCompletedDataManipulationRule.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.TaskDataManipulationRuleManager">
            <summary>
            Implements operations to manage data dataManipulationRules for tasks.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.WorkflowManager`2">
            <summary>
            Implements operations to manage data dataManipulationRules for tasks.
            </summary>
            <typeparam name="TParent">The type of the parent.</typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.WorkflowManager`2.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Manager.DataRule.IDataManipulationRule{UL.Aria.Service.Manager.DataRule.IDataRuleContext{`0,`1},`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DataRule.WorkflowManager`2"/> class.
            </summary>
            <param name="dataManipulationRules">The data manipulation rules.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.WorkflowManager`2.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{`0,`1})">
            <summary>
            Process the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataManipulationRuleManager.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Manager.DataRule.Task.ITaskWorkflowRule})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DataRule.Task.TaskDataManipulationRuleManager"/> class.
            </summary>
            <param name="workflowRules">The workflow rules.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.SetPercentCompleteTaskDataManipulationRule">
            <summary>
            <see cref="T:IDataManipulationRule"/> that sets <see cref="P:Task.PercentComplete"/> to 100 if <see cref="N:UL.Aria.Service.Manager.DataRule.Task"/> is complete.
            </summary>    
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetPercentCompleteTaskDataManipulationRule.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Shoulds the process.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.SetPercentCompleteTaskDataManipulationRule.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext">
            <summary>
            Establishes a context
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext._UserAlteredTaskIds">
            <summary>
            The _ user altered task ids
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext._DirtyTasks">
            <summary>
            The _ dirty tasks
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.#ctor(UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Domain.Entity.Project,System.Collections.Generic.List{UL.Aria.Service.Domain.Entity.Task},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext"/> class.
            </summary>
            <param name="mapper">The mapper.</param>
            <param name="originalProject">The original project.</param>
            <param name="userAlteredTasks">The user altered task.</param>
            <param name="isDeleteMode">if set to <c>true</c> [is delete mode].</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.RecordEntityUpdate(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Records the task update.
            </summary>
            <param name="updatedTask">The updated task.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.HasDirtyEntities">
            <summary>
            Determines whether [has dirty entities].
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.RemoveTaskNetworkReferences(System.Collections.Generic.List{UL.Aria.Service.Domain.Entity.Task},System.Boolean)">
            <summary>
            Removes the task network references.
            </summary>
            <param name="tasks">The tasks.</param>
            <param name="removeSubTasks">if set to <c>true</c> [remove sub tasks].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.SyncTasks(System.Collections.Generic.List{UL.Aria.Service.Domain.Entity.Task},System.Collections.Generic.Dictionary{System.Nullable{System.Guid},UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Project,System.Collections.Generic.Dictionary{System.Nullable{System.Guid},UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Synchronizes the tasks.
            </summary>
            <param name="srcTasks">The source tasks.</param>
            <param name="destTasks">The dest tasks.</param>
            <param name="activeProject">The active project.</param>
            <param name="originalTasks">The original tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.RecordEntityDelete(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Records the task update.
            </summary>
            <param name="deletedTask">The deleted task.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.GetUpdatedEntities(System.Boolean)">
            <summary>
            Gets the updated entities.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.GetDeletedEntities">
            <summary>
            Gets the deleted entities.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.GetUpdatedParent">
            <summary>
            Gets the updated parent.
            </summary>
            <returns>TParent.</returns>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.SyncErrors">
            <summary>
            Gets the synchronize errors.
            </summary>
            <value>
            The synchronize errors.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.OriginalProject">
            <summary>
            Gets or sets the project.
            </summary>
            <value>
            The project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.ActiveProject">
            <summary>
            Gets or sets the project.
            </summary>
            <value>
            The project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.ProcessingQueue">
            <summary>
            Gets or sets the process stack.
            </summary>
            <value>
            The process stack.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.OriginalTasks">
            <summary>
            Gets the original tasks2.
            </summary>
            <value>
            The original tasks2.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.UserAlteredTaskIds">
            <summary>
            Gets the user altered task ids.
            </summary>
            <value>
            The user altered task ids.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.WorkingTasks">
            <summary>
            Gets the working tasks.
            </summary>
            <value>
            The working tasks.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.WorkflowState">
            <summary>
            Gets or sets the state of the workflow.
            </summary>
            <value>
            The state of the workflow.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Manager.DataRule.Task.TaskDataRuleContext.IsActiveProjectDirty">
            <summary>
            Gets or sets a value indicating whether this instance is active project dirty.
            </summary>
            <value><c>true</c> if this instance is active project dirty; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Task.TaskOwnerToLowerTaskDataManipulationRule">
            <summary>
            <see cref="T:IDataManipulationRule"/> that sets <see cref="P:Task.TaskOwner"/> to all lower case.
            </summary>    
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskOwnerToLowerTaskDataManipulationRule.ShouldProcess(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Determines if this rule should be processed.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.Task.TaskOwnerToLowerTaskDataManipulationRule.Process(UL.Aria.Service.Manager.DataRule.IDataRuleContext{UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.Workflow">
            <summary>
            The Workflow Names
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.DataRule.Workflow.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.DataRule.Workflow.TaskDeletion">
            <summary>
            The task deletion
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.DataRule.Workflow.TaskModification">
            <summary>
            The task modification
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.WorkflowDataContextFactory">
            <summary>
            Implementation of workflow data context factory.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.WorkflowDataContextFactory.#ctor(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DataRule.WorkflowDataContextFactory"/> class.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.WorkflowDataContextFactory.Create``2(``0,System.Collections.Generic.List{``1},System.Boolean)">
            <summary>
            Creates a workflow data context object given the sepecified parameters.
            </summary>
            <typeparam name="TParent">The type of the parent.</typeparam>
            <typeparam name="T"></typeparam>
            <param name="parent">The parent.</param>
            <param name="userAlteredEntities">The user altered entities.</param>
            <param name="isDeleteMode">if set to <c>true</c> [is delete mode].</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DataRule.WorkflowManagerFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.WorkflowManagerFactory.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DataRule.WorkflowManagerFactory"/> class.
            </summary>
            <param name="unityContainer">The unity container.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DataRule.WorkflowManagerFactory.Create``2(UL.Aria.Service.Manager.DataRule.Workflow)">
            <summary>
            Creates the specified workflow name.
            </summary>
            <param name="workflowName">Name of the workflow.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DocumentManagementManager">
            <summary>
            Class DocumentManagementManager.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.IDocumentManagementManager">
            <summary>
            Interface IDocumentManagementManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentManagementManager.CreateAndLink(System.Guid,System.Guid,System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates the existing document in the container with the primary search entity and links it to the task.
            </summary>
            <param name="documentId"></param>
            <param name="containerId">The container identifier.</param>
            <param name="taskId">The task identifier.</param>
            <param name="metaData">The meta data.</param>
            <returns>
            Document Guid.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentManagementManager.#ctor(UL.Aria.Service.Manager.IDocumentContentManager,UL.Aria.Service.Provider.IAssetProvider,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IDocumentManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DocumentManagementManager"/> class.
            </summary>
            <param name="documentContentManager">The document content manager.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="documentManager">The document manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentManagementManager.CreateAndLink(System.Guid,System.Guid,System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates the existing document in the container with the primary search entity and links it to the task.
            </summary>
            <param name="documentId">The document identifier.</param>
            <param name="containerId">The container identifier.</param>
            <param name="taskId">The task identifier.</param>
            <param name="metaData">The meta data.</param>
            <returns>Document Guid.</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.DocumentManager">
            <summary>
            Class DocumentManager. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.IDocumentManager">
            <summary>
            Interface IDocumentManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentManager.Create(System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates the specified container identifier.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="metaData">The meta data.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentManager.Update(System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Updates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentManager.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>IDictionary&lt;System.String, System.String&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentManager.Delete(System.Guid)">
            <summary>
            Deletes the document with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentManager.FetchDocumentById(System.Guid)">
            <summary>
            Fetches the document by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Document.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentManager.Lock(System.Guid)">
            <summary>
            Locks the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentManager.Unlock(System.Guid,System.Boolean)">
            <summary>
            Unlocks the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="verify">if set to <c>true</c> [verify].</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentManager.#ctor(UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IDocumentProvider,UL.Aria.Service.Provider.IAssetProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Common.Authorization.IAuthorizationManager,UL.Aria.Service.Configuration.IServiceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DocumentManager"/> class.
            </summary>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="documentProvider">The document provider.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="authorizationManager">The authorization manager.</param>
            <param name="serviceConfiguration">The service configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentManager.Create(System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates the specified container identifier.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="metaData">The meta data.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentManager.Update(System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Updates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentManager.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>IDictionary&lt;System.String, System.String&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentManager.Delete(System.Guid)">
            <summary>
            Deletes the document with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentManager.FetchDocumentById(System.Guid)">
            <summary>
            Fetches the document by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Document.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentManager.Lock(System.Guid)">
            <summary>
            Locks the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentManager.Unlock(System.Guid,System.Boolean)">
            <summary>
            Unlocks the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="verify">if set to <c>true</c> [verify].</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Manager.DocumentTemplateManager">
            <summary>
            Class DocumentTemplateManager.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.IDocumentTemplateManager">
            <summary>
            Interface IDocumentTemplateManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentTemplateManager.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentTemplateManager.#ctor(UL.Aria.Service.Provider.IDocumentTemplateProvider,UL.Aria.Service.Provider.IBusinessUnitProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DocumentTemplateManager"/> class.
            </summary>
            <param name="provider">The provider.</param>
            <param name="businessUnitProvider">The business unit provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentTemplateManager.ValidateForSave(UL.Aria.Service.Domain.Lookup.DocumentTemplate)">
            <summary>
            Validates for save.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentTemplateManager.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IContactManager">
            <summary>
            Defines operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrderContact"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContactManager.UpdateContactsByOrderNumberAsync(System.String)">
            <summary>
            Updates all contacts for any <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> or <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> with the supplied <paramref name="orderNumber"/>.
            This will only be done for a <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> if the project isn't closed (<see cref="T:ProjectStatusEnumDto.Completed"/> or <see cref="T:ProjectStatusEnumDto.Canceled"/>).
            This method is asynchronous.
            </summary>
            <param name="orderNumber">The order number.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ILinkManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ILinkManager.FetchById(System.Guid)">
            <summary>
            Fetches the link matching the specified id.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>      
        </member>
        <member name="M:UL.Aria.Service.Manager.ILinkManager.FetchLinksByEntity(System.Guid)">
            <summary>
            Fetches all active links associated with the specified entityId.
            </summary>
            <param name="entityId">The owner entity identifier.</param>
            <returns></returns>        
        </member>
        <member name="M:UL.Aria.Service.Manager.ILinkManager.Delete(System.Guid)">
            <summary>
            Deletes a link with the specified linkId.
            </summary>
            <param name="linkId">The link identifier.</param>      
        </member>
        <member name="M:UL.Aria.Service.Manager.ILinkManager.Create(UL.Aria.Service.Domain.Entity.Link)">
            <summary>
            Creates the specified link.
            </summary>
            <param name="link">The link.</param>
            <returns></returns>       
        </member>
        <member name="M:UL.Aria.Service.Manager.ILinkManager.Update(UL.Aria.Service.Domain.Entity.Link)">
            <summary>
            Updates the specified link.
            </summary>
            <param name="link">The link.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ILinkManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria dto.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ILinkManager.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
            <returns></returns>     
        </member>
        <member name="T:UL.Aria.Service.Manager.IProjectCoreManager">
            <summary>
            Interface IProjectCoreManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.GetProjectById(System.Guid)">
            <summary>
                Gets the project by id.
            </summary>
            <param name="projectId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.GetProjectDownload(System.Guid)">
            <summary>
                Gets the project export.
            </summary>
            <param name="projectId">The project id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.GetMultipleProjectDownload(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Gets the multiple project download.
            </summary>
            <param name="projectIds">The project ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.Update(System.Guid,UL.Aria.Service.Domain.Entity.Project,System.Boolean,System.Action{System.Nullable{System.Guid},System.Guid})">
            <summary>
            Updates the specified project.
            </summary>
            <param name="id">The id.</param>
            <param name="project">The project.</param>
            <param name="sendProjectCompleteEmail">if set to <c>true</c> [send project complete email].</param>
            <param name="additionalWorkCreateProjectTemplateTasks">The create project template tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.GetAllProjects">
            <summary>
            Gets all of the <see cref="T:UL.Aria.Service.Domain.Entity.Project"/>s. use only for things like exports, never from the UI.
            </summary>
            <returns>the <see cref="T:UL.Aria.Service.Domain.Entity.Project"/>s.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.GetProjectDetail(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets all of the <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> objects associated with a given <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> flattened for that project.
            </summary>
            <param name="project"></param>
            <returns>the <see cref="T:UL.Aria.Service.Domain.Entity.Task"/>s.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.Validate(System.String,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Validates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="project">The project.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.UpdateStatusFromOrder(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
            Updates the status from order.
            </summary>
            <param name="incomingOrder">The incoming order.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.FetchByOrderNumber(System.String)">
            <summary>
            Fetches the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.GetAllProjectIds">
            <summary>
            Gets all project headerss.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectCoreManager.GetProjectWithoutTaskRollupsById(System.Guid)">
            <summary>
            Gets the project without task rollups(IsOnTrack will not be set correctly) by identifier.
            </summary>
            <param name="projectId">The project identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ITaskTypeAvailableBehaviorFieldManager">
            <summary>
            Defines manager operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskTypeAvailableBehaviorFieldManager.FindByTaskTypeAvailableBehaviorId(System.Guid)">
            <summary>
            Finds the by task type available behavior identifier.
            </summary>
            <param name="taskTypeAvailableBehaviorId">The task type available behavior identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ITaskTypeAvailableBehaviorManager">
            <summary>
            Defines manager operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior"/> objects.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.ITaskTypeBehaviorManager">
            <summary>
            Defines manager operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskTypeBehaviorManager.FindByTaskTypeId(System.Guid)">
            <summary>
            Finds the by task type identifier.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ITaskTypeManager">
            <summary>
            Provides an interface for a Task Type Manager.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskTypeManager.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskTypeManager.GetLookups(System.Boolean)">
            <summary>
            Gets the lookups.
            </summary>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskTypeManager.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IUserTeamManager">
            <summary>
            User team manager interface definition.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IUserTeamManager.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IUserTeamManager.FetchByUserId(System.Guid)">
            <summary>
            Fetches the by user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IUserTeamManager.Create(UL.Aria.Service.Domain.Entity.UserTeam)">
            <summary>
            Creates the specified user team.
            </summary>
            <param name="userTeam">The user team.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IUserTeamManager.Update(UL.Aria.Service.Domain.Entity.UserTeam)">
            <summary>
            Updates the specified user team.
            </summary>
            <param name="userTeam">The user team.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IUserTeamManager.Delete(System.Guid)">
            <summary>
            Deletes the specified user team identifier.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.LinkManager">
            <summary>
            Link manager implementation
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.LinkManager.#ctor(UL.Aria.Service.Provider.ILinkProvider,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.LinkManager"/> class.
            </summary>
            <param name="linkProvider">The link provider.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.LinkManager.FetchById(System.Guid)">
            <summary>
            Fetches the link matching the specified id.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.LinkManager.FetchLinksByEntity(System.Guid)">
            <summary>
            Fetches all active links associated with the specified entityId.
            </summary>
            <param name="entityId">The owner entity identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.LinkManager.Delete(System.Guid)">
            <summary>
            Deletes a link with the specified linkId.
            </summary>
            <param name="linkId">The link identifier.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.LinkManager.Create(UL.Aria.Service.Domain.Entity.Link)">
            <summary>
            Creates the specified link.
            </summary>
            <param name="link">The link.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.LinkManager.Update(UL.Aria.Service.Domain.Entity.Link)">
            <summary>
            Updates the specified link.
            </summary>
            <param name="link">The link.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.LinkManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria dto.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.LinkManager.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
            <returns></returns>   
        </member>
        <member name="T:UL.Aria.Service.Manager.ITaskCategoryManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskCategoryManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskCategoryManager.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskCategoryManager.Create(UL.Aria.Service.Domain.Entity.TaskCategory)">
            <summary>
            Creates the specified task template.
            </summary>
            <param name="taskCategory">The task template.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskCategoryManager.Update(UL.Aria.Service.Domain.Entity.TaskCategory)">
            <summary>
            Updates the specified task template.
            </summary>
            <param name="taskCategory">The task template.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskCategoryManager.Delete(System.Guid)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskCategoryManager.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProjectCoreManager">
            <summary>
                implements concrete functionality for
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.#ctor(UL.Aria.Service.Provider.IMultiProjectDocumentBuilder,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IIncomingOrderCoreProvider,UL.Aria.Service.Provider.IProjectProvider,UL.Aria.Service.Provider.ITaskProvider,UL.Enterprise.Foundation.Logging.ILogManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Provider.ISearchProvider,UL.Aria.Service.Manager.ISmtpClientManager,UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.Validation.IProjectValidationManager,UL.Aria.Service.Notifications.IProjectNotificationCheckManager,UL.Aria.Service.Notifications.IOrderNotificationCheckManager,UL.Aria.Service.Notifications.IOrderLineNotificationCheckManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProjectCoreManager"/> class.
            </summary>
            <param name="projectDocumentBuilder">The project document builder.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="incomingOrderProvider">The incoming order provider.</param>
            <param name="projectProvider">The project provider.</param>
            <param name="taskProvider">The task provider.</param>
            <param name="logManager">The log manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="searchProvider">The search provider.</param>
            <param name="smtpClientManager">The SMTP client manager.</param>
            <param name="notificationManager">The notification manager.</param>
            <param name="projectValidationManager">The project validation manager.</param>
            <param name="projectNotificationCheckManager">The project notification check manager.</param>
            <param name="orderNotificationCheckManager">The order notification check manager.</param>
            <param name="orderLineNotificationCheckManager">The order line notification check manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.GetProjectById(System.Guid)">
            <summary>
                Gets the project by id.
            </summary>
            <param name="projectId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.GetProjectWithoutTaskRollupsById(System.Guid)">
            <summary>
            Gets the project without task rollups(IsOnTrack will not be set correctly) by identifier.
            </summary>
            <param name="projectId">The project identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.GetProjectDownload(System.Guid)">
            <summary>
                Gets the project export.
            </summary>
            <param name="projectId">The project id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.GetAllProjects">
            <summary>
            Gets all of the <see cref="T:UL.Aria.Service.Domain.Entity.Project"/>s. use only for things like exports, never from the UI.
            </summary>
            <returns>the <see cref="T:UL.Aria.Service.Domain.Entity.Project"/>s.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.GetAllProjectIds">
            <summary>
            Gets all project headerss.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.GetProjectDetail(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets all of the <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> objects assocatied with a given <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> flattened for that project.
            </summary>
            <param name="project"></param>
            <returns>the <see cref="T:UL.Aria.Service.Domain.Entity.Task"/>s.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.GetMultipleProjectDownload(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
                Gets the multiple project download.
            </summary>
            <param name="projectIds">The project ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.Update(System.Guid,UL.Aria.Service.Domain.Entity.Project,System.Boolean,System.Action{System.Nullable{System.Guid},System.Guid})">
            <summary>
            Updates the specified project.
            </summary>
            <param name="id">The id.</param>
            <param name="project">The project.</param>
            <param name="sendProjectCompleteEmail">if set to <c>true</c> [send project complete email].</param>
            <param name="additionalWorkCreateProjectTemplateTasks">The create project template tasks.</param>
            <exception cref="T:System.ArgumentException">Project cannot be canceled it still has line items.
            or
            Cannot change company on Project while it still has line items.</exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.Validate(System.String,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Validates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="project">The project.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.UpdateStatusFromOrder(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
            Updates the status from order.
            </summary>
            <param name="incomingOrder">The incoming order.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectCoreManager.FetchByOrderNumber(System.String)">
            <summary>
            Fetches the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.QueuedContactManager">
            <summary>
            Implements operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrderContact"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.QueuedContactManager.#ctor(UL.Aria.Service.Provider.IContactOrderProvider,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.QueuedContactManager"/> class.
            </summary>
            <param name="contactOrderProvider">The contact order provider.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.QueuedContactManager.UpdateContactsByOrderNumberAsync(System.String)">
            <summary>
            Updates all contacts for any <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> or <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> with the supplied <paramref name="orderNumber"/>.
            This will only be done for a <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> if the project isn't closed (<see cref="T:ProjectStatusEnumDto.Completed"/> or <see cref="T:ProjectStatusEnumDto.Canceled"/>).
            This method is implicitly asynchronous as it will queue a request.
            </summary>
            <param name="orderNumber">The order number.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Manager.TaskCategoryManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskCategoryManager.#ctor(UL.Aria.Service.Provider.ITaskCategoryProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.TaskCategoryManager"/> class.
            </summary>
            <param name="taskCategoryProvider">The task template provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskCategoryManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskCategoryManager.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskCategoryManager.Create(UL.Aria.Service.Domain.Entity.TaskCategory)">
            <summary>
            Creates the specified task template.
            </summary>
            <param name="taskTemplate">The task template.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskCategoryManager.Update(UL.Aria.Service.Domain.Entity.TaskCategory)">
            <summary>
            Updates the specified task template.
            </summary>
            <param name="taskTemplate">The task template.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskCategoryManager.Delete(System.Guid)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskCategoryManager.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.TaskTypeAvailableBehaviorFieldManager">
            <summary>
            Implements manager operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeAvailableBehaviorFieldManager.#ctor(UL.Aria.Service.Provider.ITaskTypeAvailableBehaviorFieldProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.TaskTypeAvailableBehaviorFieldManager"/> class.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeAvailableBehaviorFieldManager.FindByTaskTypeAvailableBehaviorId(System.Guid)">
            <summary>
            Finds the by task type available behavior identifier.
            </summary>
            <param name="taskTypeAvailableBehaviorId">The task type available behavior identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Manager.TaskTypeAvailableBehaviorManager">
            <summary>
            Implements manager operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeAvailableBehaviorManager.#ctor(UL.Aria.Service.Provider.ITaskTypeAvailableBehaviorProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.TaskTypeAvailableBehaviorManager"/> class.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.TaskTypeBehaviorManager">
            <summary>
            Implements manager operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeBehaviorManager.#ctor(UL.Aria.Service.Provider.ITaskTypeBehaviorProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.TaskTypeAvailableBehaviorFieldManager"/> class.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeBehaviorManager.FindByTaskTypeId(System.Guid)">
            <summary>
            Finds the by task type identifier.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.TaskTypeManager">
            <summary>
            Class TaskTypeManager.
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.TaskTypeManager._taskTypeProvider">
            <summary>
            The _task type provider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeManager.#ctor(UL.Aria.Service.Provider.ITaskTypeProvider,UL.Aria.Service.Provider.ILinkProvider,UL.Aria.Service.Provider.ILookupProvider,UL.Aria.Service.Provider.IDocumentTemplateProvider,UL.Aria.Service.Provider.ITaskTypeBehaviorProvider,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.TaskTypeManager"/> class.
            </summary>
            <param name="taskTypeProvider">The task type provider.</param>
            <param name="linkProvider">The link provider.</param>
            <param name="lookupProvider">The lookup provider.</param>
            <param name="documentTemplateProvider">The document template provider.</param>
            <param name="taskTypeBehaviorProvider">The task type behavior provider.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeManager.Create(UL.Aria.Service.Domain.TaskType)">
            <summary>
            Creates the specified task type dto.
            </summary>
            <param name="taskType">The task type dto.</param>
            <returns>TaskTypeDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeManager.Update(System.Guid,UL.Aria.Service.Domain.TaskType)">
            <summary>
            Updates the specified task type dto.
            </summary>
            <param name="id">The identifier.</param>
            <param name="taskType">The task type dto.</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeManager.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
            <returns>List&lt;Lookup&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeManager.GetLookups(System.Boolean)">
            <summary>
            Gets the lookups.
            </summary>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeManager.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskTypeManager.Validate(UL.Aria.Service.Domain.TaskType)">
            <summary>
            Validates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.UserTeamManager">
            <summary>
            User team manager implementation.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.UserTeamManager.#ctor(UL.Aria.Service.Provider.IUserTeamProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.UserTeamManager"/> class.
            </summary>
            <param name="userTeamProvider">The user team provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.UserTeamManager.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.UserTeamManager.FetchByUserId(System.Guid)">
            <summary>
            Fetches the by user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.UserTeamManager.Create(UL.Aria.Service.Domain.Entity.UserTeam)">
            <summary>
            Creates the specified user team.
            </summary>
            <param name="userTeam">The user team.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.UserTeamManager.Update(UL.Aria.Service.Domain.Entity.UserTeam)">
            <summary>
            Updates the specified user team.
            </summary>
            <param name="userTeam">The user team.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.UserTeamManager.Delete(System.Guid)">
            <summary>
            Deletes the specified user team identifier.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ITaskDeleteValidationManager">
            <summary>
            Interface ITaskDeleteValidationManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ITaskDeleteValidationManager.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="project">The project.</param>
            <param name="entityToValidate">The entity to validate.</param>
            <returns>IList&lt;TaskDeleteValidationEnumDto&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ITaskDeleteValidator">
            <summary>
            Interface ITaskDeleteValidator
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ITaskDeleteValidator.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskDeleteValidationEnumDto})">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="project">The project.</param>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.IValidationContext">
            <summary>
            Interface IValidationContext
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.IValidationContext`1">
            <summary>
            Interface IValidationContext
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:UL.Aria.Service.Manager.Validation.IValidationContext`1.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:UL.Aria.Service.Manager.Validation.IValidationContext`1.OriginalEntity">
            <summary>
            Gets or sets the original entity.
            </summary>
            <value>The original entity.</value>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ProjectIndustryCodeValidator">
            <summary>
            
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.IProjectValidator">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.IProjectValidator.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.ProjectValidationEnumDto})">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="originalEntity">The original entity.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProjectIndustryCodeValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.ProjectIndustryCodeValidator"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProjectIndustryCodeValidator.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.ProjectValidationEnumDto})">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="originalEntity">The original entity.</param>
            <param name="errors">The errors.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ProjectServiceLineValidator">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProjectServiceLineValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.ProjectServiceLineValidator"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProjectServiceLineValidator.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.ProjectValidationEnumDto})">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="originalEntity">The original entity.</param>
            <param name="errors">The errors.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskNotificationsRestrictedToProjectHandlerOrTaskOwner">
            <summary>
            Validates the current user is the project handler or task owner if adding/editing notificatons
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ITaskValidator">
            <summary>
                Defines operations to Validate <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objects for a specific rule.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ITaskValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskNotificationsRestrictedToProjectHandlerOrTaskOwner.#ctor(UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskBehaviorChildOfRestrictedChildTaskNumbers"/> class.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskNotificationsRestrictedToProjectHandlerOrTaskOwner.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskBehaviorRestrictedToProjectHandlerValidator">
            <summary>
            Class TaskBehaviorRestrictedToProjectHandlerValidator. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskBehaviorRestrictedToProjectHandlerValidator.#ctor(UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.ITaskTypeBehaviorManager,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskBehaviorRestrictedToProjectHandlerValidator"/> class.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
            <param name="taskTypeBehaviorManager">The task type behavior manager.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskBehaviorRestrictedToProjectHandlerValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskBehaviorParentOfRestrictedParentNumbers">
            <summary>
            Validates the parent task of any subtasks with parent Restricted Behavior.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskBehaviorParentOfRestrictedParentNumbers.#ctor(UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskBehaviorParentOfRestrictedParentNumbers"/> class.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskBehaviorParentOfRestrictedParentNumbers.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskBehaviorChildOfRestrictedChildTaskNumbers">
            <summary>
            Validates the child task of a parent with Children Restricted Behavior.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskBehaviorChildOfRestrictedChildTaskNumbers.#ctor(UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskBehaviorChildOfRestrictedChildTaskNumbers"/> class.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskBehaviorChildOfRestrictedChildTaskNumbers.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskDeleteChildTaskPreventDeleteValidator">
            <summary>
            It will validate if any child task is prevent from delete
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskDeleteChildTaskPreventDeleteValidator.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskDeleteValidationEnumDto})">
            <summary>
            Validates the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskDeleteChildTaskStatusValidator">
            <summary>
            It will validate if any child task is completed or canceled
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskDeleteChildTaskStatusValidator.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskDeleteValidationEnumDto})">
            <summary>
            Validates the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskDueDateMustBeGreaterThanStartDateValidator">
            <summary>
            Validates that a tasks start date is less than the due date
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskDueDateMustBeGreaterThanStartDateValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskSelfReferencingPredecessorNotAllowedValidator">
            <summary>
            Validates task parent, children, and predecessors <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> objects
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskSelfReferencingPredecessorNotAllowedValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskUpdateOnlyProjectHandlerCanUpdateStatusWhenTaskClosedValidator">
            <summary>
            Class TaskDeletePreventDeletionValidator. This class cannot be inherited.
            </summary>    
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskUpdateOnlyProjectHandlerCanUpdateStatusWhenTaskClosedValidator.#ctor(UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskUpdateOnlyProjectHandlerCanUpdateStatusWhenTaskClosedValidator"/> class.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskUpdateOnlyProjectHandlerCanUpdateStatusWhenTaskClosedValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskUpdatePreventUpdateWhenProjectClosedValidator">
            <summary>
            Class TaskDeletePreventDeletionValidator. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskUpdatePreventUpdateWhenProjectClosedValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskDeleteProjectHandlerValidator">
            <summary>
            Class TaskDeleteProjectHandlerValidator. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskDeleteProjectHandlerValidator.#ctor(UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskDeleteProjectHandlerValidator"/> class.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskDeleteProjectHandlerValidator.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskDeleteValidationEnumDto})">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="project">The project.</param>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskDeletePreventDeletionValidator">
            <summary>
            Class TaskDeletePreventDeletionValidator. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskDeletePreventDeletionValidator.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskDeleteValidationEnumDto})">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="project">The project.</param>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskDeleteProjectStatusValidator">
            <summary>
            Class TaskDeleteProjectStatusValidator. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskDeleteProjectStatusValidator.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskDeleteValidationEnumDto})">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="project">The project.</param>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskDeleteValidationManager">
            <summary>
            Class TaskDeleteValidationManager. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskDeleteValidationManager.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Manager.Validation.ITaskDeleteValidator})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskDeleteValidationManager"/> class.
            </summary>
            <param name="taskDeleteValidators">The task delete validators.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskDeleteValidationManager.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="project">The project.</param>
            <param name="entityToValidate">The entity to validate.</param>
            <returns>IList&lt;TaskDeleteValidationEnumDto&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskIsProjectHandlerRestrictedValidator">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskIsProjectHandlerRestrictedValidator.#ctor(UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskIsProjectHandlerRestrictedValidator"/> class.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskIsProjectHandlerRestrictedValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskNotificationsRequireFreeformValidator">
            <summary>
            Validates the task is freeform if notification email addresses have been specified.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskNotificationsRequireFreeformValidator.#ctor(UL.Aria.Service.Configuration.IServiceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskNotificationsRequireFreeformValidator"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskNotificationsRequireFreeformValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskOwnerIsUlEmailValidator">
            <summary>
            Validates the TaskOwner is a valid UL email address
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskOwnerIsUlEmailValidator.#ctor(UL.Aria.Service.Manager.IProfileManager,UL.Aria.Service.Configuration.IServiceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskOwnerIsUlEmailValidator"/> class.
            </summary>
            <param name="profileManager">The profile manager.</param>
            <param name="serviceConfiguration">The service configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskOwnerIsUlEmailValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskRequiredStringPropertyValidator">
            <summary>
            Validates property contains value and within min/max range
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskRequiredStringPropertyValidator.#ctor(System.String,UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskRequiredStringPropertyValidator"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="taskValidationEnum">The task validation enum.</param>
            <param name="minLength">The minimum length.</param>
            <param name="maxLength">The maximum length.</param>
            <exception cref="T:System.ArgumentException">Property name was not in Task type.</exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskRequiredStringPropertyValidator.#ctor(System.String,UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskRequiredStringPropertyValidator"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="taskValidationEnum">The task validation enum.</param>
            <param name="minLength">The minimum length.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskRequiredStringPropertyValidator.#ctor(System.String,UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskRequiredStringPropertyValidator"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="taskValidationEnum">The task validation enum.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskRequiredStringPropertyValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskValidationContext">
            <summary>
            Class TaskValidationContext.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Manager.Validation.TaskValidationContext.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:UL.Aria.Service.Manager.Validation.TaskValidationContext.OriginalEntity">
            <summary>
            Gets or sets the original entity.
            </summary>
            <value>The original entity.</value>
        </member>
        <member name="P:UL.Aria.Service.Manager.Validation.TaskValidationContext.Project">
            <summary>
            Gets or sets the project.
            </summary>
            <value>The project.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.NotificationContext">
            <summary>
            Class NotificationContext.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.NotificationContext"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Notifications.NotificationContext.TasksToNotifySuccessorStartDateChanged">
            <summary>
            Gets or sets the tasks to notify successor start date changed.
            </summary>
            <value>The tasks to notify successor start date changed.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskSetSuccessorStatusStrategy">
            <summary>
            Class TaskSetSuccessorStatusStrategy. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskNotificationStrategyBase">
            <summary>
            
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Notifications.NotificationStrategyBase`1">
            <summary>
            Class OrderNotificationStrategyBase.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Notifications.INotificationStrategy`1">
            <summary>
            Interface INotificationStrategy
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:UL.Aria.Service.Notifications.INotificationStrategy">
            <summary>
            Interface INotificationStrategy
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.INotificationStrategy.Run(UL.Enterprise.Foundation.Domain.DomainEntity)">
            <summary>
            When implemented in derived classes, it creates 
            a notification using its particular strategy.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.INotificationStrategy`1.Run(`0)">
            <summary>
            When implemented in derived classes, it creates 
            a notification using its particular strategy.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="F:UL.Aria.Service.Notifications.NotificationStrategyBase`1._notificationManager">
            <summary>
            The _notification manager
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Notifications.NotificationStrategyBase`1._principalResolver">
            <summary>
            The _principal resolver
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Notifications.NotificationStrategyBase`1._profileManager">
            <summary>
            The _profile manager
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Notifications.NotificationStrategyBase`1._currentUserId">
            <summary>
            The _current user identifier
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyBase`1.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.NotificationStrategyBase`1"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyBase`1.GetNotificationBody(System.String,System.String)">
            <summary>
            Gets the notification body.
            </summary>
            <param name="title">The title.</param>
            <param name="comment">The comment.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyBase`1.GetNotificationBody(`0)">
            <summary>
            Gets the notification body.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyBase`1.GetContainerId(`0)">
            <summary>
            Gets the container identifier.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyBase`1.GetStartDate(`0)">
            <summary>
            Gets the start date.
            </summary>
            <param name="entity">The entity.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyBase`1.Run(UL.Enterprise.Foundation.Domain.DomainEntity)">
            <summary>
            When implemented in derived classes, it creates
            a notification using its particular strategy.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyBase`1.DeleteNotifications(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},UL.Aria.Service.Contracts.Dto.NotificationTypeDto)">
            <summary>
            Deletes the notifications.
            </summary>
            <param name="allNotifications">All notifications.</param>
            <param name="notificationType">Type of the notification.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyBase`1.Run(`0)">
            <summary>
            When implemented in derived classes, it creates
            a notification using its particular strategy.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyBase`1.GetUserList(`0)">
            <summary>
            Gets the user list.
            </summary>
            <param name="entity">The entity.</param>
            <returns>IList&lt;Guid&gt;.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.NotificationStrategyBase`1.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>The type of the entity.</value>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskNotificationStrategyBase.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProjectManager,UL.Aria.Service.Manager.IContainerManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.TaskNotificationStrategyBase"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="projectManager">The project manager.</param>
            <param name="containerManager">The container manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskNotificationStrategyBase.GetProject(System.Guid)">
            <summary>
            Gets the project.
            </summary>
            <param name="containerId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskNotificationStrategyBase.GetNotificationBody(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the notification body.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskNotificationStrategyBase.GetContainerId(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the container identifier.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskNotificationStrategyBase.GetUserList(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the user list.
            </summary>
            <param name="entity">The entity.</param>
            <returns>IList&lt;Guid&gt;.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.TaskNotificationStrategyBase.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>The type of the entity.</value>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskSetSuccessorStatusStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProjectManager,UL.Aria.Service.Manager.IContainerManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.TaskNotificationStrategyBase"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="projectManager">The project manager.</param>
            <param name="containerManager">The container manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskSetSuccessorStatusStrategy.GetStartDate(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the start date.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskSetSuccessorStatusStrategy.GetUserList(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the user list.
            </summary>
            <param name="entity">The entity.</param>
            <returns>IList&lt;Guid&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskSuccessorStartDateChangedNotificationCheck">
            <summary>
            Class TaskSuccessorStartDateChangedNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Notifications.ITaskNotificationCheck">
            <summary>
            Interface ITaskNotificationCheck
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.ITaskNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto},UL.Aria.Service.Notifications.NotificationContext)">
            <summary>
            Checks the specified original task.
            </summary>
            <param name="originalTask">The original task.</param>
            <param name="newTask">The new task.</param>
            <param name="notifications">The notifications.</param>
            <param name="notificationContext">The notification context.</param>
            <returns><c>true</c> if continue, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskSuccessorStartDateChangedNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto},UL.Aria.Service.Notifications.NotificationContext)">
            <summary>
            Checks the specified original task.
            </summary>
            <param name="originalTask">The original task.</param>
            <param name="newTask">The new task.</param>
            <param name="notifications">The notifications.</param>
            <param name="notificationContext">The notification context.</param>
            <returns><c>true</c> if continue, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.TaskSuccessorStartDateChangedNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Provider.AzureBlobStorageLocatorProviderResolver">
            <summary>
            Class AzureBlobStorageLocatorProviderResolver. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IAzureBlobStorageLocatorProviderResolver">
            <summary>
            Interface IAzureBlobStorageLocatorProviderResolver
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAzureBlobStorageLocatorProviderResolver.Resolve(System.String)">
            <summary>
            Resolves the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>IAzureBlobStorageLocatorProvider.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AzureBlobStorageLocatorProviderResolver.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.AzureBlobStorageLocatorProviderResolver"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AzureBlobStorageLocatorProviderResolver.Resolve(System.String)">
            <summary>
            Resolves the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>IAzureBlobStorageLocatorProvider.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.AzureProviderBase`1">
            <summary>
            Class AzureProviderBase.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.AzureProviderBase`1.#ctor(UL.Aria.Service.Provider.IAzureBlobStorageLocatorProviderResolver,UL.Aria.Service.Provider.IAzureServiceBusQueueLocatorProviderResolver,UL.Aria.Service.Repository.IAzureBlobStorageRepository,UL.Aria.Service.Repository.IAzureServiceBusQueueRepository{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.AzureProviderBase`1"/> class.
            </summary>
            <param name="azureBlobStorageLocatorProviderResolver">The azure BLOB storage locator provider resolver.</param>
            <param name="azureServiceBusQueueLocatorProviderResolver">The azure service bus queue locator provider resolver.</param>
            <param name="azureBlobStorageRepository">The azure BLOB storage repository.</param>
            <param name="azureServiceBusQueueRepository">The azure service bus queue repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AzureProviderBase`1.FetchBlob(System.String,System.String)">
            <summary>
            Fetches the BLOB.
            </summary>
            <param name="azureBlobStorageLocatorProviderName">Name of the azure BLOB storage locator provider.</param>
            <param name="blobName">Name of the BLOB.</param>
            <returns>AzureStorageBlobInternal.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AzureProviderBase`1.SaveBlob(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream)">
            <summary>
            Saves the BLOB.
            </summary>
            <param name="azureBlobStorageLocatorProviderName">Name of the azure BLOB storage locator provider.</param>
            <param name="blobName">Name of the BLOB.</param>
            <param name="contentType">Type of the content.</param>
            <param name="metadata">The metadata.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AzureProviderBase`1.Ping(System.String)">
            <summary>
            Pings the specified azure BLOB storage locator provider name.
            </summary>
            <param name="azureBlobStorageLocatorProviderName">Name of the azure BLOB storage locator provider.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AzureProviderBase`1.GetAzureBlobStorageConfiguration(System.String)">
            <summary>
            Gets the azure BLOB storage configuration.
            </summary>
            <param name="azureBlobStorageLocatorProviderName">Name of the azure BLOB storage locator provider.</param>
            <returns>AzureBlobStorageConfiguration.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AzureProviderBase`1.GetAzureServiceBusQueueConfiguration(System.String)">
            <summary>
            Gets the azure service bus queue configuration.
            </summary>
            <param name="azureServiceBusQueueLocatorProviderName">Name of the azure service bus queue locator provider.</param>
            <returns>AzureServiceBusQueueConfiguration.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.AzureServiceBusQueueLocatorProviderResolver">
            <summary>
            Class AzureServiceBusQueueLocatorProviderResolver. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IAzureServiceBusQueueLocatorProviderResolver">
            <summary>
            Interface IAzureServiceBusQueueLocatorProviderResolver
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAzureServiceBusQueueLocatorProviderResolver.Resolve(System.String)">
            <summary>
            Resolves the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>IAzureServiceBusQueueLocatorProvider.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AzureServiceBusQueueLocatorProviderResolver.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.AzureServiceBusQueueLocatorProviderResolver"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AzureServiceBusQueueLocatorProviderResolver.Resolve(System.String)">
            <summary>
            Resolves the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>IAzureServiceBusQueueLocatorProvider.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.BusinessUnitAssociationProvider">
            <summary>
            Provides an implemenation for a Business Unit Association Provider.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IBusinessUnitAssociationProvider">
            <summary>
            Provides an Provider interface for Business Unit assocations.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IBusinessUnitAssociationProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.BusinessUnitAssociation},System.Guid)">
            <summary>
            Updates the bulk.
            </summary>
            <param name="businessUnits">The business units.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessUnitAssociationProvider.#ctor(UL.Aria.Service.Repository.IBusinessUnitAssociationRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.BusinessUnitAssociationProvider"/> class.
            </summary>
            <param name="businessUnitAssociationRepository">The business unit association repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessUnitAssociationProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.BusinessUnitAssociation},System.Guid)">
            <summary>
            Updates the bulk.
            </summary>
            <param name="businessUnitAssociations">The business units.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessUnitAssociationProvider.SetupBusinessUnitAssociation(UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Domain.Entity.BusinessUnitAssociation)">
            <summary>
            Setups the task.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
            <param name="businessUnitAssociation">The task.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.BusinessUnitProvider">
            <summary>
            Implements a provider for <see cref="T:UL.Aria.Service.Domain.Lookup.BusinessUnit"/> entities.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchProviderBase`1">
            <summary>
            Base for a <see cref="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity"/> provider.
            </summary>
            <typeparam name="TDomainEntity">The type of the domain entity.</typeparam>
        </member>
        <member name="T:UL.Aria.Service.Provider.ISearchProviderBase`1">
            <summary>
            Defines a generic search Provider
            </summary>
            <typeparam name="TSearchResult">The type of the search result.</typeparam>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProviderBase`1">
            <summary>
            Defines a generic provider.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProviderBase`1.Fetch(System.Guid)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>IndustryCode</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProviderBase`1.Create(`0)">
            <summary>
                Creates the specified industry code.
            </summary>
            <param name="entity">The industry code.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProviderBase`1.Update(System.Guid,`0)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="entity">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProviderBase`1.Delete(System.Guid)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ISearchProviderBase`1.Search(UL.Enterprise.Foundation.Data.ISearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProviderBase`1.#ctor(UL.Enterprise.Foundation.Data.IPrimaryEntityRepository{`0},UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.SearchProviderBase`1"/> class.
            </summary>
            <param name="repository">The repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProviderBase`1.Fetch(System.Guid)">
            <summary>
            Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>
            IndustryCode
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProviderBase`1.Create(`0)">
            <summary>
            Creates the specified industry code.
            </summary>
            <param name="entity">The industry code.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProviderBase`1.Update(System.Guid,`0)">
            <summary>
            Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="entity">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProviderBase`1.Delete(System.Guid)">
            <summary>
            Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProviderBase`1.Search(UL.Enterprise.Foundation.Data.ISearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IBusinessUnitProvider">
            <summary>
            Defines a provider for <see cref="T:UL.Aria.Service.Domain.Lookup.BusinessUnit"/> entities.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IBusinessUnitProvider.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IBusinessUnitProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Lookup.BusinessUnit},System.Guid)">
            <summary>
            Updates the bulk.
            </summary>
            <param name="businessUnits">The business units.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IBusinessUnitProvider.FetchGroup(System.Guid)">
            <summary>
            Fetches the group.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns>IEnumerable&lt;BusinessUnit&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessUnitProvider.#ctor(UL.Aria.Service.Repository.IBusinessUnitRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Provider.IBusinessUnitAssociationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.BusinessUnitProvider"/> class.
            </summary>
            <param name="businessUnitRepository">The business unit repository.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="businessUnitAssociationProvider">The business unit association provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessUnitProvider.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessUnitProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Lookup.BusinessUnit},System.Guid)">
            <summary>
            Updates the bulk.
            </summary>
            <param name="businessUnits">The business units.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessUnitProvider.FetchGroup(System.Guid)">
            <summary>
            Fetches the group.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns>IEnumerable&lt;BusinessUnit&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ContactOrderAzureServiceBusQueueLocatorProvider">
            <summary>
            Class ContactOrderAzureServiceBusQueueLocatorProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IAzureServiceBusQueueLocatorProvider">
            <summary>
            Interface IAzureServiceBusQueueLocatorProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAzureServiceBusQueueLocatorProvider.FetchById(System.Nullable{System.Guid})">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AzureServiceBusQueueConfiguration.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContactOrderAzureServiceBusQueueLocatorProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ContactOrderAzureServiceBusQueueLocatorProvider"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContactOrderAzureServiceBusQueueLocatorProvider.FetchById(System.Nullable{System.Guid})">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AzureServiceBusQueueConfiguration.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ContactOrderProvider">
            <summary>
            Class ContactOrderProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IContactOrderProvider">
            <summary>
            Interface IContactOrderProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IContactOrderProvider.QueueContactOrder(UL.Aria.Service.Contracts.Dto.ContactOrderDto)">
            <summary>
            Queues the contact order.
            </summary>
            <param name="contactOrder">The contact order.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IContactOrderProvider.CreateContactOrderQueue">
            <summary>
            Creates the contact order queue.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContactOrderProvider.#ctor(UL.Aria.Service.Repository.IAzureServiceBusQueueRepository{UL.Aria.Service.Contracts.Dto.ContactOrderDto},UL.Aria.Service.Provider.IAzureServiceBusQueueLocatorProviderResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ContactOrderProvider"/> class.
            </summary>
            <param name="contactAzureServiceBusQueueRepository">The contact azure service bus queue repository.</param>
            <param name="azureServiceBusQueueLocatorProviderResolver">The azure service bus queue locator provider resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContactOrderProvider.QueueContactOrder(UL.Aria.Service.Contracts.Dto.ContactOrderDto)">
            <summary>
            Queues the contact order.
            </summary>
            <param name="contactOrder">The contact order.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContactOrderProvider.CreateContactOrderQueue">
            <summary>
            Creates the contact order queue.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.CryptographyProvider">
            <summary>
            Class CryptographyProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.ICryptographyProvider">
            <summary>
            Interface ICryptographyProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICryptographyProvider.CreateEncryptor">
            <summary>
            Creates the encryptor.
            </summary>
            <returns>ICryptoTransform.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICryptographyProvider.CreateDecryptor">
            <summary>
            Creates the decryptor.
            </summary>
            <returns>ICryptoTransform.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.CryptographyProvider.#ctor(UL.Aria.Service.Provider.ICryptographyProviderConfigurationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.CryptographyProvider"/> class.
            </summary>
            <param name="cryptographyProviderConfigurationSource">The cryptography provider configuration source.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.CryptographyProvider.CreateEncryptor">
            <summary>
            Creates the encryptor.
            </summary>
            <returns>ICryptoTransform.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.CryptographyProvider.CreateDecryptor">
            <summary>
            Creates the decryptor.
            </summary>
            <returns>ICryptoTransform.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.CryptographyProviderConfigurationSource">
            <summary>
            Class CryptographyProviderConfigurationSource.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.ICryptographyProviderConfigurationSource">
            <summary>
            Interface ICryptographyProviderConfigurationSource
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.ICryptographyProviderConfigurationSource.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.ICryptographyProviderConfigurationSource.IV">
            <summary>
            Gets the iv.
            </summary>
            <value>The iv.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.CryptographyProviderConfigurationSource.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.CryptographyProviderConfigurationSource.IV">
            <summary>
            Gets the iv.
            </summary>
            <value>The iv.</value>
        </member>
        <member name="T:UL.Aria.Service.Provider.DepartmentCodeProvider">
            <summary>
                provider for <see cref="T:UL.Aria.Service.Domain.Entity.DepartmentCode"/> entities.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IDepartmentCodeProvider">
            <summary>
                Defines Operations for DepartmentCode
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDepartmentCodeProvider.FetchAll">
            <summary>
                Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDepartmentCodeProvider.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>ServiceCode.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.DepartmentCodeProvider.#ctor(UL.Aria.Service.Repository.IDepartmentCodeRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.DepartmentCodeProvider"/> class.
            </summary>
            <param name="repository">The repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DepartmentCodeProvider.FetchAll">
            <summary>
                Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.DepartmentCodeProvider.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>ServiceCode.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.DocumentContentAzureBlobStorageLocatorProvider">
            <summary>
            Class DocumentContentAzureBlobStorageLocatorProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IAzureBlobStorageLocatorProvider">
            <summary>
            Interface IAzureBlobStorageLocatorProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAzureBlobStorageLocatorProvider.FetchById(System.Nullable{System.Guid})">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AzureBlobStorageConfiguration.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentContentAzureBlobStorageLocatorProvider.#ctor(UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSourceResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.DocumentContentAzureBlobStorageLocatorProvider"/> class.
            </summary>
            <param name="azureBlobStorageRepositoryConfigurationSourceResolver">The azure BLOB storage repository configuration source resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentContentAzureBlobStorageLocatorProvider.FetchById(System.Nullable{System.Guid})">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AzureBlobStorageConfiguration.</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ContainerBuilderBase">
            <summary>
            Class to build a <see cref="T:UL.Aria.Service.Domain.Entity.Container"/> for a <see cref="T:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.IContainerBuilder">
            <summary>
            Defines operations to build a <see cref="T:UL.Aria.Service.Domain.Entity.Container"/> for a <see cref="T:UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerBuilder.Create(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,System.Guid)">
            <summary>
                Creates the specified container id.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="containerId"></param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerBuilderBase.Create(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,System.Guid)">
            <summary>
                Creates the specified container id.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="containerId"></param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerBuilderBase.BuildContainer(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,UL.Aria.Service.Domain.Entity.Container)">
            <summary>
            Builds the container.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="container">The container.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ContainerDefinitionConstants">
            <summary>
            Defines constants for Container
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ContainerDefinitionConstants.DefaultClaimType">
            <summary>
            The default claim type
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ContainerDefinitionConstants.DefaultClaimValueType">
            <summary>
            The default claim value type
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ContainerDefinitionConstants.PermissionContributor">
            <summary>
            The permission contributor
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ContainerDefinitionConstants.PermissionReader">
            <summary>
            The permission reader
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ContainerDefinitionConstants.PrivateGroup">
            <summary>
            The private group
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ContainerDefinitionConstants.ReadOnlyGroup">
            <summary>
            The read only group
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ContainerDefinitionConstants.ModifyGroup">
            <summary>
            The modify group
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ContainerDefinitionConstants.ReadOnlyPrefix">
            <summary>
            The read only prefix
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ContainerDefinitionConstants.ReadWritePrefix">
            <summary>
            The read write prefix
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ContainerDefinitionConstants.UlEmployee">
            <summary>
            The ul employee
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.CustomerManager">
            <summary>
            Implements operations for customer management.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.ICustomerManager">
            <summary>
            Defines operations for customer management.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICustomerManager.GetCustomer(System.String)">
            <summary>
            Gets the customer organization by external id.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICustomerManager.GetCustomer(System.Guid)">
            <summary>
            Gets the customer organizations by company id.
            </summary>
            <param name="companyId">The company identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.CustomerManager.#ctor(UL.Aria.Service.Contracts.Service.ICustomerPartyService,UL.Aria.Service.Provider.ICompanyProvider,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.CustomerManager"/> class.
            </summary>
            <param name="customerPartyService">The customer party service.</param>
            <param name="companyProvider">The company manager.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.CustomerManager.GetCustomer(System.String)">
            <summary>
            Gets the customer organization by external id.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.CustomerManager.GetCustomer(System.Guid)">
            <summary>
            Gets the customer organizations by company id.
            </summary>
            <param name="companyId">The company identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Manager.DocumentContentManager">
            <summary>
            Class DocumentContentManager. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.IDocumentContentManager">
            <summary>
            Interface IDocumentContentManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentContentManager.Create(System.Guid,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Stores the document in the stream by the specified identifier with the content type.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contentType">Document content type.</param>
            <param name="stream">The document stream.</param>
            <param name="sendToDocumentEdi">if set to <c>true</c> [send to document edi].</param>
            <returns>Uri, the document Uri.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentContentManager.Save(System.Guid,System.String,System.IO.Stream)">
            <summary>
            Saves the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contentType">Type of the content.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentContentManager.FetchById(System.Guid)">
            <summary>
            Fetches the document with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentContentManager.CreateDocumentTemplate(System.Guid,System.String,System.IO.Stream)">
            <summary>
            Creates the document template.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contentType">Type of the content.</param>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IDocumentContentManager.PrepareDocumentForEdit(System.Guid,System.Boolean)">
            <summary>
            Prepares the document for edit.
            </summary>
            <param name="id">The identifier.</param>
            <param name="applyLock">if set to <c>true</c> [apply lock].</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentContentManager.#ctor(UL.Aria.Service.Provider.IDocumentContentProvider,UL.Aria.Service.Provider.IAssetProvider,UL.Aria.Service.Manager.IDocumentManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.DocumentContentManager"/> class.
            </summary>
            <param name="documentContentProvider">The document content provider.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="documentManager">The document manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentContentManager.Create(System.Guid,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Stores the document in the stream by the specified identifier with the content type.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contentType">Document content type.</param>
            <param name="stream">The document stream.</param>
            <param name="sendToDocumentEdit">if set to <c>true</c> [send to document edit].</param>
            <returns>Uri, the document Uri.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentContentManager.Save(System.Guid,System.String,System.IO.Stream)">
            <summary>
            Saves the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contentType">Type of the content.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentContentManager.FetchById(System.Guid)">
            <summary>
            Fetches the document with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentContentManager.CreateDocumentTemplate(System.Guid,System.String,System.IO.Stream)">
            <summary>
            Stores the document in the stream by the specified identifier with the content type.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contentType">Document content type.</param>
            <param name="stream">The document stream.</param>
            <returns>Uri, the document Uri.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.DocumentContentManager.PrepareDocumentForEdit(System.Guid,System.Boolean)">
            <summary>
            Prepares the document for edit.
            </summary>
            <param name="id">The identifier.</param>
            <param name="applyLock">if set to <c>true</c> [apply lock].</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.DocumentContentProviderConfigurationSource">
            <summary>
            Class DocumentContentProviderConfigurationSource. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IDocumentContentProviderConfigurationSource">
            <summary>
            Interface IDocumentContentProviderConfigurationSource
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.IDocumentContentProviderConfigurationSource.DocumentServiceUri">
            <summary>
            Gets the document service URI.
            </summary>
            <value>The document service URI.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.IDocumentContentProviderConfigurationSource.IsOutboundDocumentEnabled">
            <summary>
            Gets a value indicating whether this instance is outbound document enabled.
            </summary>
            <value><c>true</c> if this instance is outbound document enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentContentProviderConfigurationSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.DocumentContentProviderConfigurationSource"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.DocumentContentProviderConfigurationSource.DocumentServiceUri">
            <summary>
            Gets the document service URI.
            </summary>
            <value>The document service URI.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.DocumentContentProviderConfigurationSource.IsOutboundDocumentEnabled">
            <summary>
            Gets a value indicating whether this instance is outbound document enabled.
            </summary>
            <value><c>true</c> if this instance is outbound document enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:UL.Aria.Service.Provider.DocumentProvider">
            <summary>
            Class DocumentProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IDocumentProvider">
            <summary>
            Interface IDocumentProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDocumentProvider.Delete(System.Guid)">
            <summary>
            Deletes the document with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDocumentProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="documentId">The document identifier.</param>
            <returns>Document.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentProvider.#ctor(UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Repository.IDocumentRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.DocumentProvider"/> class.
            </summary>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="documentRepository">The document repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentProvider.Delete(System.Guid)">
            <summary>
            Deletes the document with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="documentId">The document identifier.</param>
            <returns>Document.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.DocumentTemplateProvider">
            <summary>
            Class DocumentTemplateProvider.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IDocumentTemplateProvider">
            <summary>
            Interface IDocumentTemplateProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDocumentTemplateProvider.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDocumentTemplateProvider.FetchDocumentTemplatesByEntity(System.Guid)">
            <summary>
            Fetches the document templates by entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDocumentTemplateProvider.UpdateDocumentTemplateAssociations(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Lookup.DocumentTemplate},System.Guid)">
            <summary>
            Updates the document template associations.
            </summary>
            <param name="documentTemplates">The document templates.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentTemplateProvider.#ctor(UL.Aria.Service.Repository.IDocumentTemplateRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Provider.IBusinessUnitProvider,UL.Aria.Service.Provider.IDocumentTemplateAssociationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.DocumentTemplateProvider"/> class.
            </summary>
            <param name="documentTemplateRepository">The document template repository.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="businessUnitProvider">The business unit provider.</param>
            <param name="documentTemplateAssociationProvider">The document template association provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentTemplateProvider.Create(UL.Aria.Service.Domain.Lookup.DocumentTemplate)">
            <summary>
            Creates the specified document template.
            </summary>
            <param name="documentTemplate">The document template.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentTemplateProvider.Update(System.Guid,UL.Aria.Service.Domain.Lookup.DocumentTemplate)">
            <summary>
            Updates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="documentTemplate">The document template.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentTemplateProvider.Fetch(System.Guid)">
            <summary>
            Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>IndustryCode</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentTemplateProvider.FetchDocumentTemplatesByEntity(System.Guid)">
            <summary>
            Fetches the document templates by entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentTemplateProvider.UpdateDocumentTemplateAssociations(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Lookup.DocumentTemplate},System.Guid)">
            <summary>
            Updates the document template associations.
            </summary>
            <param name="documentTemplates">The document templates.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentTemplateProvider.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.LookupManager">
            <summary>
                implements concrete functionality for LookupManager
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.ILookupManager">
            <summary>
                contract for coordinating lookup oriented functionality
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ILookupManager.FetchAllBusinessUnits">
            <summary>
                Fetch business units
            </summary>
            <returns>IEnumerable{BusinessUnit}</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.LookupManager.#ctor(UL.Aria.Service.Provider.ILookupProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.LookupManager"/> class.
            </summary>
            <param name="lookupProvider">The lookup provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.LookupManager.FetchAllBusinessUnits">
            <summary>
               Fetch all business units
            </summary>
            <returns>IEnumerable{BusinessUnit}</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IIncomingOrderManager">
            <summary>
                Defines operations for managing <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> and related objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IIncomingOrderManager.Create(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
                Creates the specified new order.
            </summary>
            <param name="incomingOrder">The new order.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IIncomingOrderManager.Update(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
                Updates the specified incoming order id.
            </summary>
            <param name="incomingOrderId">The incoming order id.</param>
            <param name="incomingOrder">The incoming order.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IIncomingOrderManager.Delete(System.Guid)">
            <summary>
                Deletes the specified <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/>.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IIncomingOrderManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches for <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> objects using the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IIncomingOrderManager.FindById(System.Guid)">
            <summary>
                Finds the <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IIncomingOrderManager.PublishProjectCreationRequest(UL.Aria.Service.Domain.Entity.ProjectCreationRequest)">
            <summary>
                Publishes the project creation request.
            </summary>
            <param name="projectCreationRequest">The project creation request.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IIncomingOrderManager.FindByServiceLineId(System.Guid)">
            <summary>
                Finds the project by service line id.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IIncomingOrderManager.FindByOrderNumber(System.String)">
            <summary>
                Finds the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>IncomingOrder.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IIncomingOrderManager.AddServiceLine(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine)">
            <summary>
                Adds the service line.
            </summary>
            <param name="serviceLine">The service line.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IIncomingOrderManager.DeleteServiceLine(System.Guid)">
            <summary>
                Deletes the service line.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IncomingOrderManager">
            <summary>
            Implements operations for managing <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> and related objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.#ctor(UL.Aria.Service.Provider.IIncomingOrderProvider,UL.Aria.Service.Provider.ICompanyProvider,UL.Enterprise.Foundation.Logging.ILogManager,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.IncomingOrderManager"/> class.
            </summary>
            <param name="incomingOrderProvider">The incoming order provider.</param>
            <param name="companyProvider">The companyProvider.</param>
            <param name="logManager">The log companyProvider.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.Create(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
            Creates the specified new order.
            </summary>
            <param name="incomingOrder">The new order.</param>
            <returns>
            Guid.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.Update(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
            Updates the specified incoming order id.
            </summary>
            <param name="incomingOrderId">The incoming order id.</param>
            <param name="incomingOrder">The incoming order.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.Delete(System.Guid)">
            <summary>
            Deletes the specified <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/>.
            </summary>
            <param name="id">The id.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches for <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> objects using the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.FindById(System.Guid)">
            <summary>
            Finds the <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.PublishProjectCreationRequest(UL.Aria.Service.Domain.Entity.ProjectCreationRequest)">
            <summary>
            Publishes the project creation request.
            </summary>
            <param name="projectCreationRequest">The project creation request.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.FindByServiceLineId(System.Guid)">
            <summary>
            Finds the project by service line id.
            </summary>
            <param name="serviceLineId"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.FindByOrderNumber(System.String)">
            <summary>
            Finds the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>
            IncomingOrder.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.AddServiceLine(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine)">
            <summary>
            Adds the service line.
            </summary>
            <param name="serviceLine">The service line.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.IncomingOrderManager.DeleteServiceLine(System.Guid)">
            <summary>
            Deletes the service line.
            </summary>
            <param name="id">The identifier.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Manager.INotificationManager">
            <summary>
            Provides an interface for a Notification Manager.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.INotificationManager.FetchById(System.Guid)">
            <summary>
            Fetches the notification matching the specified id.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.INotificationManager.FetchNotificationsByUser(System.Guid)">
            <summary>
            Fetches all active notifications associated with the specified userId.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.INotificationManager.FetchNotificationsByEntity(System.Guid)">
            <summary>
            Fetches all active notifications associated with the specified entityId.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.INotificationManager.Delete(System.Guid)">
            <summary>
            Deletes a notification with the specified notificationId.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.INotificationManager.DeleteNotificationsForEntity(System.Guid)">
            <summary>
            Deletes the notifications for the specified entityId.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.INotificationManager.Create(UL.Aria.Service.Domain.Entity.Notification)">
            <summary>
            Creates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.INotificationManager.Update(UL.Aria.Service.Domain.Entity.Notification)">
            <summary>
            Updates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.INotificationManager.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},System.Guid)">
            <summary>
            Updates the list of notifications in the bulk for the specified entityId.
            </summary>
            <param name="notifications">The notifications.</param>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.INotificationManager.ProcessNotifications(System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto},UL.Enterprise.Foundation.Domain.DomainEntity)">
            <summary>
            Processes the notification strategies.
            </summary>
            <param name="notifications">The notifications.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.INotificationManager.Delete(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification})">
            <summary>
            Deletes the specified entities.
            </summary>
            <param name="entities">The entities.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IOutboundMessageManager">
            <summary>
            Defines operations for sending outbound messages.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IOutboundMessageManager.Publish(UL.Aria.Service.Domain.Entity.ProjectStatusMessage)">
            <summary>
            Publishes the specified project status message.
            </summary>
            <param name="projectStatusMessage">The project status message.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductFamilyAttributeManager">
            <summary>
            Defines operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyAttribute"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyAttributeManager.Create(UL.Aria.Service.Domain.Entity.ProductFamilyAttribute)">
            <summary>
            Creates the product family attribute.
            </summary>
            <param name="productFamilyAttribute">The product family attribute.</param>
            <returns>Product family attribute id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyAttributeManager.Update(UL.Aria.Service.Domain.Entity.ProductFamilyAttribute)">
            <summary>
            Updates the product family attribute.
            </summary>
            <param name="productFamilyAttribute">The product family attribute.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyAttributeManager.FetchById(System.Guid)">
            <summary>
            Gets the product family attribute by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Product family attribute data transfer object.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyAttributeManager.FetchAll">
            <summary>
            Fetches the by unique identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyAttributeManager.FetchAll(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Fetches the by their scope unique identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyAttributeManager.Remove(System.Guid)">
            <summary>
            Removes the specified unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductFamilyFeatureManager">
            <summary>
            Defines operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeature"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyFeatureManager.Create(UL.Aria.Service.Domain.Entity.ProductFamilyFeature)">
            <summary>
            Creates the product family Feature.
            </summary>
            <param name="productFamilyFeature">The product family Feature.</param>
            <returns>Product family Feature id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyFeatureManager.Update(UL.Aria.Service.Domain.Entity.ProductFamilyFeature)">
            <summary>
            Updates the product family Feature.
            </summary>
            <param name="productFamilyFeature">The product family Feature.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyFeatureManager.FetchById(System.Guid)">
            <summary>
            Gets the product family Feature by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Product family Feature data transfer object.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyFeatureManager.FetchAll">
            <summary>
            Fetches all features.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyFeatureManager.FetchAll(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Fetches the by their scope unique identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyFeatureManager.Remove(System.Guid)">
            <summary>
            Removes the specified unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IHistoryManager">
            <summary>
                contract for coordinating history oriented funtionality
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IHistoryManager.GetHistoryByEntityId(System.Guid)">
            <summary>
                Gets history items by entity id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>IEnumerable{History}</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IHistoryManager.Create(UL.Aria.Service.Domain.History)">
            <summary>
            Creates a new history item.
            </summary>
            <param name="history">The new history item.</param>
            <returns>historyId</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IHistoryManager.DownloadHistoryByEntityId(System.Guid)">
            <summary>
            Downloads the history by entity identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IHistoryManager.DownloadTaskHistory(System.Guid,System.Guid)">
            <summary>
            Downloads the task history.
            </summary>
            <param name="id">The identifier.</param>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IHistoryManager.FetchTaskHistory(System.Guid,System.Guid)">
            <summary>
            Fetches the task history.
            </summary>
            <param name="id">The identifier.</param>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.NotificationManager">
            <summary>
            Provides the default implementation for a Notification Manager.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.#ctor(UL.Aria.Service.Provider.INotificationProvider,UL.Aria.Service.Notifications.INotificationStrategyFactory,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.NotificationManager"/> class.
            </summary>
            <param name="notificationProvider">The notification provider.</param>
            <param name="notificationFactory">The notification factory.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.FetchById(System.Guid)">
            <summary>
            Fetches the notification matching the specified id.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.FetchNotificationsByUser(System.Guid)">
            <summary>
            Fetches all active notifications associated with the specified userId.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.FetchNotificationsByEntity(System.Guid)">
            <summary>
            Fetches the notifications by entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.Delete(System.Guid)">
            <summary>
            Deletes a notification with the specified notificationId.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.DeleteNotificationsForEntity(System.Guid)">
            <summary>
            Deletes the notifications for the specified entityId.
            </summary>
            <param name="entityId"></param>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.Create(UL.Aria.Service.Domain.Entity.Notification)">
            <summary>
            Creates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.Update(UL.Aria.Service.Domain.Entity.Notification)">
            <summary>
            Updates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},System.Guid)">
            <summary>
            Updates the list of notifications in the bulk for the specified entityId.
            </summary>
            <param name="notifications">The notifications.</param>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.Delete(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification})">
            <summary>
            Deletes the specified entities.
            </summary>
            <param name="entities">The entities.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.NotificationManager.ProcessNotifications(System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto},UL.Enterprise.Foundation.Domain.DomainEntity)">
            <summary>
            Processes the notification strategies.
            </summary>
            <param name="notifications">The notifications.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.OrderContainerBuilder">
            <summary>
            Class to build <see cref="T:UL.Aria.Service.Domain.Entity.Container"/> objects from <see cref="T:UL.Aria.Service.Domain.Entity.Order"/> objects
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.OrderContainerBuilder.BuildOrder(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,UL.Aria.Service.Domain.Entity.Container)">
            <summary>
            Builds the project.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.OrderContainerBuilder.BuildContainer(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,UL.Aria.Service.Domain.Entity.Container)">
            <summary>
            Builds the container.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="container">The container.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.OutboundMessageManager">
            <summary>
            Implements operations for sending outbound messages.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.OutboundMessageManager.#ctor(UL.Aria.Service.Provider.IProjectStatusMessageProvider,UL.Aria.Service.Contracts.Service.IMessageService,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.OutboundMessageManager"/> class.
            </summary>
            <param name="projectStatusMessageProvider">The project status message provider.</param>
            <param name="messageService">The message service.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.OutboundMessageManager.Process(System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Processes this instance.
            </summary>
            <param name="token">The token.</param>
            <param name="isContinuous">if set to <c>true</c> [is continuous].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.OutboundMessageManager.Publish(UL.Aria.Service.Domain.Entity.ProjectStatusMessage)">
            <summary>
            Publishes the specified project status message.
            </summary>
            <param name="projectStatusMessage">The project status message.</param>
        </member>
        <member name="P:UL.Aria.Service.Manager.OutboundMessageManager.ErrorCount">
            <summary>
            Gets or sets the error count.
            </summary>
            <value>The error count.</value>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductContainerBuilder">
            <summary>
            Class to build a <see cref="T:UL.Aria.Service.Domain.Entity.Container"/> for a <see cref="T:UL.Aria.Service.Domain.Entity.Product"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductContainerBuilder.BuildProduct(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,UL.Aria.Service.Domain.Entity.Container)">
            <summary>
            Builds the project.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductContainerBuilder.BuildContainer(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,UL.Aria.Service.Domain.Entity.Container)">
            <summary>
            Builds container for a product
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="container">The container.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductFamilyAttributeManager">
            <summary>
            Implements operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyAttribute"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyAttributeManager.#ctor(UL.Aria.Service.Provider.IProductFamilyAttributeProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductFamilyAttributeManager"/> class.
            </summary>
            <param name="productFamilyAttributeProvider">The product family attribute provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyAttributeManager.Create(UL.Aria.Service.Domain.Entity.ProductFamilyAttribute)">
            <summary>
            Creates the product family attribute.
            </summary>
            <param name="productFamilyAttribute">The product family attribute.</param>
            <returns>Product family attribute id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyAttributeManager.Update(UL.Aria.Service.Domain.Entity.ProductFamilyAttribute)">
            <summary>
            Updates the product family attribute.
            </summary>
            <param name="productFamilyAttribute">The product family attribute.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyAttributeManager.FetchById(System.Guid)">
            <summary>
            Gets the product family attribute by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Product family attribute data transfer object.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyAttributeManager.FetchAll">
            <summary>
            Fetches the by unique identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyAttributeManager.FetchAll(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Fetches the by their scope unique identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyAttributeManager.Remove(System.Guid)">
            <summary>
            Removes the specified unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductFamilyFeatureManager">
            <summary>
            Implements operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeature"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyFeatureManager.#ctor(UL.Aria.Service.Provider.IProductFamilyFeatureProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductFamilyFeatureManager"/> class.
            </summary>
            <param name="productFamilyFeatureProvider">The product family Feature provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyFeatureManager.Create(UL.Aria.Service.Domain.Entity.ProductFamilyFeature)">
            <summary>
            Creates the product family Feature.
            </summary>
            <param name="productFamilyFeature">The product family Feature.</param>
            <returns>Product family Feature id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyFeatureManager.Update(UL.Aria.Service.Domain.Entity.ProductFamilyFeature)">
            <summary>
            Updates the product family Feature.
            </summary>
            <param name="productFamilyFeature">The product family Feature.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyFeatureManager.FetchById(System.Guid)">
            <summary>
            Gets the product family Feature by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Product family Feature data transfer object.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyFeatureManager.FetchAll">
            <summary>
            Fetches the by unique identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyFeatureManager.FetchAll(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Fetches the by their scope unique identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyFeatureManager.Remove(System.Guid)">
            <summary>
            Removes the specified unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="T:ProjectContainerBuilder">
            <summary>
            Class to build a <see cref="T:UL.Aria.Service.Domain.Entity.Container"/> for a <see cref="T:UL.Aria.Service.Domain.Entity.Project"/>
            </summary>
        </member>
        <member name="M:ProjectContainerBuilder.BuildProject(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,UL.Aria.Service.Domain.Entity.Container)">
            <summary>
            Builds the project.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="container">The container.</param>
        </member>
        <member name="M:ProjectContainerBuilder.BuildContainer(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,UL.Aria.Service.Domain.Entity.Container)">
            <summary>
            Builds the container.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="container">The container.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.HistoryManager">
            <summary>
                implements concrete functionality for
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.HistoryManager.#ctor(UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IHistoryProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Provider.IHistoryDocumentBuilder,UL.Aria.Service.Manager.ITaskManager,UL.Aria.Service.Provider.IProjectProvider,UL.Aria.Service.Manager.IProfileManager,UL.Aria.Service.Provider.EntityHistoryStrategy.IEntityHistoryStrategyResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.HistoryManager"/> class.
            </summary>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="historyProvider">The history provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="historyDocumentBuilder">The history document builder.</param>
            <param name="taskManager">The task provider.</param>
            <param name="projectProvider">The project provider.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="entityHistoryStrategyResolver">The entity history strategy resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.HistoryManager.GetHistoryByEntityId(System.Guid)">
            <summary>
                Gets history items by entity id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>IEnumerable{History}</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.HistoryManager.Create(UL.Aria.Service.Domain.History)">
            <summary>
            Creates a new history item.
            </summary>
            <param name="history">The new history item.</param>
            <returns>historyId</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.HistoryManager.DownloadHistoryByEntityId(System.Guid)">
            <summary>
            Downloads the history by entity identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.HistoryManager.DownloadTaskHistory(System.Guid,System.Guid)">
            <summary>
            Downloads the task history.
            </summary>
            <param name="id">The identifier.</param>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.HistoryManager.FetchTaskHistory(System.Guid,System.Guid)">
            <summary>
            Fetches the task history.
            </summary>
            <param name="id">The identifier.</param>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.IProjectValidationManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.IProjectValidationManager.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="originalEntity">The original entity.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ITaskValidationManager">
            <summary>
                Defines operations to validate <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ITaskValidationManager.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext)">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <returns>IList&lt;TaskValidationEnumDto&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ITaskValidationManager.Validate(System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Validates the specified entities to validate.
            </summary>
            <param name="entitiesToValidate">The entities to validate.</param>
            <param name="project">The project.</param>
            <returns>Dictionary&lt;Guid, IList&lt;TaskValidationEnumDto&gt;&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ProjectTaskStatusValidator">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProjectTaskStatusValidator.#ctor(UL.Aria.Service.Provider.ITaskProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.ProjectTaskStatusValidator"/> class.
            </summary>
            <param name="taskProvider">The task provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProjectTaskStatusValidator.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.ProjectValidationEnumDto})">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="originalEntity">The original entity.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ProjectValidationManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProjectValidationManager.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Manager.Validation.IProjectValidator})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.ProjectValidationManager"/> class.
            </summary>
            <param name="projectValidators">The project validates.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProjectValidationManager.Validate(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="originalEntity">The original entity.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskAwaitingAssignmentStatusValidator">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskAwaitingAssignmentStatusValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskParentChildPredecessorValidator">
            <summary>
            Validates task parent, children, and predecessors <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> objects
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskParentChildPredecessorValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskSubTaskPredecessorStatusValidator">
            <summary>
            Validates status of subtasks and predecessors <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> objects
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskSubTaskPredecessorStatusValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskUnassignedValidator">
            <summary>
            Validation required <see cref="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic"/> objects on <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objects
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskUnassignedValidator.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.TaskValidationEnumDto})">
            <summary>
            Validates the instance.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.TaskValidationManager">
            <summary>
                Validates <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskValidationManager.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Manager.Validation.ITaskValidator})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.TaskValidationManager"/> class.
            </summary>
            <param name="taskValidators">The task valuators.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskValidationManager.Validate(UL.Aria.Service.Manager.Validation.TaskValidationContext)">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="taskValidationContext">The task validation context.</param>
            <returns>IList&lt;TaskValidationEnumDto&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.TaskValidationManager.Validate(System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.Task},UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Validates the specified entity to validate.
            </summary>
            <param name="entitiesToValidate">The entity to validate.</param>
            <param name="project">The project.</param>
            <returns>Dictionary&lt;Guid, IList&lt;TaskValidationEnumDto&gt;&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.INotificationStrategyFactory">
            <summary>
            Provides an interface for the Notification Strategy Factory.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.INotificationStrategyFactory.GetStrategy(UL.Aria.Service.Contracts.Dto.NotificationTypeDto)">
            <summary>
            Gets the strategy.
            </summary>
            <param name="notificationType">Type of the notification.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.INotificationStrategyFactory.GetStrategies(System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Gets a list of strategies objects determined by the specified notification list.
            </summary>
            <param name="notifications">The notifications.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.IOrderLineNotificationCheck">
            <summary>
            Interface IOrderLineNotificationCheck
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.IOrderLineNotificationCheck.Check(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project service line.
            </summary>
            <param name="projectServiceLine">The project service line.</param>
            <param name="incomingOrderServiceLine">The incoming order service line.</param>
            <param name="notifications">The notifications.</param>
            <returns><c>true</c> if continue to check for more notifications, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.IOrderLineNotificationCheckManager">
            <summary>
            Interface IOrderLineNotificationCheckManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.IOrderLineNotificationCheckManager.GetOrderLineNotifications(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Gets the order line notifications.
            </summary>
            <param name="projectServiceLine">The project service line.</param>
            <param name="incomingOrderServiceLine">The incoming order service line.</param>
            <param name="notifications">The notifications.</param>
        </member>
        <member name="T:UL.Aria.Service.Notifications.IOrderNotificationCheck">
            <summary>
            Interface IOrderNotificationCheck
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.IOrderNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.IncomingOrder,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="incomingOrder">The incoming order.</param>
            <param name="notifications">The notifications.</param>
            <returns><c>true</c> if continue to check for more notifications, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.IOrderNotificationCheckManager">
            <summary>
            Interface IOrderNotificationCheckManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.IOrderNotificationCheckManager.GetOrderNotifications(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
            Gets the order notifications.
            </summary>
            <param name="project">The project.</param>
            <param name="incomingOrder">The incoming order.</param>
            <returns>List&lt;NotificationTypeDto&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.IProjectNotificationCheck">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.IProjectNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="originalProject">The original project.</param>
            <param name="notifications">The notifications.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.IProjectNotificationCheckManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.IProjectNotificationCheckManager.GetProjectNotifications(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the order notifications.
            </summary>
            <param name="project">The project.</param>
            <param name="originalProject">The original project.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.ITaskNotificationCheckManager">
            <summary>
            Interface ITaskNotificationCheckManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.ITaskNotificationCheckManager.GetTaskNotifications(UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Notifications.NotificationContext)">
            <summary>
            Gets the task notifications.
            </summary>
            <param name="originalTask">The original task.</param>
            <param name="newTask">The new task.</param>
            <param name="notificationContext">The notification context.</param>
            <returns>List&lt;NotificationTypeDto&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderCanceledNotificationCheck">
            <summary>
            Class OrderCanceledNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderCanceledNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.IncomingOrder,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="incomingOrder">The incoming order.</param>
            <param name="notifications">The notifications.</param>
            <returns><c>true</c> if continue to check for more notifications, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderCanceledNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderCleanupNotificationCheck">
            <summary>
            Class OrderCleanupNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderCleanupNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.IncomingOrder,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="incomingOrder">The incoming order.</param>
            <param name="notifications">The notifications.</param>
            <returns><c>true</c> if continue to check for more notifications, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderCleanupNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderLineCanceledNotificationCheck">
            <summary>
            Class OrderLineCanceledNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineCanceledNotificationCheck.Check(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project service line.
            </summary>
            <param name="projectServiceLine">The project service line.</param>
            <param name="incomingOrderServiceLine">The incoming order service line.</param>
            <param name="notifications">The notifications.</param>
            <returns><c>true</c> if continue to check for more notifications, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderLineCanceledNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderLineCleanupNotificationCheck">
            <summary>
            Class OrderLineCleanupNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineCleanupNotificationCheck.Check(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project service line.
            </summary>
            <param name="projectServiceLine">The project service line.</param>
            <param name="incomingOrderServiceLine">The incoming order service line.</param>
            <param name="notifications">The notifications.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderLineCleanupNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderLineNotificationCheckManager">
            <summary>
            Class OrderLineNotificationCheckManager.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineNotificationCheckManager.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Notifications.IOrderLineNotificationCheck})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderLineNotificationCheckManager"/> class.
            </summary>
            <param name="notificationChecks">The notification checks.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineNotificationCheckManager.GetOrderLineNotifications(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Gets the order line notifications.
            </summary>
            <param name="projectServiceLine">The project service line.</param>
            <param name="incomingOrderServiceLine">The incoming order service line.</param>
            <param name="notifications">The notifications.</param>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderLineOnHoldNotificationCheck">
            <summary>
            Class OrderLineOnHoldNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineOnHoldNotificationCheck.Check(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project service line.
            </summary>
            <param name="projectServiceLine">The project service line.</param>
            <param name="incomingOrderServiceLine">The incoming order service line.</param>
            <param name="notifications">The notifications.</param>
            <returns><c>true</c> if continue to check for more notifications, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderLineOnHoldNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderLineStatusChangeNotificationCheck">
            <summary>
            Class OrderLineStatusChangeNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineStatusChangeNotificationCheck.Check(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project service line.
            </summary>
            <param name="projectServiceLine">The project service line.</param>
            <param name="incomingOrderServiceLine">The incoming order service line.</param>
            <param name="notifications">The notifications.</param>
            <returns><c>true</c> if continue to check for more notifications, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderLineStatusChangeNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderNotificationCheckManager">
            <summary>
            Class OrderNotificationCheckManager.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderNotificationCheckManager.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Notifications.IOrderNotificationCheck})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderNotificationCheckManager"/> class.
            </summary>
            <param name="notificationChecks">The notification checks.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderNotificationCheckManager.GetOrderNotifications(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
            Gets the order notifications.
            </summary>
            <param name="project">The project.</param>
            <param name="incomingOrder">The incoming order.</param>
            <returns>List&lt;NotificationTypeDto&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.NotificationCleanupStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationCleanupStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.NotificationCleanupStrategy"/> class.
            </summary>
            <param name="notificationManaager">The notification manaager.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationCleanupStrategy.Run(UL.Enterprise.Foundation.Domain.DomainEntity)">
            <summary>
            When implmented in derived classes, it manages 
            notifications using its particular strategy.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:UL.Aria.Service.Notifications.NotificationStrategyFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyFactory.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.NotificationStrategyFactory"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyFactory.GetStrategy(UL.Aria.Service.Contracts.Dto.NotificationTypeDto)">
            <summary>
            Gets the strategy.
            </summary>
            <param name="notificationType">Type of the notification.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyFactory.GetStrategies(System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Gets a list of strategies objects determined by the specified notification list.
            </summary>
            <param name="notifications">The notifications.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationStrategyFactory.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:UL.Aria.Service.Notifications.NotificationTypeAttribute">
            <summary>
            Provides an attribute for tagging strategies with the NotificationTypeDto.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.NotificationTypeAttribute.#ctor(UL.Aria.Service.Contracts.Dto.NotificationTypeDto)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.NotificationTypeAttribute"/> class.
            </summary>
            <param name="notificationtype">The notificationtype.</param>
        </member>
        <member name="P:UL.Aria.Service.Notifications.NotificationTypeAttribute.NotificationType">
            <summary>
            Gets the type of the notification.
            </summary>
            <value>
            The type of the notification.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderCanceledStrategy">
            <summary>
            Class OrderCanceledStrategy.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderNotificationStrategyBase">
            <summary>
            Class OrderNotificationStrategyBase.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderNotificationStrategyBase.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderNotificationStrategyBase"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderNotificationStrategyBase.GetUserList(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the user list.
            </summary>
            <param name="entity">The entity.</param>
            <returns>IList&lt;Guid&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderNotificationStrategyBase.GetNotificationBody(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the notification body.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderNotificationStrategyBase.GetContainerId(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the container identifier.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderNotificationStrategyBase.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>The type of the entity.</value>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderCanceledStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderCanceledStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderCanceledStrategy.DeleteNotifications(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},UL.Aria.Service.Contracts.Dto.NotificationTypeDto)">
            <summary>
            Deletes the notifications.
            </summary>
            <param name="allNotifications">All notifications.</param>
            <param name="notificationType">Type of the notification.</param>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderCleanupStrategy">
            <summary>
            Class OrderCleanupStrategy.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderCleanupStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderCleanupStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderCleanupStrategy.Run(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            When implemented in derived classes, it removes
            a notification using its particular strategy.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderCleanupStrategy.GetNotificationBody(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the notification body.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderCleanupStrategy.GetContainerId(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the container identifier.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderCleanupStrategy.GetUserList(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the user list.
            </summary>
            <param name="entity">The entity.</param>
            <returns>IList&lt;Guid&gt;.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderCleanupStrategy.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>The type of the entity.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderLineCanceledStrategy">
            <summary>
            Class OrderLineCanceledStrategy.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineCanceledStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderLineCanceledStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineCanceledStrategy.DeleteNotifications(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},UL.Aria.Service.Contracts.Dto.NotificationTypeDto)">
            <summary>
            Deletes the notifications.
            </summary>
            <param name="allNotifications">All notifications.</param>
            <param name="notificationType">Type of the notification.</param>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderLineCleanupStrategy">
            <summary>
            Class OrderLineCleanupStrategy.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineCleanupStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderCleanupStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineCleanupStrategy.Run(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            When implemented in derived classes, it removes
            a notification using its particular strategy.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineCleanupStrategy.GetNotificationBody(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the notification body.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineCleanupStrategy.GetContainerId(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the container identifier.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineCleanupStrategy.GetUserList(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the user list.
            </summary>
            <param name="entity">The entity.</param>
            <returns>IList&lt;Guid&gt;.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderLineCleanupStrategy.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>The type of the entity.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderLineOnHoldStrategy">
            <summary>
            Class OrderLineOnHoldStrategy.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineOnHoldStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderLineOnHoldStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderLineOnHoldStrategy.DeleteNotifications(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},UL.Aria.Service.Contracts.Dto.NotificationTypeDto)">
            <summary>
            Deletes the notifications.
            </summary>
            <param name="allNotifications">All notifications.</param>
            <param name="notificationType">Type of the notification.</param>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderOnHoldNotificationCheck">
            <summary>
            Class OrderOnHoldNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderOnHoldNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.IncomingOrder,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="incomingOrder">The incoming order.</param>
            <param name="notifications">The notifications.</param>
            <returns><c>true</c> if continue to check for more notifications, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderOnHoldNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.ProjectHandlerChangeStrategy">
            <summary>
            Class OrderOnHoldStrategy.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.ProjectHandlerChangeStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderOnHoldStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.ProjectHandlerChangeStrategy.Run(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Runs the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderOnHoldStrategy">
            <summary>
            Class OrderOnHoldStrategy.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderOnHoldStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderOnHoldStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderOnHoldStrategy.DeleteNotifications(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},UL.Aria.Service.Contracts.Dto.NotificationTypeDto)">
            <summary>
            Deletes the notifications.
            </summary>
            <param name="allNotifications">All notifications.</param>
            <param name="notificationType">Type of the notification.</param>
        </member>
        <member name="T:UL.Aria.Service.Notifications.OrderStatusChangeNotificationCheck">
            <summary>
            Class OrderStatusChangeNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.OrderStatusChangeNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.IncomingOrder,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="incomingOrder">The incoming order.</param>
            <param name="notifications">The notifications.</param>
            <returns><c>true</c> if continue to check for more notifications, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.OrderStatusChangeNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.ProjectNotificationCheck">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.ProjectNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="originalProject">The original project.</param>
            <param name="notifications">The notifications.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:UL.Aria.Service.Notifications.ProjectNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>
            The ordinal.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.ProjectHandlerNotificationCheck">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.ProjectHandlerNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto})">
            <summary>
            Checks the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="originalProject">The original project.</param>
            <param name="notifications">The notifications.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.ProjectHandlerNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>
            The ordinal.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.ProjectNotificationCheckManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.ProjectNotificationCheckManager.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Notifications.IProjectNotificationCheck})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.ProjectNotificationCheckManager"/> class.
            </summary>
            <param name="notificationChecks">The notification checks.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.ProjectNotificationCheckManager.GetProjectNotifications(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Gets the order notifications.
            </summary>
            <param name="project">The project.</param>
            <param name="originalProject">The original project.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskCommentNotificationCheck">
            <summary>
            Class TaskCommentNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskCommentNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto},UL.Aria.Service.Notifications.NotificationContext)">
            <summary>
            Checks the specified original task.
            </summary>
            <param name="originalTask">The original task.</param>
            <param name="newTask">The new task.</param>
            <param name="notifications">The notifications.</param>
            <param name="notificationContext">The notification context.</param>
            <returns><c>true</c> if continue, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.TaskCommentNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskCommentStrategy">
            <summary>
            Class TaskCommentStrategy.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskCommentStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProjectManager,UL.Aria.Service.Manager.IContainerManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.TaskCommentStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="projectManager">The project manager.</param>
            <param name="containerManager">The container manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskCommentStrategy.GetUserList(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the user list.
            </summary>
            <param name="entity">The entity.</param>
            <returns>IList&lt;Guid&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskDueDateNotificationCheck">
            <summary>
            Class TaskDueDateNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskDueDateNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto},UL.Aria.Service.Notifications.NotificationContext)">
            <summary>
            Checks the specified original task.
            </summary>
            <param name="originalTask">The original task.</param>
            <param name="newTask">The new task.</param>
            <param name="notifications">The notifications.</param>
            <param name="notificationContext">The notification context.</param>
            <returns><c>true</c> if continue, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.TaskDueDateNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskDueDateStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskDueDateStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProjectManager,UL.Aria.Service.Manager.IContainerManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.TaskDueDateStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="projectManager">The project manager.</param>
            <param name="containerManager">The container manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskDueDateStrategy.GetStartDate(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the start date.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskDueDateStrategy.GetUserList(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the user list.
            </summary>
            <param name="entity">The entity.</param>
            <returns>IList&lt;Guid&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskNotificationCheckManager">
            <summary>
            Class TaskNotificationCheckManager.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskNotificationCheckManager.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Notifications.ITaskNotificationCheck})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.OrderNotificationCheckManager"/> class.
            </summary>
            <param name="notificationChecks">The notification checks.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskNotificationCheckManager.GetTaskNotifications(UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Notifications.NotificationContext)">
            <summary>
            Gets the task notifications.
            </summary>
            <param name="originalTask">The original task.</param>
            <param name="newTask">The new task.</param>
            <param name="notificationContext">The notification context.</param>
            <returns>List&lt;NotificationTypeDto&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskReminderNotificationCheck">
            <summary>
            Class TaskReminderNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskReminderNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto},UL.Aria.Service.Notifications.NotificationContext)">
            <summary>
            Checks the specified original task.
            </summary>
            <param name="originalTask">The original task.</param>
            <param name="newTask">The new task.</param>
            <param name="notifications">The notifications.</param>
            <param name="notificationContext">The notification context.</param>
            <returns><c>true</c> if continue, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.TaskReminderNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskReminderRemovalNotificationCheck">
            <summary>
            Class TaskReminderRemovalNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskReminderRemovalNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto},UL.Aria.Service.Notifications.NotificationContext)">
            <summary>
            Checks the specified original task.
            </summary>
            <param name="originalTask">The original task.</param>
            <param name="newTask">The new task.</param>
            <param name="notifications">The notifications.</param>
            <param name="notificationContext">The notification context.</param>
            <returns><c>true</c> if continue, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.TaskReminderRemovalNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskReminderRemovalStrategy">
            <summary>
            Class TaskReminderRemovalStrategy.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskReminderRemovalStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.TaskReminderRemovalStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskReminderRemovalStrategy.Run(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            When implemented in derived classes, it removes
            a notification using its particular strategy.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskReminderRemovalStrategy.GetNotificationBody(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the notification body.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskReminderRemovalStrategy.GetContainerId(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the container identifier.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;Guid&gt;.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskReminderRemovalStrategy.GetUserList(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the user list.
            </summary>
            <param name="entity">The entity.</param>
            <returns>IList&lt;Guid&gt;.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:UL.Aria.Service.Notifications.TaskReminderRemovalStrategy.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>The type of the entity.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskReminderStrategy">
            <summary>
            Class TaskReminderStrategy.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskReminderStrategy.#ctor(UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProjectManager,UL.Aria.Service.Manager.IContainerManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Notifications.TaskReminderStrategy"/> class.
            </summary>
            <param name="notificationManager">The notification manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="projectManager">The project manager.</param>
            <param name="containerManager">The container manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskReminderStrategy.GetStartDate(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Gets the start date.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Notifications.TaskStatusNotificationCheck">
            <summary>
            Class TaskStatusNotificationCheck. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Notifications.TaskStatusNotificationCheck.Check(UL.Aria.Service.Domain.Entity.Task,UL.Aria.Service.Domain.Entity.Task,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.NotificationTypeDto},UL.Aria.Service.Notifications.NotificationContext)">
            <summary>
            Checks the specified original task.
            </summary>
            <param name="originalTask">The original task.</param>
            <param name="newTask">The new task.</param>
            <param name="notifications">The notifications.</param>
            <param name="notificationContext">The notification context.</param>
            <returns><c>true</c> if continue, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:UL.Aria.Service.Notifications.TaskStatusNotificationCheck.Ordinal">
            <summary>
            Gets the ordinal.
            </summary>
            <value>The ordinal.</value>
        </member>
        <member name="T:UL.Aria.Service.Parser.CustomerOrganizationParser">
            <summary>
            Parser for customer organization objects <see cref="T:UL.Aria.Service.Domain.Entity.CustomerOrganization"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Parser.XmlParserBase">
            <summary>
                Class ParserBase
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Parser.XmlParserBase.ProcessSubTree``1(``0,System.Xml.XmlReader,System.Action{``0,System.Xml.XmlReader})">
            <summary>
                Processes the sub tree.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dto">The dto.</param>
            <param name="xmlReader">The XML reader.</param>
            <param name="processSubTreeProcessor">The process sub tree processor.</param>
        </member>
        <member name="M:UL.Aria.Service.Parser.XmlParserBase.ProcessRoot``1(``0,System.Xml.XmlReader,System.Action{``0,System.Xml.XmlReader})">
            <summary>
                Processes the root.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dto">The dto.</param>
            <param name="xmlReader">The XML reader.</param>
            <param name="processRootProcessor">The process root processor.</param>
        </member>
        <member name="M:UL.Aria.Service.Parser.XmlParserBase.ReadInt32(System.Xml.XmlReader)">
            <summary>
            Reads the int32.
            </summary>
            <param name="xmlReader">The XML reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Parser.XmlParserBase.ReadDateTime(System.Xml.XmlReader)">
            <summary>
            Reads the date time.
            </summary>
            <param name="xmlReader">The XML reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Parser.XmlParserBase.ReadDateTimeNullable(System.Xml.XmlReader)">
            <summary>
            Reads the date time nullable.
            </summary>
            <param name="xmlReader">The XML reader.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Parser.IXmlParser">
            <summary>
                Interface IIncomingOrderParser
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Parser.IXmlParser.Parse(System.String)">
            <summary>
                Parses the specified incoming order message.
            </summary>
            <param name="xml"></param>
            <returns>NewProjectDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Parser.CustomerOrganizationParser.Parse(System.String)">
            <summary>
            Parses the specified incoming order message.
            </summary>
            <param name="xml"></param>
            <returns>
            NewProjectDto.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Parser.OrderServiceLineDetailXmlParser">
            <summary>
                Class IncomingOrderParser
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Parser.OrderServiceLineDetailXmlParser.Parse(System.String)">
            <summary>
                Parses the specified incoming order message.
            </summary>
            <param name="xml"></param>
            <returns>NewProjectDto.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.DocumentContentProvider">
            <summary>
            Class DocumentContentProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IDocumentContentProvider">
            <summary>
            Interface IDocumentContentProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDocumentContentProvider.Create(System.Guid,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Stores the document in the stream by the specified identifier with the content type.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contentType">Document content type.</param>
            <param name="stream">The document stream.</param>
            <param name="sendToDocumentEdi">if set to <c>true</c> [send to document edi].</param>
            <returns>BlobProperties.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDocumentContentProvider.PrepareDocumentForEdit(System.Guid)">
            <summary>
            Prepares the document for edit.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDocumentContentProvider.FetchById(System.Guid)">
            <summary>
            Fetches the document with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentContentProvider.#ctor(UL.Aria.Service.Provider.IDocumentContentProviderConfigurationSource,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IAzureBlobStorageLocatorProviderResolver,UL.Aria.Service.Repository.IAzureBlobStorageRepository,UL.Aria.Service.Repository.IDocumentVersionRepository,UL.Aria.Service.Repository.IDocumentRepository,UL.Aria.Service.Provider.ICryptographyProvider,UL.Aria.Service.Provider.IAssetProvider,UL.Aria.Service.Proxy.IOutboundDocumentServiceProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.DocumentContentProvider"/> class.
            </summary>
            <param name="documentContentProviderConfigurationSource">The document content provider configuration source.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="azureBlobStorageLocatorProviderResolver">The azure BLOB storage locator provider resolver.</param>
            <param name="azureBlobStorageRepository">The azure BLOB storage repository.</param>
            <param name="documentVersionRepository">The document version repository.</param>
            <param name="documentRepository">The document repository.</param>
            <param name="cryptographyProvider">The cryptography provider.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="outboundDocumentServiceProxy">The outbound document service proxy.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentContentProvider.Create(System.Guid,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Stores the document in the stream by the specified identifier with the content type.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contentType">Document content type.</param>
            <param name="stream">The document stream.</param>
            <param name="sendToDocumentEdit">if set to <c>true</c> [send to document edit].</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentContentProvider.PrepareDocumentForEdit(System.Guid)">
            <summary>
            Prepares the document for edit.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentContentProvider.FetchById(System.Guid)">
            <summary>
            Fetches the document with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Stream.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.CategoryProvider">
            <summary>
                Category provider class.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.ICategoryProvider">
            <summary>
                Interface ICategoryProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICategoryProvider.FetchAll">
            <summary>
                Fetches all categories.
            </summary>
            <returns>IList{Category}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICategoryProvider.Fetch(System.Guid)">
            <summary>
                Fetches the specified category by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Category.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICategoryProvider.Create(UL.Aria.Service.Domain.Entity.Category)">
            <summary>
                Creates the specified category.
            </summary>
            <param name="category">The category.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICategoryProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.Category)">
            <summary>
                Updates the specified category by id.
            </summary>
            <param name="id">The id.</param>
            <param name="category">The category.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICategoryProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified category by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.CategoryProvider.#ctor(UL.Aria.Service.Repository.ICategoryRepository)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.CategoryProvider"/> class.
            </summary>
            <param name="categoryRepository">The category repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.CategoryProvider.FetchAll">
            <summary>
            Fetches all categories.
            </summary>
            <returns>IList{Category}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.CategoryProvider.Fetch(System.Guid)">
            <summary>
            Fetches the specified category by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Category.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.CategoryProvider.Create(UL.Aria.Service.Domain.Entity.Category)">
            <summary>
            Creates the specified category.
            </summary>
            <param name="category">The category.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.CategoryProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.Category)">
            <summary>
            Updates the specified catgory by id.
            </summary>
            <param name="id">The id.</param>
            <param name="category">The category.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.CategoryProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified category by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityAssetLinkHistoryStrategy">
            <summary>
            Class EntityAssetLinkHistoryStrategy. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyBase">
            <summary>
            Class EntityHistoryStrategyBase.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.EntityHistoryStrategy.IEntityHistoryStrategy">
            <summary>
            Interface IEntityHistoryStrategy
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.IEntityHistoryStrategy.CreateEntityHistory(UL.Aria.Service.Domain.History)">
            <summary>
            Creates the entity history.
            </summary>
            <param name="history">The history.</param>
            <returns>EntityHistory.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.IEntityHistoryStrategy.DeriveTrackedInfo(UL.Aria.Service.Domain.History)">
            <summary>
            Derives the tracked information.
            </summary>
            <param name="history">The history.</param>
            <returns>List&lt;NameValuePair&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.IEntityHistoryStrategy.Process(UL.Aria.Service.Domain.History,System.Collections.Generic.ICollection{UL.Aria.Service.Domain.Entity.TaskDelta},UL.Aria.Service.Domain.Entity.EntityHistory)">
            <summary>
            Processes the specified history.
            </summary>
            <param name="history">The history.</param>
            <param name="historyDeltas">The history deltas.</param>
            <param name="entityHistoryPrevious">The entity history previous.</param>
            <returns>EntityHistory.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.IEntityHistoryStrategy.BuildAction(System.String,System.String)">
            <summary>
            Builds the action.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="action">The action.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyBase.CreateEntityHistory(UL.Aria.Service.Domain.History)">
            <summary>
            Creates the entity history.
            </summary>
            <param name="history">The history.</param>
            <returns>EntityHistory.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyBase.DeriveTrackedInfo(UL.Aria.Service.Domain.History)">
            <summary>
            Derives the tracked information.
            </summary>
            <param name="history">The history.</param>
            <returns>List&lt;NameValuePair&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyBase.Deserialize(UL.Aria.Service.Domain.History)">
            <summary>
            De-serializes the specified history.
            </summary>
            <param name="history">The history.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyBase.Process(UL.Aria.Service.Domain.History,System.Collections.Generic.ICollection{UL.Aria.Service.Domain.Entity.TaskDelta},UL.Aria.Service.Domain.Entity.EntityHistory)">
            <summary>
            Processes the specified history.
            </summary>
            <param name="history">The history.</param>
            <param name="historyDeltas">The history deltas.</param>
            <param name="entityHistoryPrevious">The entity history previous.</param>
            <returns>EntityHistory.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyBase.GetPreviousEntityHistory(UL.Aria.Service.Domain.Entity.EntityHistory,UL.Aria.Service.Domain.Entity.EntityHistory)">
            <summary>
            Gets the previous entity history.
            </summary>
            <param name="entityHistoryPrevious">The entity history previous.</param>
            <param name="entityHistoryCurrent">The entity history current.</param>
            <returns>EntityHistory.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyBase.CreateDeltas(UL.Aria.Service.Domain.History,UL.Aria.Service.Domain.Entity.EntityHistory,UL.Aria.Service.Domain.Entity.EntityHistory)">
            <summary>
            Creates the deltas.
            </summary>
            <param name="history">The history.</param>
            <param name="entityHistoryPrevious">The entity history previous.</param>
            <param name="entityHistoryCurrent">The entity history current.</param>
            <returns>TaskDelta.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyBase.BuildAction(System.String,System.String)">
            <summary>
            Builds the action.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="action">The action.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyBase.ProcessFieldsForDeltas(UL.Aria.Service.Domain.Entity.TaskDelta,UL.Aria.Service.Domain.History,UL.Aria.Service.Domain.Entity.EntityHistory,UL.Aria.Service.Domain.Entity.EntityHistory)">
            <summary>
            Processes the fields for deltas.
            </summary>
            <param name="taskDelta">The task delta.</param>
            <param name="history">The history.</param>
            <param name="entityHistoryPrevious">The entity history previous.</param>
            <param name="entityHistoryCurrent">The entity history current.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityAssetLinkHistoryStrategy.#ctor(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityAssetLinkHistoryStrategy"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityAssetLinkHistoryStrategy.CreateEntityHistory(UL.Aria.Service.Domain.History)">
            <summary>
            Creates the entity history.
            </summary>
            <param name="history">The history.</param>
            <returns>EntityHistory.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityAssetLinkHistoryStrategy.DeriveTrackedInfo(UL.Aria.Service.Domain.History)">
            <summary>
            Derives the tracked information.
            </summary>
            <param name="history">The history.</param>
            <returns>List&lt;NameValuePair&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityAssetLinkHistoryStrategy.BuildAction(System.String,System.String)">
            <summary>
            Builds the action.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="action">The action.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityAssetLinkHistoryStrategy.GetPreviousEntityHistory(UL.Aria.Service.Domain.Entity.EntityHistory,UL.Aria.Service.Domain.Entity.EntityHistory)">
            <summary>
            Gets the previous entity history.
            </summary>
            <param name="entityHistoryPrevious">The entity history previous.</param>
            <param name="entityHistoryCurrent">The entity history current.</param>
            <returns>EntityHistory.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityAssetLinkHistoryStrategy.ProcessFieldsForDeltas(UL.Aria.Service.Domain.Entity.TaskDelta,UL.Aria.Service.Domain.History,UL.Aria.Service.Domain.Entity.EntityHistory,UL.Aria.Service.Domain.Entity.EntityHistory)">
            <summary>
            Processes the fields for deltas.
            </summary>
            <param name="taskDelta">The task delta.</param>
            <param name="history">The history.</param>
            <param name="entityHistoryPrevious">The entity history previous.</param>
            <param name="entityHistoryCurrent">The entity history current.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryContext">
            <summary>
            Class EntityHistoryContext.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryContext.#ctor(UL.Aria.Service.Provider.EntityHistoryStrategy.IEntityHistoryStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryContext"/> class.
            </summary>
            <param name="entityHistoryStrategy">The entity history strategy.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryContext.CreateEntityHistory(UL.Aria.Service.Domain.History)">
            <summary>
            Creates the entity history.
            </summary>
            <param name="history">The history.</param>
            <returns>EntityHistory.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryContext.DeriveTrackedInfo(UL.Aria.Service.Domain.History)">
            <summary>
            Derives the tracked information.
            </summary>
            <param name="history">The history.</param>
            <returns>List&lt;NameValuePair&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryContext.Process(System.Collections.Generic.ICollection{UL.Aria.Service.Domain.Entity.TaskDelta},UL.Aria.Service.Domain.History,UL.Aria.Service.Domain.Entity.EntityHistory)">
            <summary>
            Processes the specified history deltas.
            </summary>
            <param name="historyDeltas">The history deltas.</param>
            <param name="history">The history.</param>
            <param name="entityHistoryPrevious">The entity history previous.</param>
            <returns>EntityHistory.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryContext.BuildAction(System.String,System.String)">
            <summary>
            Builds the action.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="action">The action.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyResolver">
            <summary>
            Class EntityHistoryStrategyResolver.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.EntityHistoryStrategy.IEntityHistoryStrategyResolver">
            <summary>
            Interface IEntityHistoryStrategyResolver
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.IEntityHistoryStrategyResolver.Resolve(System.String)">
            <summary>
            Resolves the specified action detail entity type.
            </summary>
            <param name="actionDetailEntityType">Type of the action detail entity.</param>
            <returns>IEntityHistoryStrategy.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyResolver.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyResolver"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityHistoryStrategyResolver.Resolve(System.String)">
            <summary>
            Resolves the specified action detail entity type.
            </summary>
            <param name="actionDetailEntityType">Type of the action detail entity.</param>
            <returns>IEntityHistoryStrategy.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityProjectHistoryStrategy">
            <summary>
            Class EntityProjectHistoryStrategy. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityProjectHistoryStrategy.#ctor(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityAssetLinkHistoryStrategy"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityProjectHistoryStrategy.CreateEntityHistory(UL.Aria.Service.Domain.History)">
            <summary>
            Creates the entity history.
            </summary>
            <param name="history">The history.</param>
            <returns>EntityHistory.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityProjectHistoryStrategy.DeriveTrackedInfo(UL.Aria.Service.Domain.History)">
            <summary>
            Derives the tracked information.
            </summary>
            <param name="history">The history.</param>
            <returns>List&lt;NameValuePair&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityProjectHistoryStrategy.ProcessFieldsForDeltas(UL.Aria.Service.Domain.Entity.TaskDelta,UL.Aria.Service.Domain.History,UL.Aria.Service.Domain.Entity.EntityHistory,UL.Aria.Service.Domain.Entity.EntityHistory)">
            <summary>
            Processes the fields for deltas.
            </summary>
            <param name="taskDelta">The task delta.</param>
            <param name="history">The history.</param>
            <param name="entityHistoryPrevious">The entity history previous.</param>
            <param name="entityHistoryCurrent">The entity history current.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityTaskHistoryStrategy">
            <summary>
            Class EntityTaskHistoryStrategy. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityTaskHistoryStrategy.#ctor(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityTaskHistoryStrategy"/> class.
            </summary>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityTaskHistoryStrategy.CreateEntityHistory(UL.Aria.Service.Domain.History)">
            <summary>
            Creates the entity history.
            </summary>
            <param name="history">The history.</param>
            <returns>EntityHistory.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityTaskHistoryStrategy.DeriveTrackedInfo(UL.Aria.Service.Domain.History)">
            <summary>
            Derives the tracked information.
            </summary>
            <param name="history">The history.</param>
            <returns>List&lt;NameValuePair&gt;.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.EntityHistoryStrategy.EntityTaskHistoryStrategy.ProcessFieldsForDeltas(UL.Aria.Service.Domain.Entity.TaskDelta,UL.Aria.Service.Domain.History,UL.Aria.Service.Domain.Entity.EntityHistory,UL.Aria.Service.Domain.Entity.EntityHistory)">
            <summary>
            Processes the fields for deltas.
            </summary>
            <param name="taskDelta">The task delta.</param>
            <param name="history">The history.</param>
            <param name="entityHistoryPrevious">The entity history previous.</param>
            <param name="entityHistoryCurrent">The entity history current.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.HistoryDocumentBuilder">
            <summary>
            Builds download documents for history.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IHistoryDocumentBuilder">
            <summary>
            Defines operations to build download documents for entity histories.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IHistoryDocumentBuilder.Build(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.History})">
            <summary>
            Builds a document for the specified entity histories.
            </summary>
            <param name="histories">The entity histories.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.HistoryDocumentBuilder.#ctor(UL.Aria.Service.Repository.IProfileRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.HistoryDocumentBuilder"/> class.
            </summary>
            <param name="profileRepository">The profile repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.HistoryDocumentBuilder.Build(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.History})">
            <summary>
            Builds a document for the specified entity histories.
            </summary>
            <param name="histories">The entity histories.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IInboundMessageProvider">
            <summary>
            Interface IInboundMessageProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.SaveSuccessfulMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves the successful message.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="message">The message.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.SaveFailedMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves the failed message.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="message">The message.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.SaveOrderMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves the order message.
            </summary>
            <param name="orderNumber">The order number.</param>
            <param name="orderMessage">The order message.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.SaveNewMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves the new message.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="message">The message.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.QueueNewMessage(UL.Aria.Service.Contracts.Dto.InboundMessageDto,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Queues the new message.
            </summary>
            <param name="inboundMessage">The inbound message (The notificaiton of the message).</param>
            <param name="message">The the actual message as a string.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.CreateNewQueue">
            <summary>
            Creates the new queue.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.FetchOrderMessage(System.String)">
            <summary>
            Fetches the order message.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.FetchNewMessage(System.String)">
            <summary>
            Fetches the new message.
            </summary>
            <param name="messageId">The message identifier.</param>
            <returns>InboundMessageBlob.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.DeleteOrderMessage(System.String)">
            <summary>
            Deletes the order message.
            </summary>
            <param name="orderNumber">The order number.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.DeleteNewMessage(System.String)">
            <summary>
            Deletes the new message.
            </summary>
            <param name="messageId">The message identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.DeleteSuccessfulMessage(System.String)">
            <summary>
            Deletes the successful message.
            </summary>
            <param name="messageId">The message identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.CleanupFailedMessages">
            <summary>
            Cleanups the failed messages.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.CleanupOrderMessages">
            <summary>
            Cleanups the order messages.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.CleanupNewMessages">
            <summary>
            Cleanups the new messages.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IInboundMessageProvider.Ping">
            <summary>
            Pings this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IInboundMessageProviderConfigurationSource">
            <summary>
            Interface IDocumentContentProviderConfigurationSource
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.IInboundMessageProviderConfigurationSource.NewExpireDays">
            <summary>
            Gets the new expire days.
            </summary>
            <value>The new expire days.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.IInboundMessageProviderConfigurationSource.FailedExpireDays">
            <summary>
            Gets the failed expire days.
            </summary>
            <value>The failed expire days.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.IInboundMessageProviderConfigurationSource.OrderMessageExpireDays">
            <summary>
            Gets the order message expire days.
            </summary>
            <value>The order message expire days.</value>
        </member>
        <member name="T:UL.Aria.Service.Provider.IDocumentTemplateAssociationProvider">
            <summary>
            Interface IDocumentTemplateAssociationProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IDocumentTemplateAssociationProvider.Save(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation},System.Guid)">
            <summary>
            Saves the specified document template associations.
            </summary>
            <param name="documentTemplateAssociations">The document template associations.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IIncomingOrderCoreProvider">
            <summary>
            Interface IIncomingOrderCoreProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.Create(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
                Creates the specified new order.
            </summary>
            <param name="incomingOrder">The new order.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
            
                Updates the specified incoming order id.
            </summary>
            <param name="incomingOrderId">The incoming order id.</param>
            <param name="incomingOrder">The incoming order.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.UpdateAllContactsForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.UpdateAllCustomersForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderCustomer)">
            <summary>
            Updates all customers for external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="customer"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/>.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches for <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> objects using the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.FindById(System.Guid)">
            <summary>
            Finds the <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.PublishProjectCreationRequest(UL.Aria.Service.Domain.Entity.ProjectCreationRequest,System.Action{System.Guid,System.Guid,System.Int32})">
            <summary>
            Publishes the project creation request.
            </summary>
            <param name="projectCreationRequest">The project creation request.</param>
            <param name="additionalWorkCreateProjectTemplateTasks">The create project template tasks.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.FindByServiceLineId(System.Guid)">
            <summary>
            Finds the project by service line id.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.FindByOrderNumber(System.String)">
            <summary>
                Finds the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>IncomingOrder.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.AddServiceLine(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine)">
            <summary>
                Adds the service line.
            </summary>
            <param name="serviceLine">The service line.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.DeleteServiceLine(System.Guid)">
            <summary>
            Deletes the service line.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.FetchIncomingOrderLookups">
            <summary>
            Fetches a IEnumerable of name id pair objects for Incoming orders as lookup objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.UpdateIncomingOrder(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
            Updates the incoming order.
            </summary>
            <param name="incomingOrderId">The incoming order identifier.</param>
            <param name="incomingOrder">The incoming order.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.UpdateContact(UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderCoreProvider.CreateContact(UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Creates the contact.
            </summary>
            <param name="contact">The contact.</param>
            <returns>Guid.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ILinkAssociationProvider">
            <summary>
            Interface ILinkAssociationProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILinkAssociationProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.LinkAssociation},System.Guid)">
            <summary>
            Updates the link associations.
            </summary>
            <param name="linkAssociations">The link associations.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IncomingOrderCoreProvider">
            <summary>
            Class IncomingOrderCoreProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.#ctor(UL.Aria.Service.Repository.IIncomingOrderRepository,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IProjectProvider,UL.Enterprise.Foundation.Logging.ILogManager,UL.Aria.Common.BusinessMessage.IBusinessMessageProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.ISmtpClientManager,UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Notifications.IOrderNotificationCheckManager,UL.Aria.Service.Notifications.IOrderLineNotificationCheckManager,UL.Aria.Service.Provider.IAssetProvider,UL.Aria.Service.Provider.IInboundMessageProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.IncomingOrderCoreProvider"/> class.
            </summary>
            <param name="incomingOrderRepository">The incoming order repository.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="projectProvider">The project provider.</param>
            <param name="logManager">The log manager.</param>
            <param name="businessMessageProvider">The business message provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="smtpClientManager">SMTP Client Manager</param>
            <param name="notificationManager">The notification manager.</param>
            <param name="orderNotificationCheckManager">The order notification check manager.</param>
            <param name="orderLineNotificationCheckManager">The order line notification check manager.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="inboundMessageProvider">The inbound message provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.Create(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
                Creates the specified new order.
            </summary>
            <param name="incomingOrder">The new order.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
                Updates the specified incoming order id.
            </summary>
            <param name="incomingOrderId">The incoming order id.</param>
            <param name="incomingOrder">The incoming order.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.UpdateContact(UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.CreateContact(UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Creates the contact.
            </summary>
            <param name="contact">The contact.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.UpdateAllContactsForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="contact">The contact.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.UpdateAllCustomersForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderCustomer)">
            <summary>
            Updates all customers for external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="customer"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/>.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches for <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> objects using the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.FindById(System.Guid)">
            <summary>
                Finds the <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.PublishProjectCreationRequest(UL.Aria.Service.Domain.Entity.ProjectCreationRequest,System.Action{System.Guid,System.Guid,System.Int32})">
            <summary>
            Publishes the project creation request.
            </summary>
            <param name="projectCreationRequest">The project creation request.</param>
            <param name="additionalWorkCreateProjectTemplateTasks">The create project template tasks.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.FindByServiceLineId(System.Guid)">
            <summary>
                Finds the project by service line id.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.FindByOrderNumber(System.String)">
            <summary>
                Finds the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>IncomingOrder.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.AddServiceLine(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine)">
            <summary>
            Adds the service line.
            </summary>
            <param name="serviceLine">The service line.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.DeleteServiceLine(System.Guid)">
            <summary>
            Deletes the service line.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.FetchIncomingOrderLookups">
            <summary>
            Fetches a IEnumerable of name id pair objects for Incoming orders as lookup objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.UpdateIncomingOrder(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
            Updates the incoming order.
            </summary>
            <param name="incomingOrderId">The incoming order identifier.</param>
            <param name="incomingOrder">The incoming order.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderCoreProvider.MapIncomingOrderToProject(UL.Aria.Service.Domain.Entity.IncomingOrder,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Maps the incoming order to project.
            </summary>
            <param name="incomingOrder">The incoming order.</param>
            <param name="project">The project.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProjectProjectTemplateProvider">
            <summary>
            Provides an interface for a User Team Provider.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProjectTemplateProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProjectProjectTemplate},System.Guid)">
            <summary>
            Updates the bulk.
            </summary>
            <param name="projectProjectTemplates">The business units.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProjectTemplateProvider.FetchGroup(System.Guid)">
            <summary>
            Fetches the group.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns>IEnumerable&lt;BusinessUnit&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProjectTemplateTaskCreationManager">
            <summary>
            Defines operations for creating <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> entities for <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> entities based on
            <see cref="T:UL.Aria.Service.Domain.Entity.ProjectTemplate"/> entities.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectTemplateTaskCreationManager.CreateProjectTemplateTasks(System.Guid,System.Guid,System.Int32)">
            <summary>
            Creates the project template tasks.
            </summary>
            <param name="projectTemplateId">The project template identifier.</param>
            <param name="containerId">The container identifier.</param>
            <param name="taskNumberSeed">The task number seed.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectTemplateTaskCreationManager.CreateProjectTemplateTasksForUpdate(System.Nullable{System.Guid},System.Guid)">
            <summary>
            Creates the project template tasks for update.
            </summary>
            <param name="projectTemplateId">The project template identifier.</param>
            <param name="containerId">The container identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskTypeNotificationProvider">
            <summary>
            Provides an interface for a Task Type Notification Provider.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeNotificationProvider.FetchById(System.Guid)">
            <summary>
            Fetches the task type notification by identifier.
            </summary>
            <param name="taskTypeNotificationId">The task type notification identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeNotificationProvider.FetchByTaskTypeId(System.Guid)">
            <summary>
            Fetches task type notifications by task type identifier.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeNotificationProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified task type notification by identifier.
            </summary>
            <param name="taskTypeNotificationId">The task type notification identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeNotificationProvider.Save(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskTypeNotification},System.Guid)">
            <summary>
            Saves the specified task type notifications.
            </summary>
            <param name="taskTypeNotifications">The task type notifications.</param>
            <param name="taskTypeId">The task type identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskPropertyProvider">
            <summary>
                Defines operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.TaskProperty"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskPropertyProvider.FindByTaskPropertyTypeId``1(System.Guid,System.Guid)">
            <summary>
                Finds the by task property type identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <param name="taskPropertyTypeId">The task property type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskPropertyProvider.FindByTaskId(System.Guid)">
            <summary>
                Finds the by task identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskNotificationProvider">
            <summary>
            Provides an interface for a Task Notification Provider.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskNotificationProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="taskNotificationId">The task notification identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskNotificationProvider.FetchByTaskId(System.Guid)">
            <summary>
            Fetches the by task identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskNotificationProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified task notification identifier.
            </summary>
            <param name="taskNotificationId">The task notification identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskNotificationProvider.Save(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskNotification},System.Guid)">
            <summary>
            Saves the specified task notifications.
            </summary>
            <param name="taskNotifications">The task notifications.</param>
            <param name="taskId">The task identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskTypeAvailableBehaviorFieldProvider">
            <summary>
            Provider for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeAvailableBehaviorFieldProvider.FindByTaskTypeAvailableBehaviorId(System.Guid)">
            <summary>
            Finds the by task type available behavior identifier.
            </summary>
            <param name="taskTypeAvailableBehaviorId">The task type available behavior identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskTypeAvailableBehaviorProvider">
            <summary>
            Defines a provider for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior"/> objects.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskTypeBehaviorProvider">
            <summary>
            Defines a provider for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeBehavior"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeBehaviorProvider.FindByTaskTypeId(System.Guid)">
            <summary>
            Finds the by task type identifier.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeBehaviorProvider.Save(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskTypeBehavior},System.Guid)">
            <summary>
            Saves the specified task type behaviors.
            </summary>
            <param name="taskTypeBehaviors">The task type behaviors.</param>
            <param name="taskTypeId">The value.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeBehaviorProvider.FetchByMultipleTaskTypeIds(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Fetches the by multiple task type ids.
            </summary>
            <param name="taskTypeIds">The task type ids.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IUserTeamProvider">
            <summary>
            Provides an interface for a User Team Provider.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserTeamProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserTeamProvider.FetchByUserId(System.Guid)">
            <summary>
            Fetches the by user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserTeamProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified user team identifier.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserTeamProvider.Create(UL.Aria.Service.Domain.Entity.UserTeam)">
            <summary>
            Creates the specified userteam.
            </summary>
            <param name="userteam">The userteam.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserTeamProvider.Update(UL.Aria.Service.Domain.Entity.UserTeam)">
            <summary>
            Updates the specified user team.
            </summary>
            <param name="userTeam">The user team.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ILinkProvider">
            <summary>
            Provides an interface for a Link Provider.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILinkProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILinkProvider.FetchLinksByEntity(System.Guid)">
            <summary>
            Fetches all active links associated with the specified entityId.
            </summary>
            <param name="entityId">The owner entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILinkProvider.Delete(System.Guid)">
            <summary>
            Deletes a link with the specified linkId.
            </summary>
            <param name="linkId">The link identifier.</param>      
        </member>
        <member name="M:UL.Aria.Service.Provider.ILinkProvider.Create(UL.Aria.Service.Domain.Entity.Link)">
            <summary>
            Creates the specified link.
            </summary>
            <param name="link">The link.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILinkProvider.Update(UL.Aria.Service.Domain.Entity.Link)">
            <summary>
            Updates the specified link.
            </summary>
            <param name="link">The link.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILinkProvider.UpdateLinkAssociations(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Link},System.Guid)">
            <summary>
            Updates the link associations.
            </summary>
            <param name="links">The links.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILinkProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria dto.
            </summary>
            <param name="searchCriteriaDto">The search criteria dto.</param>
            <returns>Link search result set.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILinkProvider.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
            <returns></returns>     
        </member>
        <member name="T:UL.Aria.Service.Provider.ILocationCodeProvider">
            <summary>
                Defines Operations for LocationCode
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILocationCodeProvider.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>LocationCode.</returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILocationCodeProvider.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.InboundMessageBlob">
            <summary>
            Class InboundMessageBlob.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageBlob.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.InboundMessageBlob"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.InboundMessageBlob.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.InboundMessageBlob.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="T:UL.Aria.Service.Provider.InboundMessageFailedAzureBlobStorageLocatorProvider">
            <summary>
            Class InboundMessageFailedAzureBlobStorageLocatorProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageFailedAzureBlobStorageLocatorProvider.#ctor(UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSourceResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.InboundMessageFailedAzureBlobStorageLocatorProvider"/> class.
            </summary>
            <param name="azureBlobStorageRepositoryConfigurationSourceResolver">The azure BLOB storage repository configuration source resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageFailedAzureBlobStorageLocatorProvider.FetchById(System.Nullable{System.Guid})">
            <summary>
            Fetches this instance.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AzureBlobStorageConfiguration.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.InboundMessageNewAzureBlobStorageLocatorProvider">
            <summary>
            Class InboundMessageNewAzureBlobStorageLocatorProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageNewAzureBlobStorageLocatorProvider.#ctor(UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSourceResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.InboundMessageNewAzureBlobStorageLocatorProvider"/> class.
            </summary>
            <param name="azureBlobStorageRepositoryConfigurationSourceResolver">The azure BLOB storage repository configuration source resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageNewAzureBlobStorageLocatorProvider.FetchById(System.Nullable{System.Guid})">
            <summary>
            Fetches this instance.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AzureBlobStorageConfiguration.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.InboundMessageNewAzureServiceBusQueueLocatorProvider">
            <summary>
            Class InboundMessageNewAzureServiceBusQueueLocatorProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageNewAzureServiceBusQueueLocatorProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.InboundMessageNewAzureServiceBusQueueLocatorProvider"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageNewAzureServiceBusQueueLocatorProvider.FetchById(System.Nullable{System.Guid})">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AzureServiceBusQueueConfiguration.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.InboundMessageProviderConfigurationSource">
            <summary>
            Class InboundMessageProviderConfigurationSource.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.InboundMessageProviderConfigurationSource.NewExpireDays">
            <summary>
            Gets the new expire days.
            </summary>
            <value>The new expire days.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.InboundMessageProviderConfigurationSource.FailedExpireDays">
            <summary>
            Gets the failed expire days.
            </summary>
            <value>The failed expire days.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.InboundMessageProviderConfigurationSource.OrderMessageExpireDays">
            <summary>
            Gets the order message expire days.
            </summary>
            <value>The order message expire days.</value>
        </member>
        <member name="T:UL.Aria.Service.Provider.InboundMessageSuccessfulAzureBlobStorageLocatorProvider">
            <summary>
            Class InboundMessageSuccessfulAzureBlobStorageLocatorProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageSuccessfulAzureBlobStorageLocatorProvider.#ctor(UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSourceResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.InboundMessageSuccessfulAzureBlobStorageLocatorProvider"/> class.
            </summary>
            <param name="azureBlobStorageRepositoryConfigurationSourceResolver">The azure BLOB storage repository configuration source resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageSuccessfulAzureBlobStorageLocatorProvider.FetchById(System.Nullable{System.Guid})">
            <summary>
            Fetches this instance.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AzureBlobStorageConfiguration.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.InboundMessageProvider">
            <summary>
            Class InboundMessageProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.#ctor(UL.Aria.Service.Provider.IInboundMessageProviderConfigurationSource,UL.Aria.Service.Repository.IAzureBlobStorageRepository,UL.Aria.Service.Provider.IAzureBlobStorageLocatorProviderResolver,UL.Aria.Service.Repository.IAzureServiceBusQueueRepository{UL.Aria.Service.Contracts.Dto.InboundMessageDto},UL.Aria.Service.Provider.IAzureServiceBusQueueLocatorProviderResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.InboundMessageProvider"/> class.
            </summary>
            <param name="inboundMessageProviderConfigurationSource">The inbound message provider configuration source.</param>
            <param name="azureBlobStorageRepository">The azure BLOB storage repository.</param>
            <param name="azureBlobStorageLocatorProviderResolver">The azure BLOB storage locator provider resolver.</param>
            <param name="inboundMessageAzureServiceBusQueueRepository">The inbound message azure service bus queue repository.</param>
            <param name="azureServiceBusQueueLocatorProviderResolver">The azure service bus queue locator provider resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.SaveSuccessfulMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves the successful message.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="message">The message.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.SaveFailedMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves the failed message.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="message">The message.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.SaveOrderMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves the order message.
            </summary>
            <param name="orderNumber">The order number.</param>
            <param name="orderMessage">The order message.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.SaveNewMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves the new message.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="message">The message.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.QueueNewMessage(UL.Aria.Service.Contracts.Dto.InboundMessageDto,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Saves the new message and queues the notification queue message.
            </summary>
            <param name="inboundMessage">The inbound message.</param>
            <param name="message">The message.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.CreateNewQueue">
            <summary>
            Creates the new queue.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.Ping">
            <summary>
            Pings this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.FetchOrderMessage(System.String)">
            <summary>
            Fetches the order message.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.FetchNewMessage(System.String)">
            <summary>
            Fetches the new message.
            </summary>
            <param name="messageId">The message identifier.</param>
            <returns>InboundMessageBlob.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.DeleteOrderMessage(System.String)">
            <summary>
            Deletes the order message.
            </summary>
            <param name="orderNumber">The order number.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.DeleteNewMessage(System.String)">
            <summary>
            Deletes the new message.
            </summary>
            <param name="messageId">The message identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.DeleteSuccessfulMessage(System.String)">
            <summary>
            Deletes the successful message.
            </summary>
            <param name="messageId">The message identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.CleanupFailedMessages">
            <summary>
            Cleanups the failed messages.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.CleanupOrderMessages">
            <summary>
            Cleanups the order message.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageProvider.CleanupNewMessages">
            <summary>
            Cleanups the new messages.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskTemplateProvider">
            <summary>
            Provides an interface for a Task Template Provider.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTemplateProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTemplateProvider.FetchTaskTemplateByProjectTemplate(System.Guid,System.Boolean)">
            <summary>
            Fetches the task template by project template.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="flatten">if set to <c>true</c> [flatten].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTemplateProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified task template identifier.
            </summary>
            <param name="taskTemplateId">The task template identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTemplateProvider.Create(UL.Aria.Service.Domain.Entity.TaskTemplate)">
            <summary>
            Creates the specified task template.
            </summary>
            <param name="taskTemplate">The task template.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTemplateProvider.Update(UL.Aria.Service.Domain.Entity.TaskTemplate)">
            <summary>
            Updates the specified task template.
            </summary>
            <param name="taskTemplate">The task template.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTemplateProvider.UpdateBulk(System.Guid,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskTemplate})">
            <summary>
            Upldates the bulk.
            </summary>
            <param name="projectTemplateId"></param>
            <param name="taskTemplates">The task templates.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskTypeProvider">
            <summary>
            Interface ITaskTypeProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeProvider.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeProvider.GetLookups(System.Boolean)">
            <summary>
            Gets the lookups.
            </summary>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeProvider.Fetch(System.Guid,System.Boolean)">
            <summary>
            Fetches the active by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="isDeleted">if set to <c>true</c> [is deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskTypeProvider.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.DocumentTemplateAssociationProvider">
            <summary>
            Provides a Provider implemenation for Document Template Associations.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentTemplateAssociationProvider.#ctor(UL.Aria.Service.Repository.IDocumentTemplateAssociationRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.DocumentTemplateAssociationProvider"/> class.
            </summary>
            <param name="documentTemplateAssociationRepository">The document template association repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentTemplateAssociationProvider.Save(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation},System.Guid)">
            <summary>
            Saves the specified document template associations.
            </summary>
            <param name="documentTemplateAssociations">The document template associations.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentTemplateAssociationProvider.SetupDocumentTemplateAssociation(UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation)">
            <summary>
            Setups the document template association.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
            <param name="documentTemplateAssociation">The document template association.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.LinkAssociationProvider">
            <summary>
            Provides a Provider implemenatiion for Link Associations.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkAssociationProvider.#ctor(UL.Aria.Service.Repository.ILinkAssociationRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.LinkAssociationProvider"/> class.
            </summary>
            <param name="linkAssociationRepository">The link association repository.</param>
            <param name="principalResolver"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkAssociationProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.LinkAssociation},System.Guid)">
            <summary>
            Updates the link associations.
            </summary>
            <param name="linkAssociations">The link associations.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkAssociationProvider.SetupLinkAssociation(UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Domain.Entity.LinkAssociation)">
            <summary>
            Setups the task.
            </summary>
            <param name="principalResolver">The principal resolver.</param>
            <param name="linkAssociation">The task.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProjectTemplateTaskCreationManager">
            <summary>
            Implements operations for creating <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> entities for <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> entities based on
            <see cref="T:UL.Aria.Service.Domain.Entity.ProjectTemplate"/> entities.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateTaskCreationManager.#ctor(UL.Aria.Service.Manager.IProjectTemplateManager,UL.Aria.Service.Manager.ITaskManager,UL.Aria.Service.Provider.ITaskTypeProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProjectTemplateTaskCreationManager"/> class.
            </summary>
            <param name="projectTemplateManager">The project template manager.</param>
            <param name="taskManager">The task manager.</param>
            <param name="taskTypeProvider">The task type provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateTaskCreationManager.CreateProjectTemplateTasksForUpdate(System.Nullable{System.Guid},System.Guid)">
            <summary>
            Creates the project template tasks for update.
            </summary>
            <param name="projectTemplateId">The project template identifier.</param>
            <param name="containerId">The container identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateTaskCreationManager.CreateProjectTemplateTasks(System.Guid,System.Guid,System.Int32)">
            <summary>
            Creates the project template tasks.
            </summary>
            <param name="projectTemplateId">The project template identifier.</param>
            <param name="containerId">The container identifier.</param>
            <param name="taskNumberSeed">The task number seed.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.TaskProgressSearchFilterCoordinator">
            <summary>
            
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.ISearchCoordinator">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.ISearchCoordinator.ApplyCoordination(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            When implemented in derived classes applies adjustments to the search criteria object 
            to coordinate pre SharePoint Query changes.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.ISearchCoordinator.RetractCoordination(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            When implemented in derived classes removes all adjustments to the search criteria object 
            made to coordinate pre SharePoint Query changes during an ApplyCoordination method call.
            This is the reverse function to ApplyCoordination.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.TaskProgressSearchFilterCoordinator.#ctor(UL.Aria.Service.Provider.SearchCoordinator.Task.ITaskProgressQueryBuilderFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.SearchCoordinator.TaskProgressSearchFilterCoordinator"/> class.
            </summary>
            <param name="taskProgressQueryBuilderFactory">The task progress query builder factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.TaskProgressSearchFilterCoordinator.ApplyCoordination(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            When implemented in derived classes applies adjustments to the search criteria object
            to coordinate pre SharePoint Query changes.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.TaskProgressSearchFilterCoordinator.RetractCoordination(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            When implemented in derived classes removes all adjustments to the search criteria object
            made to coordinate pre SharePoint Query changes during an ApplyCoordination method call.
            This is the reverse function to ApplyCoordination.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.Task.IQueryBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.Task.IQueryBuilder.BuildRefinerFilterQuery">
            <summary>
            Builds the refiner filter query.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.Task.ITaskProgressQueryBuilderFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.Task.ITaskProgressQueryBuilderFactory.GetQueryBuilder(System.String)">
            <summary>
            Gets the query builder.
            </summary>
            <param name="taskProgress">The task progress.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.Task.QueryBuilderAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.Task.QueryBuilderAttribute.#ctor(UL.Aria.Service.Contracts.Dto.TaskProgressEnumDto)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.SearchCoordinator.Task.QueryBuilderAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:UL.Aria.Service.Provider.SearchCoordinator.Task.QueryBuilderAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.Task.QueryBuilderBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.Task.QueryBuilderBase.BuildRefinerFilterQuery">
            <summary>
            Builds the refiner filter query.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressInTroubleQueryBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressInTroubleQueryBuilder.BuildRefinerFilterQuery">
            <summary>
            Builds the refiner filter query.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressOnTrackQueryBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressOnTrackQueryBuilder.BuildRefinerFilterQuery">
            <summary>
            Builds the refiner filter query.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressQueryBuilderFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressQueryBuilderFactory.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressQueryBuilderFactory"/> class.
            </summary>
            <param name="unityContainer">The unity container.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressQueryBuilderFactory.GetQueryBuilder(System.String)">
            <summary>
            Gets the query builder.
            </summary>
            <param name="taskProgress">The task progress.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressSlippingQueryBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressSlippingQueryBuilder.BuildRefinerFilterQuery">
            <summary>
            Builds the refiner filter query.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressWaitingQueryBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.Task.TaskProgressWaitingQueryBuilder.BuildRefinerFilterQuery">
            <summary>
            Builds the refiner filter query.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProjectProjectTemplateProvider">
            <summary>
            User Team Provider implementation
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProjectTemplateProvider.#ctor(UL.Aria.Service.Repository.IProjectProjectTemplateRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProjectProjectTemplateProvider"/> class.
            </summary>
            <param name="projectProjectTemplateRepository">The ProjectProjectTemplate repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProjectTemplateProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProjectProjectTemplate},System.Guid)">
            <summary>
            Updates the bulk.
            </summary>
            <param name="projectProjectTemplates">The project Project Template.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProjectTemplateProvider.FetchGroup(System.Guid)">
            <summary>
            Fetches the group.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns>IEnumerable&lt;ProjectProjectTemplate&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskTypeNotificationProvider">
            <summary>
            Task Type Notification Provider implementation
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeNotificationProvider.#ctor(UL.Aria.Service.Repository.ITaskTypeNotificationRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TaskTypeNotificationProvider"/> class.
            </summary>
            <param name="taskTypeNotificationRepository">The task type notification repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeNotificationProvider.FetchById(System.Guid)">
            <summary>
            Fetches the task type notification by identifier.
            </summary>
            <param name="taskTypeNotificationId">The task type notification identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeNotificationProvider.FetchByTaskTypeId(System.Guid)">
            <summary>
            Fetches task type notifications by task type id.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeNotificationProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified task type notification by identifier.
            </summary>
            <param name="taskTypeNotificationId">The task type notification identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeNotificationProvider.Save(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskTypeNotification},System.Guid)">
            <summary>
            Saves the specified task type notifications.
            </summary>
            <param name="taskTypeNotifications">The task type notifications.</param>
            <param name="taskTypeId">The task type identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskPropertyProvider">
            <summary>
                Implements operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.TaskProperty"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskPropertyProvider.#ctor(UL.Aria.Service.Repository.ITaskPropertyRepository,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TaskPropertyProvider"/> class.
            </summary>
            <param name="repository">The repository.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskPropertyProvider.Create(UL.Aria.Service.Domain.Entity.TaskProperty)">
            <summary>
                Creates the specified <see cref="T:UL.Aria.Service.Domain.Entity.TaskProperty"/>.
            </summary>
            <param name="entity">The industry code.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskPropertyProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.TaskProperty)">
            <summary>
                Updates the specified <see cref="T:UL.Aria.Service.Domain.Entity.TaskProperty"/>.
            </summary>
            <param name="id">The id.</param>
            <param name="entity">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskPropertyProvider.FindByTaskPropertyTypeId``1(System.Guid,System.Guid)">
            <summary>
                Finds the by task property type identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <param name="taskPropertyTypeId">The task property type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskPropertyProvider.FindByTaskId(System.Guid)">
            <summary>
                Finds the by task identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskNotificationProvider">
            <summary>
            Task Notification Provider implementation
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskNotificationProvider.#ctor(UL.Aria.Service.Repository.ITaskNotificationRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TaskNotificationProvider"/> class.
            </summary>
            <param name="taskNotificationRepository">The task notification repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskNotificationProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="taskNotificationId">The task notification identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskNotificationProvider.FetchByTaskId(System.Guid)">
            <summary>
            Fetches task notifications by task id.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskNotificationProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified task notification identifier.
            </summary>
            <param name="taskNotificationId">The task notification identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskNotificationProvider.Save(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskNotification},System.Guid)">
            <summary>
            Saves the specified task notifications.
            </summary>
            <param name="taskNotifications">The task notifications.</param>
            <param name="taskId">The task identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskTypeAvailableBehaviorFieldProvider">
            <summary>
            Implements a provider for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeAvailableBehaviorFieldProvider.#ctor(UL.Aria.Service.Repository.ITaskTypeAvailableBehaviorFieldRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TaskTypeAvailableBehaviorFieldProvider"/> class.
            </summary>
            <param name="repository">The repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeAvailableBehaviorFieldProvider.FindByTaskTypeAvailableBehaviorId(System.Guid)">
            <summary>
            Finds the by task type available behavior identifier.
            </summary>
            <param name="taskTypeAvailableBehaviorId">The task type available behavior identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskTypeAvailableBehaviorProvider">
            <summary>
            Implements a provider for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeAvailableBehaviorProvider.#ctor(UL.Aria.Service.Repository.ITaskTypeAvailableBehaviorRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TaskTypeAvailableBehaviorProvider"/> class.
            </summary>
            <param name="repository">The repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskTypeBehaviorProvider">
            <summary>
            Implements a provider for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeBehavior"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeBehaviorProvider.#ctor(UL.Aria.Service.Repository.ITaskTypeBehaviorRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TaskTypeBehaviorProvider"/> class.
            </summary>
            <param name="repository">The repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeBehaviorProvider.FindByTaskTypeId(System.Guid)">
            <summary>
            Finds the by task type identifier.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeBehaviorProvider.Save(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskTypeBehavior},System.Guid)">
            <summary>
            Saves the specified task type behaviors.
            </summary>
            <param name="taskTypeBehaviors">The task type behaviors.</param>
            <param name="taskTypeId">The value.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeBehaviorProvider.FetchByMultipleTaskTypeIds(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Fetches the by multiple task type ids.
            </summary>
            <param name="taskTypeIds">The task type ids.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.UserTeamProvider">
            <summary>
            User Team Provider implementation
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserTeamProvider.#ctor(UL.Aria.Service.Repository.IUserTeamRepository,UL.Aria.Service.Repository.IUserTeamMemberRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.UserTeamProvider"/> class.
            </summary>
            <param name="userTeamRepository">The user team repository.</param>
            <param name="userTeamMemberRepository">The user team member repository.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserTeamProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserTeamProvider.FetchByUserId(System.Guid)">
            <summary>
            Fetches the by user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserTeamProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserTeamProvider.Create(UL.Aria.Service.Domain.Entity.UserTeam)">
            <summary>
            Creates the specified user team.
            </summary>
            <param name="userTeam">The user team.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserTeamProvider.Update(UL.Aria.Service.Domain.Entity.UserTeam)">
            <summary>
            Updates the specified user team.
            </summary>
            <param name="userTeam">The user team.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.LinkProvider">
            <summary>
            Link Provider implementation
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkProvider.#ctor(UL.Aria.Service.Repository.ILinkRepository,UL.Aria.Service.Provider.IBusinessUnitProvider,UL.Aria.Service.Provider.ILinkAssociationProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.LinkProvider"/> class.
            </summary>
            <param name="linkRepository">The link repository.</param>
            <param name="businessUnitProvider">The business unit provider.</param>
            <param name="linkAssociationProvider">The link association provider.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>        
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkProvider.FetchLinksByEntity(System.Guid)">
            <summary>
            Fetches all active links associated with the specified entityId.
            </summary>
            <param name="entityId">The owner entity identifier.</param>
            <returns></returns>      
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkProvider.Delete(System.Guid)">
            <summary>
            Deletes a link with the specified linkId.
            </summary>
            <param name="linkId">The link identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkProvider.Create(UL.Aria.Service.Domain.Entity.Link)">
            <summary>
            Creates the specified link.
            </summary>
            <param name="link">The link.</param>
            <returns></returns>        
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkProvider.UpdateLinkAssociations(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Link},System.Guid)">
            <summary>
            Updates the link associations.
            </summary>
            <param name="links">The links.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkProvider.Update(UL.Aria.Service.Domain.Entity.Link)">
            <summary>
            Updates the specified link.
            </summary>
            <param name="link">The link.</param>        
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria dto.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.LinkProvider.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
            <returns></returns>     
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskCategoryProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskCategoryProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskCategoryProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskCategoryProvider.Create(UL.Aria.Service.Domain.Entity.TaskCategory)">
            <summary>
            Creates the specified task template.
            </summary>
            <param name="taskCategory">The task template.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskCategoryProvider.Update(UL.Aria.Service.Domain.Entity.TaskCategory)">
            <summary>
            Updates the specified task template.
            </summary>
            <param name="taskCategory">The task template.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskCategoryProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskCategoryProvider.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskCategoryProvider.FetchActiveById(System.Guid)">
            <summary>
            Fetches the active by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.LocationCodeProvider">
            <summary>
                stub
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.LocationCodeProvider.#ctor(UL.Aria.Service.Repository.ILocationCodeRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.LocationCodeProvider"/> class.
            </summary>
            <param name="repository">The repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.LocationCodeProvider.FetchAll">
            <summary>
                Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.LocationCodeProvider.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>LocationCode.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.LookupProvider">
            <summary>
             LookupProvider Provider
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.ILookupProvider">
            <summary>
            Interface for Lookup Provider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILookupProvider.FetchAllBusinessUnits">
            <summary>
                Fetch all BusinessUnits  
            </summary>
            <returns>IEnumerable{BusinessUnits}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILookupProvider.FetchBusinessUnitByEntity(System.Guid)">
            <summary>
            Fetches the business unit by entity.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ILookupProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Lookup.BusinessUnit},System.Guid)">
            <summary>
            Updates the bulk.
            </summary>
            <param name="businessUnits">The business units.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.LookupProvider.#ctor(UL.Aria.Service.Repository.ILookupRepository,UL.Aria.Service.Provider.IBusinessUnitAssociationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.LookupProvider"/> class.
            </summary>
            <param name="lookupRepository">The Lookup repository.</param>
            <param name="businessUnitAssociationProvider">The business unit association provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.LookupProvider.FetchAllBusinessUnits">
            <summary>
                Fetch all business units
            </summary>
            <returns>IEnumerable{BusinessUnit}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.LookupProvider.FetchBusinessUnitByEntity(System.Guid)">
            <summary>
            Fetches the business unit by entity.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.LookupProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Lookup.BusinessUnit},System.Guid)">
            <summary>
            Updates the bulk.
            </summary>
            <param name="businessUnits">The business units.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.HistoryProvider">
            <summary>
             History Provider
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IHistoryProvider">
            <summary>
            Interface for History Provider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IHistoryProvider.FetchHistoryByEntityId(System.Guid)">
            <summary>
                Fetches all history items for a given Entity, i.e. Project History, Order History, etc
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>IEnumerable{History}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IHistoryProvider.Create(UL.Aria.Service.Domain.History)">
            <summary>
                Creates the specified history item.
            </summary>
            <param name="history">The new history item.</param>
            <returns>HistoryId.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.HistoryProvider.#ctor(UL.Aria.Service.Repository.IHistoryRepository,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.HistoryProvider"/> class.
            </summary>
            <param name="historyRepository">The project repository.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.HistoryProvider.FetchHistoryByEntityId(System.Guid)">
            <summary>
                Fetches all history items for a given Entity, i.e. Project History, Order History, etc
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>IEnumerable{History}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.HistoryProvider.Create(UL.Aria.Service.Domain.History)">
            <summary>
                Creates the specified history item.
            </summary>
            <param name="history">The new history item.</param>
            <returns>HistoryId.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.InboundMessageOrderMessageAzureBlobStorageLocatorProvider">
            <summary>
            Class InboundMessageOrderMessageAzureBlobStorageLocatorProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageOrderMessageAzureBlobStorageLocatorProvider.#ctor(UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSourceResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.InboundMessageOrderMessageAzureBlobStorageLocatorProvider"/> class.
            </summary>
            <param name="azureBlobStorageRepositoryConfigurationSourceResolver">The azure BLOB storage repository configuration source resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.InboundMessageOrderMessageAzureBlobStorageLocatorProvider.FetchById(System.Nullable{System.Guid})">
            <summary>
            Fetches this instance.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AzureBlobStorageConfiguration.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.ISearchCoordinatorFactory">
            <summary>
            Supplies a Factory interface for retrieving Search Coordinators
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.ISearchCoordinatorFactory.GetCoordinators(UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto)">
            <summary>
            Gets a list of coordinators registered to the specified entity type.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.ProjectPastDueSearchFilterDependencyCoordinator">
            <summary>
            Provide methods for appling and retracting past due project status requirments 
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.ProjectPastDueSearchFilterDependencyCoordinator.ApplyCoordination(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            When implemented in derived classes applies adjustments to the search criteria object 
            to coordinate pre SharePoint Query changes.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.ProjectPastDueSearchFilterDependencyCoordinator.RetractCoordination(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            When implemented in derived classes removes all adjustments to the search criteria object 
            made to coordinate pre SharePoint Query changes during an ApplyCoordination method call.
            This is the reverse function to ApplyCoordination.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.SearchCoordinatorFactory">
            <summary>
            Default Search Coordinator Factory.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.SearchCoordinatorFactory.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.SearchCoordinator.SearchCoordinatorFactory"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.SearchCoordinatorFactory.InitLookup">
            <summary>
            Initializes the lookup.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.SearchCoordinatorFactory.GetCoordinators(UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto)">
            <summary>
            Gets a list of coordinators registered to the specified entity type.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchCoordinator.SearchCoordinatorForAttribute">
            <summary>
            Indicator of the entity type that the coordinator is applicable.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchCoordinator.SearchCoordinatorForAttribute.#ctor(UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.SearchCoordinator.SearchCoordinatorForAttribute"/> class.
            </summary>
            <param name="entityType"> The type of the entity being search to coordinate.</param>
        </member>
        <member name="P:UL.Aria.Service.Provider.SearchCoordinator.SearchCoordinatorForAttribute.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity being search to coordinate.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SearchCoordinator.SearchCoordinatorForAttribute.Ordinal">
            <summary>
            Gets or sets the sort ordinal.
            </summary>
            <value>
            The ordinal.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Provider.ServiceCodeProvider">
            <summary>
                provider for <see cref="T:UL.Aria.Service.Domain.Entity.ServiceCode"/> entities.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IServiceCodeProvider">
            <summary>
                Defines Operations for ServiceCode
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IServiceCodeProvider.FetchAll">
            <summary>
                Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IServiceCodeProvider.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>ServiceCode.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ServiceCodeProvider.#ctor(UL.Aria.Service.Repository.IServiceCodeRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ServiceCodeProvider"/> class.
            </summary>
            <param name="repository">The repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ServiceCodeProvider.FetchAll">
            <summary>
                Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ServiceCodeProvider.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>ServiceCode.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IndustryCodeProvider">
            <summary>
                stub
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IIndustryCodeProvider">
            <summary>
                Defines Operations for IndustryCode
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIndustryCodeProvider.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>IndustryCode.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIndustryCodeProvider.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IndustryCodeProvider.#ctor(UL.Aria.Service.Repository.IIndustryCodeRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.IndustryCodeProvider"/> class.
            </summary>
            <param name="repository">The repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IndustryCodeProvider.FetchByExternalId(System.String)">
            <summary>
            Fetches the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>IndustryCode.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IndustryCodeProvider.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.INotificationProvider">
            <summary>
            Provides an interface for a Notification provider.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.INotificationProvider.FetchById(System.Guid)">
            <summary>
            Fetches the notification matching the specified id.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.INotificationProvider.FetchNotificationsByUser(System.Guid)">
            <summary>
            Fetches all active notifications associated with the specified userId.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.INotificationProvider.FetchNotificationsByEntity(System.Guid)">
            <summary>
            Fetches all active notifications associated with the specified entityId.
            </summary>
            <param name="entiyId">The entiy identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.INotificationProvider.Delete(System.Guid)">
            <summary>
            Deletes a notification with the specified notificationId.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.INotificationProvider.DeleteNotificationsForEntity(System.Guid)">
            <summary>
            Deletes the notifications for the specified entityId.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.INotificationProvider.Create(UL.Aria.Service.Domain.Entity.Notification)">
            <summary>
            Creates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.INotificationProvider.Update(UL.Aria.Service.Domain.Entity.Notification)">
            <summary>
            Updates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.INotificationProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},System.Guid)">
            <summary>
            Updates the list of notifications in the bulk for the specified entityId.
            </summary>
            <param name="notifications">The notifications.</param>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.INotificationProvider.Delete(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification})">
            <summary>
            Deletes the specified entities.
            </summary>
            <param name="entities">The entities.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ISenderProvider">
            <summary>
                Interface ISenderProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ISenderProvider.Create(UL.Aria.Service.Domain.Entity.Sender)">
            <summary>
                Creates the specified sender.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ISenderProvider.FindByName(System.String)">
            <summary>
                Finds the name of the by.
            </summary>
            <param name="name">The name.</param>
            <returns>Sender.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.NotificationProvider">
            <summary>
            Provides an implemenation of the Notificaiton provider interface.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.NotificationProvider.#ctor(UL.Aria.Service.Repository.INotificationRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.NotificationProvider"/> class.
            </summary>
            <param name="notificationRepository">The notification repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.NotificationProvider.FetchById(System.Guid)">
            <summary>
            Fetches the notification matching the specified id.
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.NotificationProvider.FetchNotificationsByUser(System.Guid)">
            <summary>
            Fetches all active notifications associated with the specified userId.
            </summary>
            <param name="userId"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.NotificationProvider.FetchNotificationsByEntity(System.Guid)">
            <summary>
            Fetches the notifications by entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.NotificationProvider.Delete(System.Guid)">
            <summary>
            Deletes a notification with the specified notificationId.
            </summary>
            <param name="id"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.NotificationProvider.DeleteNotificationsForEntity(System.Guid)">
            <summary>
            Deletes the notifications for the specified entityId.
            </summary>
            <param name="entityId"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.NotificationProvider.Create(UL.Aria.Service.Domain.Entity.Notification)">
            <summary>
            Creates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.NotificationProvider.Update(UL.Aria.Service.Domain.Entity.Notification)">
            <summary>
            Updates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.NotificationProvider.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},System.Guid)">
            <summary>
            Updates the list of notifications in the bulk for the specified entityId.
            </summary>
            <param name="notifications">The notifications.</param>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.NotificationProvider.Delete(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification})">
            <summary>
            Deletes the specified entities.
            </summary>
            <param name="entities">The entities.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Provider.SenderProvider">
            <summary>
                Class SenderProvider.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SenderProvider.#ctor(UL.Aria.Service.Repository.ISenderRepository,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.SenderProvider"/> class.
            </summary>
            <param name="senderRepository">The sender repository.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SenderProvider.Create(UL.Aria.Service.Domain.Entity.Sender)">
            <summary>
                Creates the specified sender.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SenderProvider.FindByName(System.String)">
            <summary>
                Finds the name of the by.
            </summary>
            <param name="name">The name.</param>
            <returns>Sender.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.OrderServiceLineDetailProvider">
            <summary>
                Class OrderServiceLineDetailProvider.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IOrderServiceLineDetailProvider">
            <summary>
                Interface IOrderServiceLineDetailProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderServiceLineDetailProvider.Create(UL.Aria.Service.Domain.Entity.OrderServiceLineDetail)">
            <summary>
                Creates the specified order service line detail.
            </summary>
            <param name="orderServiceLineDetail">The order service line detail.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderServiceLineDetailProvider.FindAll">
            <summary>
                Finds all order service line details.
            </summary>
            <returns>IList{OrderServiceLineDetail}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderServiceLineDetailProvider.FindByIds(System.Guid,System.String)">
            <summary>
                Finds a order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="lineId">The line identifier.</param>
            <returns>OrderServiceLineDetail.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderServiceLineDetailProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches for order service line details by the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>OrderServiceLineDetailSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderServiceLineDetailProvider.Update(UL.Aria.Service.Domain.Entity.OrderServiceLineDetail)">
            <summary>
                Updates the specified order service line detail.
            </summary>
            <param name="orderServiceLineDetail">The order service line detail.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderServiceLineDetailProvider.Delete(System.Guid,System.String)">
            <summary>
                Deletes the order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="lineId">The line identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderServiceLineDetailProvider.#ctor(UL.Aria.Service.Repository.IOrderServiceLineDetailRepository,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.OrderServiceLineDetailProvider"/> class.
            </summary>
            <param name="orderServiceLineDetailRepository">The order service line detail repository.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderServiceLineDetailProvider.Create(UL.Aria.Service.Domain.Entity.OrderServiceLineDetail)">
            <summary>
                Creates the specified order service line detail.
            </summary>
            <param name="orderServiceLineDetail">The order service line detail.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderServiceLineDetailProvider.FindAll">
            <summary>
                Finds all order service line details.
            </summary>
            <returns>IList{OrderServiceLineDetail}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderServiceLineDetailProvider.FindByIds(System.Guid,System.String)">
            <summary>
                Finds a order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="lineId">The line identifier.</param>
            <returns>OrderServiceLineDetail.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderServiceLineDetailProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches for order service line details by the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>OrderServiceLineDetailSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderServiceLineDetailProvider.Update(UL.Aria.Service.Domain.Entity.OrderServiceLineDetail)">
            <summary>
                Updates the specified order service line detail.
            </summary>
            <param name="orderServiceLineDetail">The order service line detail.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderServiceLineDetailProvider.Delete(System.Guid,System.String)">
            <summary>
                Deletes the order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="lineId">The line identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IMultiProjectDocumentBuilder">
            <summary>
            Builds document downloads for several Projects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IMultiProjectDocumentBuilder.Build(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProjectDetail})">
            <summary>
            Builds the specified project.
            </summary>
            <param name="projects">The projects.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductFamilyFeatureValueProvider">
            <summary>
                Interface IProductFamilyFeatureValueProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureValueProvider.FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{ProductFamilyFeatureValue}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureValueProvider.Fetch(System.Guid)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>IList{ProductFamilyFeatureValue}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureValueProvider.FetchByProductFeatureId(System.Guid)">
            <summary>
                Fetches the by product family id.
            </summary>
            <param name="productFeatureId">The product feature id.</param>
            <returns>IList{ProductFamilyFeatureValue}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureValueProvider.Create(UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue)">
            <summary>
                Creates the specified product family feature value.
            </summary>
            <param name="productFamilyFeatureValue">The product family feature value.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureValueProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="productFamilyFeatureValue">The product family feature value.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureValueProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProjectStatusMessageProvider">
            <summary>
            Handles publish of <see cref="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessage"/> objects
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectStatusMessageProvider.Publish(UL.Aria.Service.Domain.Entity.ProjectStatusMessage)">
            <summary>
            Publishes the specified project status message.
            </summary>
            <param name="projectStatusMessage">The project status message.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectStatusMessageProvider.GetNext">
            <summary>
            Gets the next.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductFamilyValidationManager">
            <summary>
                Implements operations for Validating a <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductFamilyValidationManager">
            <summary>
                Defines operations for Validating a <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyValidationManager.Validate(UL.Aria.Service.Domain.Entity.ProductFamily,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicUpload},System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyUpload})">
            <summary>
                Validates the specified family.
            </summary>
            <param name="family">The family.</param>
            <param name="characteristicUploads">The characteristic uploads.</param>
            <param name="dependencies"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyValidationManager.#ctor(UL.Aria.Service.Provider.IProductFamilyAttributeProvider,UL.Aria.Service.Provider.IProductFamilyFeatureProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductFamilyValidationManager"/> class.
            </summary>
            <param name="attributeProvider">The attribute provider.</param>
            <param name="featureProvider">The feature provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyValidationManager.Validate(UL.Aria.Service.Domain.Entity.ProductFamily,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicUpload},System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyUpload})">
            <summary>
                Validates the specified family.
            </summary>
            <param name="family">The family.</param>
            <param name="characteristicUploads">The characteristic uploads.</param>
            <param name="dependencies"></param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskDocumentBuilder">
            <summary>
            Defines operations to build download documents for tasks.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskDocumentBuilder.Build(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Builds a documetn for the specified tasks.
            </summary>
            <param name="tasks">The tasks.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskDocumentBuilder.Build(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskProjectMapping})">
            <summary>
            Builds the specified tasks.
            </summary>
            <param name="tasks">The tasks.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.MultiProjectDocumentBuilder">
            <summary>
            Implements building download documens for several projects at once
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.MultiProjectDocumentBuilder.Build(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProjectDetail})">
            <summary>
            Builds the specified project.
            </summary>
            <param name="projects">The projects.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductFamilyFeatureValueProvider">
            <summary>
                Class ProductFamilyFeatureValueProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureValueProvider.#ctor(UL.Aria.Service.Repository.IProductFamilyFeatureValueRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProductFamilyFeatureValueProvider"/> class.
            </summary>
            <param name="productFamilyFeatureValueRepository">The product family feature value repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureValueProvider.FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{ProductFamilyFeatureValue}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureValueProvider.Fetch(System.Guid)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>IList{ProductFamilyFeatureValue}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureValueProvider.FetchByProductFeatureId(System.Guid)">
            <summary>
                Fetches the by product family id.
            </summary>
            <param name="productFeatureId">The product feature id.</param>
            <returns>IList{ProductFamilyFeatureValue}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureValueProvider.Create(UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue)">
            <summary>
                Creates the specified product family feature value.
            </summary>
            <param name="productFamilyFeatureValue">The product family feature value.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureValueProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="productFamilyFeatureValue">The product family feature value.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureValueProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProjectStatusMessageProvider">
            <summary>
            Handles publish of <see cref="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessage"/> objects
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectStatusMessageProvider.#ctor(UL.Aria.Service.Repository.IProjectStatusMessageRepository,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProjectStatusMessageProvider"/> class.
            </summary>
            <param name="projectStatusMessageRepository">The project status message repository.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectStatusMessageProvider.Publish(UL.Aria.Service.Domain.Entity.ProjectStatusMessage)">
            <summary>
            Publishes the specified project status message.
            </summary>
            <param name="projectStatusMessage">The project status message.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectStatusMessageProvider.GetNext">
            <summary>
            Gets the next.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SharePointQueryResult">
            <summary>
            Class SharePointQueryResult.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SharePointQueryResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.SharePointQueryResult"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointQueryResult.GetUri">
            <summary>
                Gets or sets the get URI.
            </summary>
            <value>The get URI.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointQueryResult.JsonRequest">
            <summary>
                Gets or sets the json request.
            </summary>
            <value>The json request.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointQueryResult.JsonResult">
            <summary>
                Gets or sets the json result.
            </summary>
            <value>The json result.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointQueryResult.TotalRows">
            <summary>
                Total rows in query but not total rows returned which is less based on the rowlimit sent in but this is needed to
                insure paging knows how many possuble rows are in the query.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointQueryResult.SearchResults">
            <summary>
                Gets or sets the search results.
            </summary>
            <value>The search results.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointQueryResult.RefinerResults">
            <summary>
                Gets or sets the refiner results.
            </summary>
            <value>The refiner results.</value>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskDocumentBuilder">
            <summary>
            Builds download documents for tasks.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskDocumentBuilder.Build(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Builds a documetn for the specified tasks.
            </summary>
            <param name="tasks">The tasks.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskDocumentBuilder.Build(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskProjectMapping})">
            <summary>
            Builds the specified tasks.
            </summary>
            <param name="tasks">The tasks.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ProductFeatureDependencyValidator">
            <summary>
            Validates dependencties for product features.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ProductFeatureValueValidator">
            <summary>
            Validates values of a feature for a product.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ICharacteristicValidator">
            <summary>
                Defines operations to Validate <see cref="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ICharacteristicValidator.Validate(UL.Aria.Service.Domain.Entity.Product,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductCharacteristic},System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.List{System.String})">
            <summary>
                Validates the instance.
            </summary>
            <param name="product"></param>
            <param name="characteristics"></param>
            <param name="characteristicDefinitions">The characteristic definitions.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductFeatureValueValidator.#ctor(UL.Aria.Service.Provider.IProductFamilyFeatureProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.ProductFeatureValueValidator"/> class.
            </summary>
            <param name="productFamilyFeatureProvider">The product family feature provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductFeatureValueValidator.Validate(UL.Aria.Service.Domain.Entity.Product,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductCharacteristic},System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.List{System.String})">
            <summary>
            Validates the instance.
            </summary>
            <param name="product"></param>
            <param name="characteristics"></param>
            <param name="characteristicDefinitions">The characteristic definitions.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductFeatureValueValidator.ValidateValues(System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.List{System.String},UL.Aria.Service.Domain.Entity.ProductCharacteristic,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductCharacteristic},System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue}},System.String[])">
            <summary>
            Validates the values.
            </summary>
            <param name="characteristicDefinitions">The characteristic definitions.</param>
            <param name="errors">The errors.</param>
            <param name="productCharacteristic">The product characteristic.</param>
            <param name="characteristics">The characteristics.</param>
            <param name="foundValues">The found values.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductFeatureDependencyValidator.#ctor(UL.Aria.Service.Provider.IProductFamilyFeatureProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.ProductFeatureDependencyValidator"/> class.
            </summary>
            <param name="productFamilyFeatureProvider">The product family feature provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductFeatureDependencyValidator.ValidateValues(System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.List{System.String},UL.Aria.Service.Domain.Entity.ProductCharacteristic,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductCharacteristic},System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue}},System.String[])">
            <summary>
            Validates the values.
            </summary>
            <param name="characteristicDefinitions">The characteristic definitions.</param>
            <param name="errors">The errors.</param>
            <param name="productCharacteristic">The product characteristic.</param>
            <param name="characteristics">The characteristics.</param>
            <param name="foundValues">The found values.</param>
            <param name="values">The values.</param>
        </member>
        <member name="T:UL.Aria.Service.MapperResolver.BusinessClaimResolver">
            <summary>
                Business Claim Resolver
            </summary>
        </member>
        <member name="M:UL.Aria.Service.MapperResolver.BusinessClaimResolver.ResolveCore(UL.Aria.Service.Claim.Contract.UserClaimDto)">
            <summary>
                Resolves the Business Claim.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.AssetFieldMetadata">
            <summary>
                Class AssetFieldMetadata
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.IAssetFieldMetadata">
            <summary>
            Interface IAssetFieldMetadata
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IAssetFieldMetadata.GetContainerAssetFields(UL.Aria.Service.Contracts.Dto.AssetTypeEnumDto)">
            <summary>
                Gets the container asset fields.
            </summary>
            <param name="assetType">Type of the asset.</param>
            <returns>Dictionary{System.StringAssetField}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IAssetFieldMetadata.GetContainerAssetFields(System.Nullable{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto})">
            <summary>
            Gets the container asset fields.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <returns>Dictionary{System.StringAssetField}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IAssetFieldMetadata.GetContainerAssetField(UL.Aria.Service.Contracts.Dto.AssetTypeEnumDto,System.String)">
            <summary>
                Gets the container asset field.
            </summary>
            <param name="assetType">Type of the asset.</param>
            <param name="assetFieldPropertyCharacteristicName">Name of the asset field property or characteristic.</param>
            <returns>AssetField.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IAssetFieldMetadata.GetContainerAssetField(System.Nullable{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto},System.String)">
            <summary>
            Gets the container asset field.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="assetFieldPropertyCharacteristicName">Name of the asset field property characteristic.</param>
            <returns>System.Nullable{AssetField}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IAssetFieldMetadata.GetSelectProperties(UL.Aria.Service.Contracts.Dto.AssetTypeEnumDto)">
            <summary>
                Gets the select properties.
            </summary>
            <param name="assetType">Type of the asset.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IAssetFieldMetadata.GetSelectProperties(System.Nullable{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto})">
            <summary>
            Gets the select properties.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IAssetFieldMetadata.GetContainerAssetFieldsForContainer(UL.Aria.Service.Contracts.Dto.AssetTypeEnumDto)">
            <summary>
            Gets the container asset fields for container.
            </summary>
            <param name="assetType">Type of the asset.</param>
            <returns>IEnumerable{KeyValuePair{System.StringAssetField}}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IAssetFieldMetadata.GetContainerAssetFieldsForContainer(System.Nullable{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto})">
            <summary>
            Gets the container asset fields for container.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <returns>IEnumerable{KeyValuePair{System.StringAssetField}}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.GetContainerAssetFieldsForContainer(UL.Aria.Service.Contracts.Dto.AssetTypeEnumDto)">
            <summary>
                Gets the container asset fields for container.
            </summary>
            <param name="assetType">Type of the asset.</param>
            <returns>IEnumerable{KeyValuePair{System.StringAssetField}}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.GetContainerAssetFieldsForContainer(System.Nullable{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto})">
            <summary>
                Gets the container asset fields for container.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <returns>IEnumerable{KeyValuePair{System.StringAssetField}}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.GetContainerAssetFields(UL.Aria.Service.Contracts.Dto.AssetTypeEnumDto)">
            <summary>
                Gets the container asset fields.
            </summary>
            <param name="assetType">Type of the asset.</param>
            <returns>Dictionary{System.StringAssetField}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.GetContainerAssetFields(System.Nullable{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto})">
            <summary>
                Gets the container asset fields.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <returns>Dictionary{System.StringAssetField}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.GetContainerAssetField(UL.Aria.Service.Contracts.Dto.AssetTypeEnumDto,System.String)">
            <summary>
                Gets the container asset field.
            </summary>
            <param name="assetType">Type of the asset.</param>
            <param name="assetFieldPropertyCharacteristicName">Name of the asset field property or characteristic.</param>
            <returns>AssetField.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.GetContainerAssetField(System.Nullable{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto},System.String)">
            <summary>
                Gets the container asset field.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="assetFieldPropertyCharacteristicName">Name of the asset field property characteristic.</param>
            <returns>System.Nullable{AssetField}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.GetSelectProperties(UL.Aria.Service.Contracts.Dto.AssetTypeEnumDto)">
            <summary>
                Gets the select properties.
            </summary>
            <param name="assetType">Type of the asset.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.GetSelectProperties(System.Nullable{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto})">
            <summary>
                Gets the select properties.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField">
            <summary>
                Struct AssetField
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField"/> struct.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.SuppressEmpty">
            <summary>
            Gets or sets a value indicating whether [suppress emtpy].
            </summary>
            <value>
              <c>true</c> if [suppress emtpy]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.Alias">
            <summary>
                The alias
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.DisplayName">
            <summary>
                The GUI display name
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.Ignore">
            <summary>
                The ignore
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.IncludeInContainer">
            <summary>
                The include in container
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.IsCharacteristic">
            <summary>
                The is characteristic
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.IsLowerCase">
            <summary>
                The is lowercase
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.Multi">
            <summary>
                The asset field flag that tells if it is mutil value (true) or not (false)
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.Query">
            <summary>
                The asset field flag that tells if it is queryable (true) or not (false)
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.Refine">
            <summary>
                The asset field flag that tells if it is refinable (true) or not (false) (If refinable also must be queryable but
                this is done automatically no need to set queryable too)
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.Retrieve">
            <summary>
                The asset field flag that tells if it is retrievable (true) or not (false)
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.Safe">
            <summary>
                The asset field flag that tells if it is safe (true) or not (false)
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.Search">
            <summary>
                The asset field flag that tells if it is searchable (true) or not (false)
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.Sort">
            <summary>
                The asset field flag that tells if it is sortable (true) or not (false)
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AssetFieldMetadata.AssetField.Name">
            <summary>
                The SharePoint metadata name, only needed if property name on class isn't correct.  If not provide builds name from
                property name as follows: aria[type][propertyname] (aria[type] prefix ex. if name is 'MyName' and container type is
                'Product' then the metadata name will be 'ariaProductMyName')
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Category">
            <summary>
                Class Category
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Category.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Category.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Category"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Category.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Claim">
            <summary>
            Class Claim
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Claim.Id">
            <summary>
                Gets or sets the id.
            </summary>
            <value>
                The id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Claim.Uri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Claim.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOption">
            <summary>
            
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOption.ProductFamilyCharacteristicId">
            <summary>
            Gets or sets the product family characteristic id.
            </summary>
            <value>
            The product family characteristic id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOption.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOption.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOption.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOptionName">
            <summary>
            List of available names for options.
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOptionName.AllowValueTypes">
            <summary>
            The allow value types
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOptionValue">
            <summary>
            List of available values for options.
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOptionValue.MultipleValue">
            <summary>
            The multiple value
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOptionValue.RangeValue">
            <summary>
            The range value
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicUpload">
            <summary>
            ProductFamilyCharacteristicUpload
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicUpload.UploadAction">
            <summary>
            Gets or sets the upload action.
            </summary>
            <value>
            The upload action.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicUpload.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue">
            <summary>
            Describes values allwoed for a feature.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue.FamilyId">
            <summary>
            Gets or sets the family.
            </summary>
            <value>
            The family id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue.FeatureValue">
            <summary>
            Gets or sets the feature value.
            </summary>
            <value>
            The feature value id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue.IsDisabled">
            <summary>
            Gets or sets a value indicating whether this instance is disabled.
            </summary>
            <value>
            <c>true</c> if this instance is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping">
            <summary>
            Describes a mapping of dependencies between <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue"/> objects within a family.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping.ParentAssocation">
            <summary>
            Gets or sets the parent assocation.
            </summary>
            <value>
            The parent assocation.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping.ParentValues">
            <summary>
            Gets or sets the parent values.
            </summary>
            <value>
            The parent values.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping.ChildAssocation">
            <summary>
            Gets or sets the child assocation.
            </summary>
            <value>
            The parent assocation.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping.ChildValues">
            <summary>
            Gets or sets the child values.
            </summary>
            <value>
            The parent values.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyUpload">
            <summary>
            Upload payload class for <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency"/>
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyUpload.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyUpload.ParentValues">
            <summary>
            Gets or sets the parent values.
            </summary>
            <value>
            The parent values.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyUpload.Child">
            <summary>
            Gets or sets the child.
            </summary>
            <value>
            The child.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyUpload.ChildValues">
            <summary>
            Gets or sets the child values.
            </summary>
            <value>
            The child values.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyUpload.FamilyFeatureAllowedValueDependency">
            <summary>
            Gets or sets the family feature allowed value dependency constructe from values.
            </summary>
            <value>
            The family feature allowed value dependency.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyUpload.UploadAction">
            <summary>
            Gets or sets the upload action.
            </summary>
            <value>
            The upload action.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue">
            <summary>
            Available values for a <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeature"/>
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue.FeatureId">
            <summary>
            Gets or sets the product family feature id.
            </summary>
            <value>
            The product family feature id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue.Xtype">
            <summary>
            Gets or sets the xtype.
            </summary>
            <value>
            The xtype.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue.Maximum">
            <summary>
            Gets or sets the max.
            </summary>
            <value>
            The max.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>
            The minimum.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue.UnitOfMeasure">
            <summary>
            Gets or sets the unit of measure.
            </summary>
            <value>
            The unit of measure.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyUploadResult">
            <summary>
            Results of a <see cref="P:UL.Aria.Service.Domain.Entity.ProductFamilyUploadResult.ProductFamily"/> upload.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductFamilyUploadResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyUploadResult"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyUploadResult.IsValid">
            <summary>
            Gets or sets a value indicating whether this instance is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyUploadResult.ProductFamily">
            <summary>
            Gets or sets the product family.
            </summary>
            <value>
            The product family.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyUploadResult.CharacteristicUploads">
            <summary>
            Gets or sets the characteristic uploads.
            </summary>
            <value>
            The characteristic uploads.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyUploadResult.Messages">
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyUploadResult.DependencyUploads">
            <summary>
            Gets or sets the dependency uploads.
            </summary>
            <value>
            The dependency uploads.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskComment">
            <summary>
                Class TaskComment
            </summary>    
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskComment.Comment">
            <summary>
                Gets or sets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskComment.CreatedBy">
            <summary>
                Gets or sets the created by.
            </summary>
            <value>The created by.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskComment.CreatedDate">
            <summary>
                Gets or sets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskTemplate">
            <summary>
                Class TaskTemplate
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TaskTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TaskTemplate"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTemplate.SubTasks">
            <summary>
                Gets or sets the sub tasks.
            </summary>
            <value>The sub tasks.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTemplate.TaskTypeId">
            <summary>
            Gets or sets the task type identifier.
            </summary>
            <value>
            The task type identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTemplate.ProjectTemplateId">
            <summary>
            Gets or sets the project template identifier.
            </summary>
            <value>
            The project template identifier.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskTemplates">
            <summary>
                Class TaskTemplates
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskTemplates.Tasks">
            <summary>
                Gets or sets the tasks.
            </summary>
            <value>The tasks.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.UnitOfMeasure">
            <summary>
                Unit of Measure
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UnitOfMeasure.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UnitOfMeasure.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Container">
            <summary>
                Class Container
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Container.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Container"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Container.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Container"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Container.CompanyId">
            <summary>
                Gets or sets the company id.
            </summary>
            <value>The company id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Container.PrimarySearchEntityId">
            <summary>
                Gets or sets the primary search entity id.
            </summary>
            <value>The primary search entity id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Container.PrimarySearchEntityType">
            <summary>
                Gets or sets the type of the primary search entity.
            </summary>
            <value>The type of the primary search entity.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Container.AvailableClaims">
            <summary>
                Gets or sets the available claims.
            </summary>
            <value>The available claims.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Container.ContainerLists">
            <summary>
                Gets or sets the permission groupings.
            </summary>
            <value>The permission groupings.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Container.IsDeleted">
            <summary>
                Gets or sets a value indicating whether this instance is deleted.
            </summary>
            <value><c>true</c> if this instance is deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ContainerAvailableClaim">
            <summary>
                Class ContainerAvailableClaims
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerAvailableClaim.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerAvailableClaim.ContainerId">
            <summary>
            Gets or sets the container id.
            </summary>
            <value>The container id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerAvailableClaim.Claim">
            <summary>
                Gets or sets the claim.
            </summary>
            <value>The claim.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerAvailableClaim.Value">
            <summary>
                Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ContainerImportFile">
            <summary>
            Tracking for importing files from other containers.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerImportFile.OriginalId">
            <summary>
            Gets or sets the original id.
            </summary>
            <value>
            The external id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerImportFile.OriginalContainerId">
            <summary>
            Gets or sets the original container.
            </summary>
            <value>
            The original container.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerImportFile.NewId">
            <summary>
            Gets or sets the new id.
            </summary>
            <value>
            The new id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ContainerList">
            <summary>
                Class ContainerList
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ContainerList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ContainerList"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerList.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerList.ContainerId">
            <summary>
            Gets or sets the container id.
            </summary>
            <value>The container id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerList.AssetType">
            <summary>
            Gets or sets the type of the asset.
            </summary>
            <value>The type of the asset.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerList.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerList.Permissions">
            <summary>
            Gets or sets the claim permissions.
            </summary>
            <value>The claim permissions.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ContainerListPermission">
            <summary>
                Class ContainerListPermission
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerListPermission.ContainerListId">
            <summary>
            Gets or sets the container list id.
            </summary>
            <value>The container list id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerListPermission.ContainerAvailableClaimId">
            <summary>
            Gets or sets the container available claim id.
            </summary>
            <value>The container available claim id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerListPermission.Claim">
            <summary>
            Gets or sets the claim.
            </summary>
            <value>The claim.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerListPermission.Permission">
            <summary>
            Gets or sets the permission.
            </summary>
            <value>The permission.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ContainerListPermission.GroupName">
            <summary>
            Gets or sets the name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Order">
            <summary>
                Class Order
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.IncomingOrder">
            <summary>
                Class IncomingOrder
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IncomingOrder.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.OriginalXmlParsed">
            <summary>
                +
                Gets or sets the original XML parsed.
            </summary>
            <value>The original XML parsed.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.BusinessUnit">
            <summary>
                Gets or sets the task organization.
            </summary>
            <value>The task organization.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.ProjectHeaderStatus">
            <summary>
                Gets or sets the project header status.
            </summary>
            <value>The project header status.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.CreationDate">
            <summary>
                Gets or sets the creation date.
            </summary>
            <value>The creation date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.CustomerRequestedDate">
            <summary>
                Gets or sets the customer requested date.
            </summary>
            <value>The customer requested date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.DateBooked">
            <summary>
                Gets or sets the date booked.
            </summary>
            <value>The date booked.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.DateOrdered">
            <summary>
                Gets or sets the date ordered.
            </summary>
            <value>The date ordered.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.LastUpdateDate">
            <summary>
                Gets or sets the last update date.
            </summary>
            <value>The last update date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.ExternalProjectId">
            <summary>
                Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.IncomingOrderCustomer">
            <summary>
                Gets or sets the incoming order customer.
            </summary>
            <value>The incoming order customer.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.IncomingOrderContact">
            <summary>
                Gets or sets the incoming order contact.
            </summary>
            <value>The incoming order contact.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.BillToContact">
            <summary>
                Gets or sets the bill to contact.
            </summary>
            <value>The bill to contact.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.ShipToContact">
            <summary>
                Gets or sets the ship to contact.
            </summary>
            <value>The ship to contact.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.ProjectName">
            <summary>
                Gets the Oracle project name.  This field cannot be edited in Aria and only comes from Oracle.
            </summary>
            <value>The name of the project.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.ProjectNumber">
            <summary>
                Gets or sets the project number.
            </summary>
            <value>The project number.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.OrderNumber">
            <summary>
                Gets or sets the order number.
            </summary>
            <value>The order number.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.OrderType">
            <summary>
                Gets or sets the type of the order.
            </summary>
            <value>The type of the order.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.ServiceLines">
            <summary>
                Gets or sets the service lines.
            </summary>
            <value>The service lines.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.CustomerPo">
            <summary>
                Gets or sets the customer PO.
            </summary>
            <value>The customer PO.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.Status">
            <summary>
                Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.WorkOrderBusinessComponentId">
            <summary>
                Gets or sets the work order business component id.
            </summary>
            <value>The work order business component id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.WorkOrderId">
            <summary>
                Gets or sets the work order id.
            </summary>
            <value>The work order id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.CompanyName">
            <summary>
                Gets or sets the name of the company.
            </summary>
            <value>
                The name of the company.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.ServiceLineItemCount">
            <summary>
            Gets the item count.
            </summary>
            <value>
            The item count.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.HideFromCustomer">
            <summary>
            Gets or sets a value indicating whether [hide from customer].
            </summary>
            <value>
              <c>true</c> if [hide from customer]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.HasOrderNumber">
            <summary>
            Gets or sets a value indicating whether this instance has order number.
            </summary>
            <value>
            <c>true</c> if this instance has order number; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.MessageId">
            <summary>
            Gets or sets the message identifier.
            </summary>
            <value>The message identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.QuoteNo">
            <summary>
            Gets or sets the quote no.
            </summary>
            <value>The quote no.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.TotalOrderPrice">
            <summary>
            Gets or sets the total order price.
            </summary>
            <value>The total order price.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrder.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
            <value>
            The currency.
            </value>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Order.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Order"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Order.IncomingOrderServiceLineIndustryCode">
            <summary>
            Gets the incoming order service line industry code.
            </summary>
            <value>
            The incoming order service line industry code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Order.IncomingOrderServiceLineServiceCode">
            <summary>
            Gets the incoming order service line service code.
            </summary>
            <value>
            The incoming order service line service code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Order.IncomingOrderServiceLineLocationCode">
            <summary>
            Gets the incoming order service line location code.
            </summary>
            <value>
            The incoming order service line location code.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.AcceptanceClaim">
            <summary>
            domain entity for acceptance claim
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AcceptanceClaim.#ctor(System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.AcceptanceClaim"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.AcceptanceClaim.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.AcceptanceClaim"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AcceptanceClaim.Accepted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:UL.Aria.Service.Domain.Entity.AcceptanceClaim"/> is accepted.
            </summary>
            <value>
              <c>true</c> if accepted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AcceptanceClaim.AcceptedDateTime">
            <summary>
            Gets or sets the accepted date time.
            </summary>
            <value>
            The accepted date time.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AcceptanceClaim.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.AcceptanceClaim.TermsAndConditionsId">
            <summary>
            Gets or sets the terms and conditions id.
            </summary>
            <value>
            The terms and conditions id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic">
            <summary>
                Represents a value saved for a product characteristic
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductCharacteristic.ParseMultiValue(System.Boolean)">
            <summary>
                Parses <see cref="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.Value"/> into multiple values based on standard delimiters.
            </summary>
            <param name="parseCombinations">if set to <c>true</c> combination values will also be parsed into their components.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductCharacteristic.ParseRange">
            <summary>
                Parses <see cref="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.Value"/>  into ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.Value">
            <summary>
                Gets or sets the value.
            </summary>
            <value>
                The value.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.Group">
            <summary>
                Gets or sets the group.
            </summary>
            <value>
                The group.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.ProductFamilyCharacteristicId">
            <summary>
                Gets or sets the characteristic id.
            </summary>
            <value>
                The characteristic id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.ProductFamilyCharacteristicType">
            <summary>
                Gets or sets the type of the product characteristic.
            </summary>
            <value>
                The type of the product characteristic.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.ProductId">
            <summary>
                Gets or sets the product id.
            </summary>
            <value>
                The product id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.DataType">
            <summary>
                Gets or sets the type of the data.
            </summary>
            <value>
                The type of the data.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.IsMultivalueAllowed">
            <summary>
                Gets or sets a value indicating whether this instance is multivalue allowed.
            </summary>
            <value>
                <c>true</c> if this instance is multivalue allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.IsRangeAllowed">
            <summary>
                Gets or sets a value indicating whether this instance is range allowed.
            </summary>
            <value>
                <c>true</c> if this instance is range allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.ParentId">
            <summary>
                Gets or sets the parent id.
            </summary>
            <value>The parent id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.ChildType">
            <summary>
                Gets or sets the type of the child.
            </summary>
            <value>The type of the child.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductCharacteristic.SortOrder">
            <summary>
                Gets or sets the sort order.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.DomainEntityExtentions">
            <summary>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.IncomingOrderContact">
            <summary>
            Class NewProjectContact
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IncomingOrderContact.MapIncomingOrderContact(UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
                Maps the incoming order contact.
            </summary>
            <param name="incomingOrderContact">The incoming order contact.</param>
            <returns>IncomingOrderContact.</returns>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.IncomingOrderId">
            <summary>
                Gets or sets the id of the parent entity (e.g. <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/>, <see cref="T:UL.Aria.Service.Domain.Entity.Project"/>, <see cref="T:UL.Aria.Service.Domain.Entity.Order"/>.
            </summary>
            <value>The incoming order id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.FullName">
            <summary>
                Gets or sets the full name.
            </summary>
            <value>The full name.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.CompanyName">
            <summary>
            Gets or sets the name of the company.
            </summary>
            <value>
            The name of the company.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.ContactRoleId">
            <summary>
                Gets or sets the contact role identifier.
            </summary>
            <value>The contact role identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.Title">
            <summary>
                Gets or sets the title.
            </summary>
            <value>
                The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.Email">
            <summary>
                Gets or sets the email.
            </summary>
            <value>
                The email.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.Address">
            <summary>
                Gets or sets the address.
            </summary>
            <value>
                The address.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.Phone">
            <summary>
                Gets or sets the phone.
            </summary>
            <value>
                The phone.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.State">
            <summary>
                Gets or sets the state.
            </summary>
            <value>
                The state.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.Country">
            <summary>
                Gets or sets the country.
            </summary>
            <value>
                The country.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.City">
            <summary>
                Gets or sets the city.
            </summary>
            <value>The city.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.Province">
            <summary>
                Gets or sets the province.
            </summary>
            <value>The province.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.PostalCode">
            <summary>
                Gets or sets the postal code.
            </summary>
            <value>The postal code.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.ExternalId">
            <summary>
            Gets or sets the external identifier.
            </summary>
            <value>
            The external identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.SubscriberNumber">
            <summary>
            Gets or sets the subscriber number.
            </summary>
            <value>
            The subscriber number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderContact.PartySiteNumber">
            <summary>
            Gets or sets the party site number.
            </summary>
            <value>
            The party site number.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.IncomingOrderCustomer">
            <summary>
                Class NewProjectCompany
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.IncomingOrderCustomer.MapIncomingOrderCustomer(UL.Aria.Service.Domain.Entity.IncomingOrderCustomer)">
            <summary>
                Maps the incoming order customer.
            </summary>
            <param name="incomingOrderCustomer">The incoming order customer.</param>
            <returns>IncomingOrderCustomer.</returns>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderCustomer.IncomingOrderId">
            <summary>
                Gets or sets the incoming order id.
            </summary>
            <value>The incoming order id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderCustomer.ProjectName">
            <summary>
                Gets or sets the name of the project.
            </summary>
            <value>The name of the project.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderCustomer.DUNS">
            <summary>
                Gets or sets the DUNS.
            </summary>
            <value>The DUNS.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderCustomer.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderCustomer.ExternalId">
            <summary>
                Gets or sets the external id.
            </summary>
            <value>The external id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderCustomer.AgentDetails">
            <summary>
                Gets or sets the agent details.
            </summary>
            <value>
                The agent details.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderCustomer.SubscriberNumber">
            <summary>
                Gets or sets the subscriber number.
            </summary>
            <value>
                The subscriber number.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine">
            <summary>
                Class NewProjectServiceLine
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.IncomingOrderId">
            <summary>
                Gets or sets the incoming order id.
            </summary>
            <value>The incoming order id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Quantity">
            <summary>
                Gets or sets the quantity.
            </summary>
            <value>The quantity.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.AllowChargesFromOtherOperatingUnits">
            <summary>
                Gets or sets the allow charges from other operating units.
            </summary>
            <value>The allow charges from other operating units.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.BillableExpenses">
            <summary>
                Gets or sets the billable expenses.
            </summary>
            <value>The billable expenses.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.CustomerModelNumber">
            <summary>
                Gets or sets the customer model number.
            </summary>
            <value>The customer model number.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ExternalId">
            <summary>
                Gets or sets the external id.
            </summary>
            <value>The external id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.LineNumber">
            <summary>
                Gets or sets the line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ParentExternalId">
            <summary>
                Gets or sets the parent external id.
            </summary>
            <value>The parent external id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.TypeCode">
            <summary>
                Gets or sets the type code.
            </summary>
            <value>The type code.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ItemCategories">
            <summary>
                Gets or sets the item categories.
            </summary>
            <value>The item categories.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.FulfillmentMethodCode">
            <summary>
                Gets or sets the fulfillment method code.
            </summary>
            <value>The fulfillment method code.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.FulfillmentSet">
            <summary>
                Gets or sets the fulfillment set.
            </summary>
            <value>The fulfillment set.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ConfigurationId">
            <summary>
                Gets or sets the configuration id.
            </summary>
            <value>The configuration id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Status">
            <summary>
                Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.PromiseDate">
            <summary>
                Gets or sets the promise date.
            </summary>
            <value>The promise date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.RequestDate">
            <summary>
                Gets or sets the request date.
            </summary>
            <value>The request date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.StartDate">
            <summary>
                Gets or sets the start date.
            </summary>
            <value>The start date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Billable">
            <summary>
                Gets or sets the billable.
            </summary>
            <value>
                The billable.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Program">
            <summary>
                Gets or sets the program.
            </summary>
            <value>
                The program.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Category">
            <summary>
                Gets or sets the category.
            </summary>
            <value>
                The category.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.SubCategory">
            <summary>
                Gets or sets the sub category.
            </summary>
            <value>
                The sub category.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Segment">
            <summary>
                Gets or sets the segment.
            </summary>
            <value>
                The segment.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ClientDetailService">
            <summary>
                Gets or sets the client detail service.
            </summary>
            <value>
                The client detail service.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.WorkOrderLineBusinessComponentId">
            <summary>
                Gets or sets the work order line business component id.
            </summary>
            <value>The work order line business component id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.WorkOrderLineId">
            <summary>
                Gets or sets the work order line id.
            </summary>
            <value>The work order line id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ApplicationObjectKeyId">
            <summary>
                Gets or sets the application object key id.
            </summary>
            <value>The application object key id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.IndustryCode">
            <summary>
            Gets or sets the industry code.
            </summary>
            <value>
            The industry code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ServiceCode">
            <summary>
            Gets or sets the service code.
            </summary>
            <value>
            The service code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.LocationCode">
            <summary>
            Gets or sets the preferred fulfillment location code.
            </summary>
            <value>
            The preferred fulfillment location code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.LocationName">
            <summary>
            Gets or sets the preferred fulfillment location.
            </summary>
            <value>
            The preferred fulfillment location.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.LocationCodeLabel">
            <summary>
            Gets or sets the location code label.
            </summary>
            <value>The location code label.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ServiceCodeLabel">
            <summary>
            Gets or sets the service code label.
            </summary>
            <value>The service code label.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.IndustryCodeLabel">
            <summary>
            Gets or sets the industry code label.
            </summary>
            <value>The industry code label.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Hold">
            <summary>
            Gets or sets the hold.
            </summary>
            <value>
            The hold.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ServiceSegment">
            <summary>
            Gets or sets the service segment.
            </summary>
            <value>The service segment.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ServiceSegmentDescription">
            <summary>
            Gets or sets the service segment description.
            </summary>
            <value>The service segment description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ServiceCategory">
            <summary>
            Gets or sets the service category.
            </summary>
            <value>The service category.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ServiceCategoryDescription">
            <summary>
            Gets or sets the service category description.
            </summary>
            <value>The service category description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ServiceSubCategory">
            <summary>
            Gets or sets the service sub category.
            </summary>
            <value>The service sub category.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ServiceSubCategoryDescription">
            <summary>
            Gets or sets the service sub category description.
            </summary>
            <value>The service sub category description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ServiceProgram">
            <summary>
            Gets or sets the service program.
            </summary>
            <value>The service program.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ServiceProgramDescription">
            <summary>
            Gets or sets the service program description.
            </summary>
            <value>The service program description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.DetailedService">
            <summary>
            Gets or sets the detailed service.
            </summary>
            <value>The detailed service.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.DetailedServiceDescription">
            <summary>
            Gets or sets the detailed service description.
            </summary>
            <value>The detailed service description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Industry">
            <summary>
            Gets or sets the industry.
            </summary>
            <value>The industry.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.IndustryDescription">
            <summary>
            Gets or sets the industry description.
            </summary>
            <value>The industry description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.IndustryCategory">
            <summary>
            Gets or sets the industry category.
            </summary>
            <value>The industry category.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.IndustryCategoryDescription">
            <summary>
            Gets or sets the industry category description.
            </summary>
            <value>The industry category description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.IndustrySubCategory">
            <summary>
            Gets or sets the industry sub category.
            </summary>
            <value>The industry sub category.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.IndustrySubCategoryDescription">
            <summary>
            Gets or sets the industry sub category description.
            </summary>
            <value>The industry sub category description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ProductGroup">
            <summary>
            Gets or sets the product group.
            </summary>
            <value>The product group.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ProductGroupDescription">
            <summary>
            Gets or sets the product group description.
            </summary>
            <value>The product group description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ProductType">
            <summary>
            Gets or sets the type of the product.
            </summary>
            <value>The type of the product.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.ProductTypeDescription">
            <summary>
            Gets or sets the product type description.
            </summary>
            <value>The product type description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Price">
            <summary>
            Gets or sets the price.
            </summary>
            <value>The price.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
            <value>
            The currency.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Product">
            <summary>
                Product domain entity
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Product.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Product.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Product.SerializeParent(System.Xml.XmlWriter,System.Object,UL.Aria.Service.Domain.Entity.IAssetFieldMetadata,System.Boolean)">
            <summary>
                Serializes the parent.
            </summary>
            <param name="xmlWriter">The XML writer.</param>
            <param name="parent">The parent.</param>
            <param name="assetFieldMetadata">The asset field metadata.</param>
            <param name="isContainerOnly"></param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Product.WriteCharacteristicSpMetadataElement(System.Xml.XmlWriter,UL.Aria.Service.Domain.Entity.ProductCharacteristic,UL.Aria.Service.Domain.Entity.IAssetFieldMetadata,UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto)">
            <summary>
                Writes the characteristic sp metadata element.
            </summary>
            <param name="xmlWriter">The XML writer.</param>
            <param name="characteristic">The characteristic.</param>
            <param name="assetFieldMetadata">The asset field metadata.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Product.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Product.ProductFamilyId">
            <summary>
                Gets or sets the product family id.
            </summary>
            <value>
                The product family id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Product.Characteristics">
            <summary>
                Gets or sets the characteristics.
            </summary>
            <value>
                The characteristics.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Product.IsDeleted">
            <summary>
                Gets or sets a value indicating whether this instance is deleted.
            </summary>
            <value>
                <c>true</c> if this instance is deleted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Product.Status">
            <summary>
                Gets the status.
            </summary>
            <value>
                The status.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Product.CanDelete">
            <summary>
                Gets or sets a value indicating whether this instance can delete product.
            </summary>
            <value>
                <c>true</c> if this instance can delete product; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Product.SubmittedDateTime">
            <summary>
                Gets or sets the date the product was submitted - if it has been.
            </summary>
            <value>
                The submitted date.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyAttributeAssociation">
            <summary>
            Manages associations between attributes and product families.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociation">
            <summary>
            Base type for associations beweeen characteristics and product families.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociation"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociation.ProductFamilyId">
            <summary>
            Gets or sets the product family id.
            </summary>
            <value>
            The product family id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociation.CharacteristicId">
            <summary>
            Gets or sets the feature id.
            </summary>
            <value>
            The feature id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociation.IsDisabled">
            <summary>
            Gets or sets the is disabled.
            </summary>
            <value>
            The is disabled.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociation.OptionIds">
            <summary>
            Gets or sets the options.
            </summary>
            <value>
            The options.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAssociation">
            <summary>
            Product Family Feature Associatio domain entity
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAssociation.Dependent">
            <summary>
            Gets or sets the dependent.
            </summary>
            <value>
            The dependent.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAssociation.ParentFamilyAllowedFeatureId">
            <summary>
            Gets or sets the parent family allowed feature id.
            </summary>
            <value>
            The parent family allowed feature id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicType">
            <summary>
            Defines the available type of family characteristics that can be applied to a product.
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicType.Attribute">
            <summary>
            An attribute
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicType.Feature">
            <summary>
            A feature
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductUploadMessage">
            <summary>
                Messages from importing <see cref="T:UL.Aria.Service.Domain.Entity.Product"/>s.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUploadMessage.ProductUploadResultId">
            <summary>
            Gets or sets the product upload result id.
            </summary>
            <value>The product upload result id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUploadMessage.Title">
            <summary>
                Gets or sets the title.
            </summary>
            <value>
                The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUploadMessage.Detail">
            <summary>
                Gets or sets the details.
            </summary>
            <value>
                The details.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUploadMessage.MessageType">
            <summary>
                Gets or sets the type of the message.
            </summary>
            <value>The type of the message.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUploadMessage.ProductFamilyCharacteristicId">
            <summary>
                Gets or sets the characteristic id.
            </summary>
            <value>
                The characteristic id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductUpload">
            <summary>
                Class ProductUpload
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductUpload.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductUpload.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUpload.CompanyId">
            <summary>
                Gets or sets the company id.
            </summary>
            <value>The company id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUpload.Status">
            <summary>
                Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUpload.FileContent">
            <summary>
                Gets or sets the excel file.
            </summary>
            <value>The excel file.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUpload.FileName">
            <summary>
                Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUpload.CreatedByUserLoginId">
            <summary>
                Gets or sets the created by user login id.
            </summary>
            <value>The created by user login id.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Project">
            <summary>
                Class Project
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Project.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IsEmailRequested">
            <summary>
            Gets or sets whether the user requested to send email to Project Handler
            </summary>        
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IsOrderOwnerEmailRequested">
            <summary>
            Gets or sets whether the user requested to send email to Order Owner
            </summary>        
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.StartDate">
            <summary>
                Gets or sets the start date.
            </summary>
            <value>
                The start date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.EstimatedTATDate">
            <summary>
                Gets or sets the estimated TAT date.
            </summary>
            <value>
                The estimated TAT date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.EndDate">
            <summary>
                Gets or sets the end date.
            </summary>
            <value>
                The end date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ProjectHandler">
            <summary>
                Gets or sets the project handler.
            </summary>
            <value>
                The project handler.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.EstimatedLabEffort">
            <summary>
                Gets or sets the estimated lab hours.
            </summary>
            <value>
                The estimated lab hours.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.EstimateEngineeringEffort">
            <summary>
                Gets or sets the estimate engineering effort.
            </summary>
            <value>
                The estimate engineering effort.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.Scope">
            <summary>
                Gets or sets the scope.
            </summary>
            <value>
                The scope.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.Assumptions">
            <summary>
                Gets or sets the assumptions.
            </summary>
            <value>
                The assumptions.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.EngineeringOfficeLimitations">
            <summary>
                Gets or sets the engineering office limitations.
            </summary>
            <value>
                The engineering office limitations.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.LaboratoryLimitations">
            <summary>
                Gets or sets the laboratry limitations.
            </summary>
            <value>
                The laboratry limitations.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.Complexity">
            <summary>
                Gets or sets the complexity.
            </summary>
            <value>
                The complexity.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.AdditionalCriteria">
            <summary>
                Gets or sets the additional criteria.
            </summary>
            <value>
                The additional criteria.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.Industry">
            <summary>
                Gets or sets the industry.
            </summary>
            <value>
                The industry.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IndustryCode">
            <summary>
            Gets or sets the industry code for manually created projects.
            </summary>
            <value>
            The industry code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ServiceCode">
            <summary>
            Gets or sets the service code for manual projects.
            </summary>
            <value>
            The service code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IndustryCategory">
            <summary>
                Gets or sets the industry category.
            </summary>
            <value>
                The industry category.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IndustrySubcategory">
            <summary>
                Gets or sets the industry subcategory.
            </summary>
            <value>
                The industry subcategory.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.Location">
            <summary>
                Gets or sets the location.
            </summary>
            <value>
                The location.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ProductGroup">
            <summary>
                Gets or sets the product group.
            </summary>
            <value>
                The product group.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.StatusDescription">
            <summary>
                Gets or sets the status description.
            </summary>
            <value>The status description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ProjectStatus">
            <summary>
                Gets or sets the project status.
            </summary>
            <value>The project status.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ProjectStatusLabel">
            <summary>
                Gets or sets the project status.
            </summary>
            <value>The project status.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IsOnTrack">
            <summary>
            Gets or sets a value indicating whether this instance is on track.
            </summary>
            <value>
            <c>true</c> if this instance is on track; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ProjectTemplateId">
            <summary>
                Gets or sets the project template id used for tasks
            </summary>
            <value>
                The project template id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.AdditionalProjectTemplateId">
            <summary>
            Gets or sets the additional project template identifier, used only when adding new templates to existing projects.
            Will not be 
            </summary>
            <value>
            The additional project template identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IncomingOrderId">
            <summary>
                Gets or sets the order id.
            </summary>
            <value>
                The order id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.CompletionDate">
            <summary>
                Gets or sets the completion date.
            </summary>
            <value>The completion date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.DaysInCurrentPhase">
            <summary>
                Gets or sets the days in current phase.
            </summary>
            <value>The days in current phase.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.EstimatedReviewerEffort">
            <summary>
                Gets or sets the estimated reviewer effort.
            </summary>
            <value>The estimated reviewer effort.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.NumberOfSamples">
            <summary>
                Gets or sets the number of samples.
            </summary>
            <value>The number of samples.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.SampleReferenceNumbers">
            <summary>
                Gets or sets the sample reference numbers.
            </summary>
            <value>The sample reference numbers.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.CCN">
            <summary>
                Gets or sets the CCN.
            </summary>
            <value>The CCN.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.FileNo">
            <summary>
                Gets or sets the file number.
            </summary>
            <value>The file number.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.StatusNotes">
            <summary>
                Gets or sets the status notes.
            </summary>
            <value>The status notes.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.InventoryItemCatalogNumbers">
            <summary>
                Gets or sets the inventory item catalog numbers.
            </summary>
            <value>The inventory item catalog numbers.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.InventoryItemNumbersDescriptions">
            <summary>
                Gets or sets the inventory item numbers descriptions.
            </summary>
            <value>The inventory item numbers descriptions.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.Expedited">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> is expedited.
            </summary>
            <value><c>true</c> if expedited; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.Price">
            <summary>
                Gets or sets the price.
            </summary>
            <value>The price.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.Standards">
            <summary>
                Gets or sets the standards.
            </summary>
            <value>The standards.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ProjectType">
            <summary>
                Gets or sets the type of the project.
            </summary>
            <value>The type of the project.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ServiceDescription">
            <summary>
                Gets or sets the service description.
            </summary>
            <value>The service description.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ProjectTemplateName">
            <summary>
                Gets or sets the name of the project template.
            </summary>
            <value>The name of the project template.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.OrderStatus">
            <summary>
            Gets or sets the order status.
            </summary>
            <value>
            The order status.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.TaskMinimumDueDate">
            <summary>
            Gets or sets the task minimum due date.
            </summary>
            <value>The task minimum due date.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.MinimumDueDateTaskId">
            <summary>
            Gets or sets the minimum due date task identifier.
            </summary>
            <value>The minimum due date task identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IncomingOrderServiceLineIndustryCode">
            <summary>
            Gets the incoming order service line industry code.
            </summary>
            <value>
            The incoming order service line industry code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IncomingOrderServiceLineServiceCode">
            <summary>
            Gets the incoming order service line service code.
            </summary>
            <value>
            The incoming order service line service code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IncomingOrderServiceLineLocationName">
            <summary>
            Gets the name of the incoming order service line location.
            </summary>
            <value>
            The name of the incoming order service line location.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IsClosed">
            <summary>
            Gets a value indicating whether this instance is closed.
            </summary>
            <value>
              <c>true</c> if this instance is closed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IncomingOrderServiceLineLocationCode">
            <summary>
            Gets the incoming order service line location code.
            </summary>
            <value>
            The incoming order service line location code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ServiceRequestNumber">
            <summary>
            Gets or sets the service request number.
            </summary>
            <value>
            The service request number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.Tasks">
            <summary>
            Gets or sets the tasks.
            </summary>
            <value>
            The tasks.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.OrderOwner">
            <summary>
                Gets or sets the order owner.
            </summary>
            <value>
                The order owner.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.OverrideAutoComplete">
            <summary>
            Gets or sets a value indicating whether [override automatic complete].
            </summary>
            <value>
            <c>true</c> if [override automatic complete]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.HasAutoComplete">
            <summary>
            Gets or sets a value indicating whether this instance has automatic complete.
            </summary>
            <value>
            <c>true</c> if this instance has automatic complete; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.PartySiteNumber">
            <summary>
            Gets the party site number.
            </summary>
            <value>
            The party site number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.ShipToPartySiteNumber">
            <summary>
            Gets the ship to party site number.
            </summary>
            <value>
            The ship to party site number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.BillToPartySiteNumber">
            <summary>
            Gets the sold to party site number.
            </summary>
            <value>
            The sold to party site number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Project.IncomingOrderContactPartySiteNumber">
            <summary>
            Gets the incoming order contact party site number.
            </summary>
            <value>
            The incoming order contact party site number.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProjectCreationRequest">
            <summary>
                A BO for describing requests to create projects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProjectCreationRequest"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.Id">
            <summary>
                Gets or sets the id.
            </summary>
            <value>
                The id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.IncomingOrderId">
            <summary>
                Gets or sets the order id.
            </summary>
            <value>
                The order id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.OrderNumber">
            <summary>
                Gets or sets the order number
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.ServiceLineItems">
            <summary>
                Gets or sets the service line items.
            </summary>
            <value>
                The service line items.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.StartDate">
            <summary>
                Gets or sets the start date.
            </summary>
            <value>
                The start date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.EndDate">
            <summary>
                Gets or sets the end date.
            </summary>
            <value>
                The end date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.ProjectHandler">
            <summary>
                Gets or sets the project handler.
            </summary>
            <value>
                The project handler.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.IsReadyToCreate">
            <summary>
                Gets or sets a value indicating whether this instance is ready to create.
            </summary>
            <value>
                <c>true</c> if this instance is ready to create; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.ProjectTemplateId">
            <summary>
                Gets or sets the project template id.
            </summary>
            <value>The project template id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.CompanyId">
            <summary>
                Gets or sets the company id.
            </summary>
            <value>The company id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.NumberOfSamples">
            <summary>
            Gets or sets the number of samples.
            </summary>
            <value>The number of samples.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.SampleReferenceNumbers">
            <summary>
            Gets or sets the sample reference numbers.
            </summary>
            <value>The sample reference numbers.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.CCN">
            <summary>
            Gets or sets the CCN.
            </summary>
            <value>The CCN.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.FileNo">
            <summary>
            Gets or sets the file no.
            </summary>
            <value>The file no.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.StatusNotes">
            <summary>
            Gets or sets the status notes.
            </summary>
            <value>The status notes.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.IsEmailRequested">
            <summary>
            Gets or sets whether the user requested to send email to Project Handler
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.AdditionalCriteria">
            <summary>
            Gets or sets the additional criteria.
            </summary>
            <value>
            The additional criteria.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.IndustryCode">
            <summary>
            Gets or sets the industry code.
            </summary>
            <value>
            The industry code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.ServiceCode">
            <summary>
            Gets or sets the service code.
            </summary>
            <value>
            The service code.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.QuoteNo">
            <summary>
            Gets or sets the quote no.
            </summary>
            <value>
            The quote no.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.ServiceRequestNumber">
            <summary>
            Gets or sets the service request number.
            </summary>
            <value>
            The service request number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.OrderOwner">
            <summary>
                Gets or sets the order owner.
            </summary>
            <value>
                The order owner.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.IsOrderOwnerEmailRequested">
            <summary>
            Gets or sets a value indicating whether this instance is order owner email requested.
            </summary>
            <value>
            <c>true</c> if this instance is order owner email requested; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectCreationRequest.OverrideAutoComplete">
            <summary>
            Gets or sets a value indicating whether [override automatic complete].
            </summary>
            <value>
            <c>true</c> if [override automatic complete]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProjectTemplate">
            <summary>
            Defines a project template.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProjectTemplate.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProjectTemplate"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProjectTemplate.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProjectTemplate"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.CorrelationId">
            <summary>
            Gets or sets the Correlation Id which indicates a connection to a Project Template that has been copied to different states, Draft/Publish/Deleted.
            </summary>
            <value>
            The CorrelationId.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.IsDraft">
            <summary>
            Gets or sets the Draft status.
            </summary>
            <value>
            Is this in Draft status, else in Published status.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.TaskTemplates">
            <summary>
                Gets or sets the tasks.
            </summary>
            <value>The tasks.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.BusinessUnits">
            <summary>
            Gets or sets the business unit.
            </summary>
            <value>
            The business unit.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.EntityType">
            <summary>
            Gets or sets the entity type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.Metadata">
            <summary>
            Gets or sets the metadata dictionary.
            </summary>
            <value>
            The metadata.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.UL#Enterprise#Foundation#Data#ISearchResult#EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.UpdatedByLoginId">
            <summary>
            Gets or sets the updated by login identifier.
            </summary>
            <value>
            The updated by login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.CreatedByLoginId">
            <summary>
            Gets or sets the created by login identifier.
            </summary>
            <value>
            The created by login identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.BusinessUnitCodes">
            <summary>
            Gets or sets the business unit codes.
            </summary>
            <value>
            The business unit codes.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProjectTemplate.AutoCompleteProject">
            <summary>
            Gets or sets a value indicating whether [automatic complete project].
            </summary>
            <value>
            <c>true</c> if [automatic complete project]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Task">
            <summary>
            Class TaskDto
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Task.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Task.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Task"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Task.SerializeParent(System.Xml.XmlWriter,System.Object,UL.Aria.Service.Domain.Entity.IAssetFieldMetadata,System.Boolean)">
            <summary>
                Serializes the parent.
            </summary>
            <param name="xmlWriter">The XML writer.</param>
            <param name="parent">The parent.</param>
            <param name="assetFieldMetadata">The asset field metadata.</param>
            <param name="isContainerOnly"></param>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.PrimarySearchEntityId">
            <summary>
            Gets or sets the primary search entity identifier.
            </summary>
            <value>The primary search entity identifier.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.PrimarySearchEntityType">
            <summary>
            Gets or sets the type of the primary search entity.
            </summary>
            <value>The type of the primary search entity.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.ParentId">
            <summary>
                The parent id
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.Project">
            <summary>
            Gets or sets the project.
            </summary>
            <value>
            The project.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.PredecessorRefs">
            <summary>
            Gets or sets the predecessor refs.
            </summary>
            <value>
            The predecessor refs.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.SuccessorRefs">
            <summary>
            Gets or sets the successor refs.
            </summary>
            <value>
            The successor refs.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.Notifications">
            <summary>
            Gets or sets the notifications.
            </summary>
            <value>
            The notifications.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.Depth">
            <summary>
            Gets or sets the depth.
            </summary>
            <value>
            The depth.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.HasChildren">
            <summary>
            Gets a value indicating whether this instance has children.
            </summary>
            <value>
            <c>true</c> if this instance has children; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.TaskTypeBehaviors">
            <summary>
            Gets or sets the task type behaviors.
            </summary>
            <value>
            The task type behaviors.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.StatusSearchValue">
            <summary>
            Gets the status search value.
            </summary>
            <value>The status search value.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.ProgressSearchValue">
            <summary>
            Gets or sets the progress search value.
            </summary>
            <value>The progress search value.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.ChildTaskNumbers">
            <summary>
            Gets or sets the child task numbers.
            </summary>
            <value>The child task numbers.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.SubTasks">
            <summary>
                Gets or sets the sub tasks.
            </summary>
            <value>The sub tasks.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.Comments">
            <summary>
                Gets or sets the comments.
            </summary>
            <value>The comments.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.StatusHistories">
            <summary>
            Gets or sets the phase histories.
            </summary>
            <value>
            The phase histories.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.CompletionHistories">
            <summary>
            Gets or sets the completion histories.
            </summary>
            <value>
            The completion histories.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.StatusLabel">
            <summary>
            Gets the status label.
            </summary>
            <value>
            The status label.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.ProgressLabel">
            <summary>
            Gets the progress label.
            </summary>
            <value>
            The progress label.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.HasTaskOwner">
            <summary>
            Gets a value indicating whether this instance has task owner.
            </summary>
            <value>
            <c>true</c> if this instance has task owner; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.SecurityGroup">
            <summary>
            Gets the security group.
            </summary>
            <value>
            The security group.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.ReminderDate">
            <summary>
            Gets or sets the reminder date.
            </summary>
            <value>
            The reminder date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.IsDeleted">
            <summary>
            Gets or sets a value indicating whether [is deleted].
            </summary>
            <value>
              <c>true</c> if [is deleted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.CompletedDate">
            <summary>
            Gets the completion date.
            </summary>
            <value>
            The completion date.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.HasComments">
            <summary>
            Gets a value indicating whether this instance has comments.
            </summary>
            <value><c>true</c> if this instance has comments; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.LastComment">
            <summary>
            Gets or sets the last comment.
            </summary>
            <value>
            The last comment.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.LastDocumentAdded">
            <summary>
            Gets or sets the Last Document Added.
            </summary>
            <value>The LastDocumentAdded.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.LastDocumentRemoved">
            <summary>
            Gets or sets the Last Document Removed.
            </summary>
            <value>The LastDocumentRemoved.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.TaskTypeId">
            <summary>
            Gets or sets the type of the task.
            </summary>
            <value>
            The type of the task.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.TaskTypeName">
            <summary>
            Gets or sets the name of the task type.
            </summary>
            <value>
            The name of the task type.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.OrderNumber">
            <summary>
            Gets or sets the order number.
            </summary>
            <value>
            The order number.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.CompanyName">
            <summary>
            Gets or sets the company.
            </summary>
            <value>
            The company.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.TaskTemplateId">
            <summary>
            Gets or sets the task template identifier.
            </summary>
            <value>
            The task template identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.RecordVersion">
            <summary>
            Gets or sets the Record Version.
            </summary>
            <value>
            Timestamp.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.Documents">
            <summary>
            Gets or sets the documents.
            </summary>
            <value>
            The documents.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.PreventDeletion">
            <summary>
            Gets or sets a value indicating whether [prevent deletion].
            </summary>
            <value><c>true</c> if [prevent deletion]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.ProjectTaskShouldTriggerBillingCount">
            <summary>
            Gets or sets the project task should trigger billing count.
            </summary>
            <value>The project task should trigger billing count.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.StatusList">
            <summary>
            Gets or sets the status list.
            </summary>
            <value>
            The status list.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.IsReActivateRequest">
            <summary>
            Gets or sets a value indicating whether this instance is re activate request.
            </summary>
            <value>
            	<c>true</c> if this instance is re activate request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.IsClosed">
            <summary>
            Gets a value indicating whether this instance is closed.
            </summary>
            <value>
              <c>true</c> if this instance is closed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.IsFreeForm">
            <summary>
            Gets a value indicating whether this instance is free form.
            </summary>
            <value>
            <c>true</c> if this instance is free form; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.IsChildTaskNumbersRestrictedByRelationship">
            <summary>
            Gets a value indicating whether this instance is parent that has child project handler parent task number field restriced.
            </summary>
            <value>
            <c>true</c> if this instance is parent that has child project handler parent task number field restriced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Task.IsParentTaskNumberRestrictedByRelationship">
            <summary>
            Gets a value indicating whether this instance is child that has parent project hanlder child task number field restriced.
            </summary>
            <value>
            <c>true</c> if this instance is child that has parent project hanlder child task number field restriced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TaskPredecessor">
            <summary>
                Class TaskPredecessorDto
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPredecessor.TaskId">
            <summary>
                Gets or sets the task id.
            </summary>
            <value>The task id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPredecessor.Title">
            <summary>
                Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPredecessor.TaskNumber">
            <summary>
                Gets or sets the task number.
            </summary>
            <value>The task number.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPredecessor.SuccessorId">
            <summary>
            Gets or sets the successor identifier.
            </summary>
            <value>
            The successor identifier.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TaskPredecessor.Status">
            <summary>
                Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.UploadAction">
            <summary>
            Actions for uploads
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.UploadAction.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.UploadAction.Add">
            <summary>
            The add
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.UploadAction.Update">
            <summary>
            The update
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.UploadAction.Remove">
            <summary>
            The remove
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.ScratchFileUpload">
            <summary>
            Class for metadata about a scratchfile document that is ready to be permanently uploaded into the system.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileUpload.ScratchFileInfo">
            <summary>
            Gets or sets the scratch file info.
            </summary>
            <value>
            The scratch file info.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileUpload.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.Sort">
            <summary>
                Class Sort
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.Sort.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Search.Sort"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.Sort.FieldName">
            <summary>
                Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.Sort.Order">
            <summary>
                Gets or sets the direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.BusinessClaim">
            <summary>
            Specific Claim details for an entity.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.BusinessClaim.EntityId">
            <summary>
            Gets or sets the entity id. (e.g. a Product id)
            </summary>
            <value>
            The entity id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.BusinessClaim.EntityClaim">
            <summary>
            Gets or sets the entity claim. (e.g. Read)
            </summary>
            <value>
            The entity claim.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.BusinessClaim.Value">
            <summary>
            Gets or sets the claim. (e.g. Allow)
            </summary>
            <value>
            The claim.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity">
            <summary>
                Class ProductFamilyCharacteristicDomainEntity
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.IsValueRequired">
            <summary>
                The value required
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.ScopeId">
            <summary>
                Gets or sets the scope id.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.CharacteristicTypeId">
            <summary>
                Gets or sets the characteristic type id.
            </summary>
            <value>
                The characteristic type id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.IsRequired">
            <summary>
                Gets or sets a value indicating whether this instance is required.
            </summary>
            <value>
                <c>true</c> if this instance is required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.Options">
            <summary>
                Gets or sets the options.
            </summary>
            <value>
                The options.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.SortOrder">
            <summary>
                Gets or sets the sort order.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.IsMultivalueAllowed">
            <summary>
                Gets or sets a value indicating whether this instance is multivalue.
            </summary>
            <value>
                <c>true</c> if this instance is multivalue; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.IsRangeAllowed">
            <summary>
                Gets or sets a value indicating whether this instance is range.
            </summary>
            <value>
                <c>true</c> if this instance is range; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity.UnitOfMeasureId">
            <summary>
                Gets or sets the unit of measure id.
            </summary>
            <value>
                The unit of measure id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.Company">
            <summary>
                Company Business Object
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Company.#ctor(System.Nullable{System.Guid})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Company"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.Company.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.Company"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Company.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Company.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.Company.ExternalIds">
            <summary>
                Gets or sets the external ids.
            </summary>
            <value>The external ids.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.DocumentType">
            <summary>
            
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.DocumentType.Id">
            <summary>
            Gets or sets the document type id.
            </summary>
            <value>
            The document id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.DocumentType.Name">
            <summary>
            Gets or sets the name of the document type.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamily">
            <summary>
                Product Family domain entity.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamily.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamily.CategoryId">
            <summary>
                Gets or sets the category id.
            </summary>
            <value>
                The category id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamily.AllowChanges">
            <summary>
                Gets or sets a value indicating whether [allow changes].
            </summary>
            <value>
                <c>true</c> if [allow changes]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamily.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamily.Status">
            <summary>
                Gets the product family status.
            </summary>
            <value>
                The product family status.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamily.IsDisabled">
            <summary>
                Gets or sets a value indicating whether this instance is disabled.
            </summary>
            <value>
                <c>true</c> if this instance is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamily.BusinessUnitId">
            <summary>
            Gets or sets the business unit id.
            </summary>
            <value>
            The business unit id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyAttribute">
            <summary>
            Product family domain entity.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyAttribute.DataTypeId">
            <summary>
            Gets or sets the data type id.
            </summary>
            <value>
            The data type id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProfileBo">
            <summary>
                Profile business class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileBo.DisplayName">
            <summary>
                Gets or sets the user's company display name.
            </summary>
            <value>
                The company display name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileBo.Title">
            <summary>
                Gets or sets the title.
            </summary>
            <value>
                The title.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileBo.LoginId">
            <summary>
                Gets or sets the login id.
            </summary>
            <value>
                The login id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileBo.CompanyId">
            <summary>
                Gets or sets the company id.
            </summary>
            <value>
                The company id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileBo.Claims">
            <summary>
                Gets or sets the claims.
            </summary>
            <value>
                The claims.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileBo.CompanyExternalId">
            <summary>
                Gets or sets the company external id.
            </summary>
            <value>
                The company external id.
            </value>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileBo.AboutMe">
            <summary>
                Gets or sets the about me details for the user.
            </summary>
            <value>
                The user's about me details.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileBo.CompanyName">
            <summary>
            Gets or sets the name of the company.
            </summary>
            <value>
            The name of the company.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProfileEditBasicBo">
            <summary>
            User Profile: Edit Profile, Basic Information
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileEditBasicBo.DisplayName">
            <summary>
            Gets or sets the user's display name.
            </summary>
            <value>
            The user display name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileEditBasicBo.JobTitle">
            <summary>
            Gets or sets the jobtitle.
            </summary>
            <value>
            The jobtitle.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileEditBasicBo.AboutMe">
            <summary>
            Gets or sets the about me.
            </summary>
            <value>
            The about me.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileEditBasicBo.LoginId">
            <summary>
            Gets or sets the login id.
            </summary>
            <value>
            The login id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileEditBasicBo.ProfileId">
            <summary>
            Gets or sets the profile id.
            </summary>
            <value>
            The profile id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileEditBasicBo.ModifyingUser">
            <summary>
            Gets or sets the modifying user.
            </summary>
            <value>
            The modifying user.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileEditBasicBo.CompanyExternalId">
            <summary>
            Gets or sets the company external id.
            </summary>
            <value>
            The company external id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProfileImageBo">
            <summary>
            Profile mage class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileImageBo.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>
            The image.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileImageBo.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProfileSearchSpecification">
            <summary>
            ProfileSearchSpecification DTO
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileSearchSpecification.StartIndex">
            <summary>
            Gets or sets the start index.
            </summary>
            <value>
            The start index.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileSearchSpecification.EndIndex">
            <summary>
            Gets or sets the end index.
            </summary>
            <value>
            The end index.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileSearchSpecification.Keyword">
            <summary>
            Gets or sets the keyword.
            </summary>
            <value>
            The keyword.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileSearchSpecification.SortBy">
            <summary>
            Gets or sets the sort by.
            </summary>
            <value>
            The sort by.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileSearchSpecification.SortDirection">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>
            The sort direction.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileSearchSpecification.ContainerId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProfileSearchSpecification.CompanyId">
            <summary>
            Gets or sets the company id.
            </summary>
            <value>
            The company id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.UserBusinessClaim">
            <summary>
            A Business claim for a user.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserBusinessClaim.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserBusinessClaim.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserBusinessClaim.LoginId">
            <summary>
            Gets or sets the login id.
            </summary>
            <value>
            The login id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserBusinessClaim.Claim">
            <summary>
            Gets or sets the claim id.
            </summary>
            <value>
            The claim id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.UserBusinessClaimHistory">
            <summary>
            A history for a business claim for a user.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserBusinessClaimHistory.Claim">
            <summary>
            Gets or sets the claim.
            </summary>
            <value>
            The claim id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserBusinessClaimHistory.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserBusinessClaimHistory.ChangedBy">
            <summary>
            Gets or sets the changed by.
            </summary>
            <value>
            The changed by.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.UserBusinessClaimHistory.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>
            The change date.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.ProductUploadResultSearchResult">
            <summary>
            Class ProductUploadResultSearchResult
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.ProductUploadResultSearchResult.ProductUploadResult">
            <summary>
            Gets or sets the product upload result.
            </summary>
            <value>The product upload result.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.ProductUploadResultSearchResultSet">
            <summary>
                Class ProductUploadResultSearchResultSet
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.ProductUploadSearchResult">
            <summary>
                <see cref="T:UL.Aria.Service.Domain.Search.SearchResult"/> implementation specifically for <see cref="P:UL.Aria.Service.Domain.Search.ProductUploadSearchResult.ProductUpload"/> objects.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.ProductUploadSearchResult.ProductUpload">
            <summary>
                Gets or sets the <see cref="P:UL.Aria.Service.Domain.Search.ProductUploadSearchResult.ProductUpload"/>.
            </summary>
            <value>
                The product upload.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.ProductUploadSearchResultSet">
            <summary>
                <see cref="T:UL.Aria.Service.Domain.Search.SearchResult"/> implementation that is customised to support <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/> objects.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.IncomingOrderSearchResult">
            <summary>
            <see cref="T:UL.Aria.Service.Domain.Search.SearchResult"/> implementation specifically for <see cref="P:UL.Aria.Service.Domain.Search.IncomingOrderSearchResult.IncomingOrder"/> objects.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.IncomingOrderSearchResult.IncomingOrder">
            <summary>
            Gets or sets the <see cref="P:UL.Aria.Service.Domain.Search.IncomingOrderSearchResult.IncomingOrder"/>.
            </summary>
            <value>
            The incoming order.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.IncomingOrderSearchResultSet">
            <summary>
            <see cref="T:UL.Aria.Service.Domain.Search.SearchResult"/> implementation that is customised to support <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> objects.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.RefinementItem">
            <summary>
                Class RefinementItem
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.RefinementItem.Count">
            <summary>
                Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.RefinementItem.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.RefinementItem.Token">
            <summary>
                Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.RefinementItem.Value">
            <summary>
                Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.SearchCriteria">
            <summary>
                Container search specification class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Search.SearchCriteria.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Search.SearchCriteria"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.StartIndex">
            <summary>
                Gets or sets the start index.
            </summary>
            <value>
                The start index.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.EndIndex">
            <summary>
                Gets or sets the end index.
            </summary>
            <value>
                The end index.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.Keyword">
            <summary>
                Gets or sets the keyword.
            </summary>
            <value>
                The keyword.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.SortBy">
            <summary>
                Gets or sets the sort by.
            </summary>
            <value>
                The sort by.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.SortDirection">
            <summary>
                Gets or sets the sort direction.
            </summary>
            <value>
                The sort direction.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.UserId">
            <summary>
                Gets or sets the user id.
            </summary>
            <value>
                The user id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.CompanyId">
            <summary>
                Gets or sets the company id.
            </summary>
            <value>
                The company id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.EntityType">
            <summary>
                Gets or sets the asset type.
            </summary>
            <value>
                The asset type.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.Refiners">
            <summary>
                Gets or sets the refiners.
            </summary>
            <value>The refiners.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.Filters">
            <summary>
                Gets or sets the filters.
            </summary>
            <value>
                The filters.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.Sorts">
            <summary>
                Gets or sets the sorts.
            </summary>
            <value>The sorts.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.IncludeDeletedRecords">
            <summary>
            Gets or sets a value indicating whether [include deleted records].
            </summary>
            <value>
            <c>true</c> if [include deleted records]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.FilterContainers">
            <summary>
            Gets or sets a value indicating whether [filter containers].
            </summary>
            <value>
              <c>true</c> if [filter containers]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.SearchCoordinators">
            <summary>
            Gets or sets the search coordinators that have been applied to this search criteria.
            </summary>
            <value>
            The search cooridators.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.AdditionalFilterString">
            <summary>
            Gets or sets the additional filter string.
            </summary>
            <value>
            The additional filter string.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchCriteria.UL#Enterprise#Foundation#Data#ISearchCriteria#EntityTypeLabel">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.SearchResultSet">
            <summary>
            A search result set
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Domain.Search.SearchSummary">
            <summary>
                Provides summary counts and timings for a search.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchSummary.StartIndex">
            <summary>
                Gets or sets the index of the first result
            </summary>
            <value>
                The start index.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchSummary.EndIndex">
            <summary>
                Gets or sets the index of the last result returned
            </summary>
            <value>
                The end index.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchSummary.TotalResults">
            <summary>
                Gets or sets the total number of results
            </summary>
            <value>
                The total results.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Search.SearchSummary.LastCommand">
            <summary>
                Gets or sets the last command.
            </summary>
            <value>The last command.</value>
        </member>
        <member name="T:UL.Aria.Service.Domain.Value.ContainerRole">
            <summary>
            Container role value class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Value.ContainerRole.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Implementation.AriaService">
            <summary>
                The aria service implementation provides a mechanism for managing entity persistence and search.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.#ctor(UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Provider.IAssetProvider,UL.Aria.Service.Provider.ISearchProvider,UL.Aria.Service.Manager.IContainerManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.AriaService"/> class.
            </summary>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="assetprovider">The contentprovider.</param>
            <param name="searchProvider">The search provider.</param>
            <param name="containerManager">The container manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.FetchAllAssets(System.String)">
            <summary>
                Fetches all assets in a container.
            </summary>
            <param name="id">The id.</param>
            <returns>SearchResultSetDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.FetchAllDocuments(System.String)">
            <summary>
            Fetches the type of all assets of entity.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
                Search based on the provided criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>The search result set.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.PublishCreateMetadata(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
                Publishes the createmetadata.
            </summary>
            <param name="entityType">The type of the entity the metadata is for.</param>
            <param name="entityId">The entity id.</param>
            <param name="assetType">The type of the entity asset the metadata is for.</param>
            <param name="metadataStream">The metadata stream.</param>
            <returns>
                The saved content id.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.PublishCreateProduct(System.String,System.String,UL.Aria.Service.Contracts.Dto.ProductDto)">
            <summary>
                Publishes the create product.
            </summary>
            <param name="newContainerId">The new container id.</param>
            <param name="newAssetId">The new asset id.</param>
            <param name="product">The product.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.PublishUpdateMetadata(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
                Publishes the updatemetadata.
            </summary>
            <param name="entityType">The type of the entity the metadata is for.</param>
            <param name="entityId">The entity id.</param>
            <param name="assetType">The type of the entity asset the metadata is for.</param>
            <param name="assetId">The asset id.</param>
            <param name="metadataStream">The metadata stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.PublishFetchMetadata(System.String,System.String,System.String,System.String)">
            <summary>
                Publishes the fetchmetadata.
            </summary>
            <param name="entityType">The type of the entity the metadata is for.</param>
            <param name="entityId">The entity id.</param>
            <param name="assetType">The type of the entity asset the metadata is for.</param>
            <param name="assetId">The asset id.</param>
            <returns>
                The metadata stream.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.PublishDeleteContent(System.String,System.String,System.String,System.String)">
            <summary>
                Deletes the content.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity id.</param>
            <param name="assetType">Type of the asset.</param>
            <param name="assetId">The asset id.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.GetAvailableUserClaims(System.String)">
            <summary>
                Gets the available, assignable claims for this container.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.FetchAllContainers(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
                Fetches all by company id.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.CreateAssetLink(UL.Aria.Service.Contracts.Dto.AssetLinkDto)">
            <summary>
            Creates the asset link.
            </summary>
            <param name="assetLink">The asset link.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.DeleteAssetLink(UL.Aria.Service.Contracts.Dto.AssetLinkDto)">
            <summary>
            Deletes the asset link.
            </summary>
            <param name="assetLink">The asset link.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.FetchAssetLinks(System.String,System.String,System.String,System.String)">
            <summary>
                Fetches the asset links.
            </summary>
            <param name="parentAssetType">Type of the parent asset.</param>
            <param name="parentAssetId">The parent asset id.</param>
            <param name="assetType">Type of the asset.</param>
            <param name="assetId">The asset id.</param>
            <returns>IList{System.String}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.AriaService.FetchParentAssetLinks(System.String)">
            <summary>
                Fetches the parent asset links.
            </summary>
            <param name="parentAssetId">The parent asset id.</param>
            <returns>IList{System.String}.</returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ContainerService">
            <summary>
                Service for Container
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ContainerService.#ctor(UL.Aria.Service.Manager.IContainerManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ContainerService"/> class.
            </summary>
            <param name="containerManager">The container manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ContainerService.FetchById(System.String)">
            <summary>
                Gets the Container by id.
            </summary>
            <param name="id">The id.</param>
            <returns>
                Container Dto
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ContainerService.Update(UL.Aria.Service.Contracts.Dto.ContainerDto)">
            <summary>
                Updates the container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ContainerService.Delete(System.String)">
            <summary>
                Deletes the container by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ProjectTemplateService">
            <summary>
                Class ProjectTemplateService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectTemplateService.#ctor(UL.Aria.Service.Manager.IProjectTemplateManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ProjectTemplateService"/> class.
            </summary>
            <param name="projectTemplateManager">The project task template manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectTemplateService.FetchAll">
            <summary>
                Fetches the specified <see cref="T:UL.Aria.Service.Contracts.Dto.ProjectTemplateDto"/>.
            </summary>
            <returns>List{ProjectTemplateDto}</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectTemplateService.FetchById(System.String)">
            <summary>
                Fetches the by id.
            </summary>
            <param name="id">The id.</param>
            <returns>ProjectTemplateDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectTemplateService.FetchEditableById(System.String)">
            <summary>
                Fetches editable version by id.
            </summary>
            <param name="id">The id.</param>
            <returns>ProjectTemplateDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectTemplateService.Create(UL.Aria.Service.Contracts.Dto.ProjectTemplateDto)">
            <summary>
                Creates the specified project task template.
            </summary>
            <param name="projectTemplate">The project task template.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectTemplateService.Delete(System.String)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectTemplateService.Update(System.String,UL.Aria.Service.Contracts.Dto.ProjectTemplateDto)">
            <summary>
                Updates the specified project task template.
            </summary>
            <param name="id">The id.</param>
            <param name="projectTemplate">The project task template.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectTemplateService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>ProjectTemplateSearchResultSetDto.</returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.TaskService">
            <summary>
                Class TaskService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.#ctor(UL.Aria.Service.Manager.ITaskManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.TaskService"/> class.
            </summary>
            <param name="taskManager">The task manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.FetchAll(System.String)">
            <summary>
                Fetches all.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{TaskDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.FetchCount(System.String)">
            <summary>
            Fetches the count of tasks in the specified container
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.FetchAllWithDeleted(System.String)">
            <summary>
            Fetches all with deleted.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.FetchStatusListByTaskData(System.String,System.String,UL.Aria.Service.Contracts.Dto.TaskDto)">
            <summary>
            Fetches status and status list by the task data.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="id">The id.</param>
            <param name="task">The task.</param>
            <returns>TaskStatusListDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.Download(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Downloads the tasks for the specified container id.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.DownloadSearch(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Downloads a doc ument for the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.FetchById(System.String,System.String)">
            <summary>
                Fetches the by id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="id">The id.</param>
            <returns>TaskDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.Validate(System.String,System.String,UL.Aria.Service.Contracts.Dto.TaskDto)">
            <summary>
            Validates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="containerId">The container identifier.</param>
            <param name="task">The task.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.Create(System.String,UL.Aria.Service.Contracts.Dto.TaskDto)">
            <summary>
                Creates the specified task.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="task">The task.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.Update(System.String,System.String,UL.Aria.Service.Contracts.Dto.TaskDto)">
            <summary>
                Updates the specified task.
            </summary>
            <param name="id"></param>
            <param name="containerId">The container id.</param>
            <param name="task">The task.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.Delete(System.String,System.String)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.BulkCreate(System.String,System.Collections.Generic.IList{UL.Aria.Service.Contracts.Dto.TaskDto})">
            <summary>
                Bulks the create.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.FetchHistory(System.String,System.String)">
            <summary>
                Fetches the history.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="taskId">The task id.</param>
            <returns>IList{TaskHistoryDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.FetchDeltaHistory(System.String,System.String)">
            <summary>
                Fetches the history.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="taskId">The task id.</param>
            <returns>IList{TaskHistoryDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.FetchProjectTasks(System.String,UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Fetches the project tasks.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.FetchAllFlatList(System.String)">
            <summary>
                Fetches all keeping flat, tasks next to subtasks.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{TaskDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.UpdateTasks(System.String,System.Collections.Generic.IList{UL.Aria.Service.Contracts.Dto.TaskDto})">
            <summary>
            Updates the tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="tasks">The tasks.</param>
            <returns></returns>	
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.ValidateTasks(System.String,System.Collections.Generic.IList{UL.Aria.Service.Contracts.Dto.TaskDto})">
            <summary>
            Validates the bulk.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="tasks">The tasks.</param>
            <returns></returns>		
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.CreateAndLinkDocument(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates the and link document.
            </summary>
            <param name="taskId">The task identifier.</param>
            <param name="containerId">The container identifier.</param>
            <param name="documentTemplateId">The document template identifier.</param>
            <param name="metaData">The meta data.</param>
            <returns>The document identifier,System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.DeleteTasks(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Deletes the tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="taskIds">The task ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TaskService.ValidateOnDeleteTasks(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Validates the on delete tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="taskIds">The task ids.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProjectTemplateManager">
            <summary>
                Class projectTemplateManager
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProjectTemplateManager">
            <summary>
                Interface IProjectTemplateManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectTemplateManager.Delete(System.Guid)">
            <summary>
                Deletes the specified project template id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectTemplateManager.FindAll">
            <summary>
                Fetches the project templates.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectTemplateManager.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectTemplateManager.FindEditableById(System.Guid)">
            <summary>
                Finds editable version by id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectTemplateManager.Update(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Updates the specified project template.
            </summary>
            <param name="projectTemplate">The project template.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectTemplateManager.Create(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Creates the specified project template.
            </summary>
            <param name="projectTemplate">The project template.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectTemplateManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>ProjectTemplateSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectTemplateManager.#ctor(UL.Aria.Service.Provider.IProjectTemplateProvider,UL.Aria.Service.Provider.ITaskTemplateProvider,UL.Aria.Service.Provider.ILookupProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProjectTemplateManager"/> class.
            </summary>
            <param name="projectTemplateProvider">The project template provider.</param>
            <param name="taskTemplateProvider">The task template provider.</param>
            <param name="businessUnitProvider">The business unit provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectTemplateManager.Delete(System.Guid)">
            <summary>
                Deletes the specified project template id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectTemplateManager.Create(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Creates the specified project template.
            </summary>
            <param name="projectTemplate">The project template.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectTemplateManager.FindAll">
            <summary>
            Fetches the project templates.
            </summary>
            <returns>List{ProjectTemplate}</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectTemplateManager.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectTemplateManager.FindEditableById(System.Guid)">
            <summary>
                Finds editable version by id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectTemplateManager.Update(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Updates the specified project template.
            </summary>
            <param name="projectTemplate">The project template.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectTemplateManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>ProjectTemplateSearchResultSet.</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductCharacteristicChildManager">
            <summary>
                Interface IProductCharacteristicChildManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductCharacteristicChildManager.SaveMultiRangeValues(UL.Aria.Service.Domain.Entity.ProductCharacteristic,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity})">
            <summary>
            Saves the multi range values.
            </summary>
            <param name="productCharacteristic">The product characteristic.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductCharacteristicChildManager.DeleteChildren(System.Guid)">
            <summary>
                Deletes the children.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductCharacteristicChildManager">
            <summary>
                Class ProductCharacteristicChildManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductCharacteristicChildManager.#ctor(UL.Enterprise.Foundation.Logging.ILogManager,UL.Aria.Service.Repository.IProductCharacteristicRepository,UL.Aria.Service.Provider.IProductFamilyFeatureProvider,UL.Aria.Service.Provider.IProductFamilyProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductCharacteristicChildManager"/> class.
            </summary>
            <param name="logManager">The log manager.</param>
            <param name="productCharacteristicRepository">The product characteristic repository.</param>
            <param name="familyFeatureProvider">The family feature provider.</param>
            <param name="productFamilyProvider">The family provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductCharacteristicChildManager.SaveMultiRangeValues(UL.Aria.Service.Domain.Entity.ProductCharacteristic,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity})">
            <summary>
                Saves the multi range values.
            </summary>
            <param name="productCharacteristic">The product characteristic.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="cachedCharacteristics"></param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductCharacteristicChildManager.DeleteChildren(System.Guid)">
            <summary>
                Deletes the children.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductFamilyImportManager">
            <summary>
                Defines Operations for Importing famlilys.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyImportManager.Import(System.IO.Stream)">
            <summary>
                Imports the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyImportManager.Create(UL.Aria.Service.Domain.Entity.ProductFamily,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel},System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency})">
            <summary>
                Creates the specified family.
            </summary>
            <param name="family">The family.</param>
            <param name="characteristicUploads">The characteristic uploads.</param>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyImportManager.Update(UL.Aria.Service.Domain.Entity.ProductFamily,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel},System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency})">
            <summary>
                Updates the specified family.
            </summary>
            <param name="family">The family.</param>
            <param name="characteristicUploads">The characteristic uploads.</param>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProjectManager">
            <summary>
                contract for coordinating project oriented functionality
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProjectManager.Update(System.Guid,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates the specified project.
            </summary>
            <param name="id">The id.</param>
            <param name="project">The project.</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.OrderService">
            <summary>
                Service for Order
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderService.#ctor(UL.Aria.Service.Manager.IOrderManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Common.Authorization.IAuthorizationManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Provider.IAssetProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.CompanyService"/> class.
            </summary>
            <param name="orderManager">The order manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="authorizationManager">The authorization manager.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="assetProvider">The asset provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderService.FetchById(System.String)">
            <summary>
                Gets the order by id.
            </summary>
            <param name="id">The id.</param>
            <returns>
                Order Dto
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderService.FetchByOrderNumber(System.String)">
            <summary>
                Gets the order by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>Order Dto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderService.Create(System.String)">
            <summary>
            Creates the order.
            </summary>
            <param name="orderXml">The order.</param>
            <returns>The created order id</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderService.Update(System.String)">
            <summary>
            Updates the order.
            </summary>
            <param name="orderXml">The order.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.OrderService.Delete(System.String)">
            <summary>
                Deletes the order by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.EmailService">
            <summary>
            class the provides email capabilities
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.EmailService.#ctor(UL.Aria.Service.Manager.ISmtpClientManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.EmailService"/> class.
            </summary>
            <param name="smtpClientManager">The SMTP client manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.EmailService.ContactUs(UL.Aria.Service.Contracts.Dto.EmailContactUsDto)">
            <summary>
            Sends teh contact us email.
            </summary>
            <param name="emailRequest">The email request.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.EmailService.PortalAccessRequest(System.String)">
            <summary>
            Portals the access request.
            </summary>
            <param name="loginId">The login unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.EmailService.PortalAccessGranted(System.String)">
            <summary>
            Portals the access granted.
            </summary>
            <param name="loginId">The login unique identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.IncomingOrderService">
            <summary>
                Class IncomingOrderService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IncomingOrderService.#ctor(UL.Aria.Service.Manager.IIncomingOrderManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.IncomingOrderService"/> class.
            </summary>
            <param name="incomingOrderManager">The incoming order provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IncomingOrderService.Create(UL.Aria.Service.Contracts.Dto.IncomingOrderDto)">
            <summary>
                Creates the specified new order.
            </summary>
            <param name="incomingOrder">The new order.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IncomingOrderService.Update(System.String,UL.Aria.Service.Contracts.Dto.IncomingOrderDto)">
            <summary>
                Updates the specified incoming order id.
            </summary>
            <param name="incomingOrderId">The incoming order id.</param>
            <param name="incomingOrder">The incoming order.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IncomingOrderService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
                Search based on the provided criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IncomingOrderService.PublishProjectCreationRequest(UL.Aria.Service.Contracts.Dto.ProjectCreationRequestDto)">
            <summary>
                Creates the specified new order.
            </summary>
            <param name="projectCreationRequest">The project creation request.</param>
            <returns>Container Id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IncomingOrderService.Fetch(System.String)">
            <summary>
                Fetches the specified id or order number.
            </summary>
            <param name="idOrOrderNumber">The id or order number.</param>
            <returns>IncomingOrderDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IncomingOrderService.FetchByServiceLine(System.String)">
            <summary>
                Finds the project by service line.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductFamilyImportManager">
            <summary>
                Implements Operations for Importing famlilys.
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ProductFamilyImportManager._productFamilyProvider">
            <summary>
                The _product family provider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyImportManager.#ctor(UL.Aria.Service.Provider.IProductFamilyProvider,UL.Aria.Service.Provider.IProductFamilyAttributeProvider,UL.Aria.Service.Provider.IProductFamilyFeatureProvider,UL.Aria.Service.Manager.IProductFamilyValidationManager,UL.Aria.Service.Provider.IProductMetaDataProvider,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductFamilyImportManager"/> class.
            </summary>
            <param name="productFamilyProvider">The product family provider.</param>
            <param name="attributeProvider">The attribute provider.</param>
            <param name="featureProvider">The feature provider.</param>
            <param name="validationManager"></param>
            <param name="metaDataProvider">The meta data provider.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyImportManager.Import(System.IO.Stream)">
            <summary>
                Imports the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyImportManager.Create(UL.Aria.Service.Domain.Entity.ProductFamily,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel},System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency})">
            <summary>
                Creates the specified family.
            </summary>
            <param name="family">The family.</param>
            <param name="characteristicUploads">The characteristic uploads.</param>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyImportManager.Update(UL.Aria.Service.Domain.Entity.ProductFamily,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicAssociationModel},System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureDependency})">
            <summary>
                Updates the specified family.
            </summary>
            <param name="family">The family.</param>
            <param name="characteristicUploads">The characteristic uploads.</param>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProjectManager">
            <summary>
                implements concrete functionality for
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectManager.#ctor(UL.Aria.Service.Provider.IMultiProjectDocumentBuilder,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IIncomingOrderProvider,UL.Aria.Service.Provider.IProjectProvider,UL.Aria.Service.Provider.ITaskProvider,UL.Enterprise.Foundation.Logging.ILogManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Provider.ISearchProvider,UL.Aria.Service.Manager.ISmtpClientManager,UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.Validation.IProjectValidationManager,UL.Aria.Service.Notifications.IProjectNotificationCheckManager,UL.Aria.Service.Notifications.IOrderNotificationCheckManager,UL.Aria.Service.Notifications.IOrderLineNotificationCheckManager,UL.Aria.Service.Provider.IProjectTemplateTaskCreationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProjectManager"/> class.
            </summary>
            <param name="projectDocumentBuilder">The project document builder.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="incomingOrderProvider">The incoming order provider.</param>
            <param name="projectProvider">The project provider.</param>
            <param name="taskProvider">The task provider.</param>
            <param name="logManager">The log manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="searchProvider">The search provider.</param>
            <param name="smtpClientManager">The SMTP client manager.</param>
            <param name="notificationManager">The notification manager.</param>
            <param name="projectValidationManager">The project validation manager.</param>
            <param name="projectNotificationCheckManager">The project notification check manager.</param>
            <param name="orderNotificationCheckManager">The order notification check manager.</param>
            <param name="orderLineNotificationCheckManager">The order line notification check manager.</param>
            <param name="projectTemplateTaskCreationManager">The project template task creation manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProjectManager.Update(System.Guid,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Updates the specified project.
            </summary>
            <param name="id">The id.</param>
            <param name="project">The project.</param>
            <exception cref="T:System.ArgumentException">Project cannot be canceled it still has line items.
            or
            Cannot change company on Project while it still has line items.</exception>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ProjectService">
            <summary>
                fulfills operations for working with <see cref="T:UL.Aria.Service.Contracts.Dto.ProjectDto"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectService.#ctor(UL.Aria.Service.Manager.IProjectManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Common.Authorization.IAuthorizationManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ProjectService"/> class.
            </summary>
            <param name="projectManager">The project manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="authorizationManager">The authorization manager.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectService.Fetch(System.String)">
            <summary>
                Gets the profile by id.
            </summary>
            <param name="id">The id.</param>
            <returns>
                ProfileDto
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectService.GetProjectDownloadById(System.String)">
            <summary>
                Gets the project download by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectService.GetMultipleProjectDownload(System.String)">
            <summary>
                Gets the project download by id.
            </summary>
            <param name="ids">The ids , pipe delimited</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectService.Update(System.String,UL.Aria.Service.Contracts.Dto.ProjectDto)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="project">The project.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProjectService.Validate(System.String,UL.Aria.Service.Contracts.Dto.ProjectDto)">
            <summary>
            Validates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="project">The project.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.AcceptanceClaimManager">
            <summary>
            class that implemnts claim acceptance for Terms and Conditions (NOTE: A Stub for now to not block UI devs)
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.IAcceptanceClaimManager">
            <summary>
            interface that defines contracts for managing the acceptaance of claims regarding Terms and Conditiond
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IAcceptanceClaimManager.GetTermsAndConditions(System.Guid)">
            <summary>
            Gets the terms and conditions.
            </summary>
            <param name="userId">The GUID.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IAcceptanceClaimManager.AcceptTermsAndConditions(UL.Aria.Service.Domain.Entity.TermsAndConditions,System.Guid,System.Boolean)">
            <summary>
            Accepts the terms and conditions.
            </summary>
            <param name="termsAndConditions">The terms and conditions.</param>
            <param name="userId">The user id.</param>
            <param name="hasAccepted">if set to <c>true</c> [has accepted].</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.AcceptanceClaimManager.#ctor(UL.Aria.Service.Provider.IAcceptanceClaimProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.AcceptanceClaimManager"/> class.
            </summary>
            <param name="acceptanceClaimProvider">The acceptance claim provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.AcceptanceClaimManager.GetTermsAndConditions(System.Guid)">
            <summary>
            Gets the terms and conditions.
            </summary>
            <param name="userId">The GUID.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.AcceptanceClaimManager.AcceptTermsAndConditions(UL.Aria.Service.Domain.Entity.TermsAndConditions,System.Guid,System.Boolean)">
            <summary>
            Accepts the terms and conditions.
            </summary>
            <param name="termsAndConditions">The terms and conditions.</param>
            <param name="userId">The user id.</param>
            <param name="hasAccepted">if set to <c>true</c> [has accepted].</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ContainerDefinitionBuilder">
            <summary>
                Class ContainerDefinitionBuilder
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.IContainerDefinitionBuilder">
            <summary>
                Interface IContainerDefinitionManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerDefinitionBuilder.Create(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,System.Guid)">
            <summary>
            Creates the specified container id.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="containerId"></param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerDefinitionBuilder.#ctor(System.Collections.Generic.Dictionary{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto,UL.Aria.Service.Manager.IContainerBuilder})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ContainerDefinitionBuilder"/> class.
            </summary>
            <param name="containerBuilders">The container builders.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerDefinitionBuilder.Create(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,System.Guid)">
            <summary>
                Creates the specified container id.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="containerId"></param>
            <returns>Container.</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.TaskManager">
            <summary>
            Class TaskManager
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.ITaskManager">
            <summary>
                Interface ITaskManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.UpdateBulk(System.Guid,System.Collections.Generic.List{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Bulk updates tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="tasks">The tasks.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.FetchAll(System.Guid)">
            <summary>
                Fetches all.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{Task}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.FetchAllFlatList(System.Guid)">
            <summary>
                Fetches all keeping flat, tasks next to subtasks.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{Task}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.FetchById(System.Guid,System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="taskId">The task id.</param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.Update(System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
                Updates the specified task.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="task">The task.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.Validate(System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Validates the specified container identifier.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="task">The task.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.Create(System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
                Creates the specified task.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="task">The task.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.Delete(System.Guid,System.Guid)">
            <summary>
                Deletes the specified task id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="taskId">The task id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.BulkCreate(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
                Bulks the create.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.FetchHistory(System.Guid,System.Guid)">
            <summary>
                Fetches the history.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="taskId">The task id.</param>
            <returns>IList{TaskHistory}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.DownloadByContainer(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Downloads the tasks for a given container.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.Download(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Downloads the tasks for the specified container id.
            </summary>
            <param name="searchCriteria">The container id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.RefinementItemDto}}@)">
            <summary>
                Searches the tasks for the project specified in the search crtieria.
            </summary>
            <param name="searchCriteria">
                The search criteria.  This must have the contiaenr id specified in the AriaContainerID
                filter.
            </param>
            <param name="refinerResults"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.FetchAllWithDeleted(System.Guid)">
            <summary>
            Fetches all with deleted.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.FetchDeltaHistory(System.Guid,System.Guid)">
            <summary>
            Fetches the delta history.
            </summary>
            <param name="containerIdGuid">The container identifier unique identifier.</param>
            <param name="taskIdGuid">The task identifier unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.FetchCount(System.Guid)">
            <summary>
            Fetches the count.
            </summary>
            <param name="containerId">The container identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.FetchStatusListByTaskData(System.Guid,System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Fetches the status list by task data.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="id">The identifier.</param>
            <param name="task">The task.</param>
            <returns>TaskStatusList.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.ValidateTasks(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Validates the bulk.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="tasksToValidate">The tasks to validate.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.CreateAndLinkDocument(System.Guid,System.Guid,System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates the document from the document Template and links document to the task.
            </summary>
            <param name="taskId">The task identifier.</param>
            <param name="containerId">The container identifier.</param>
            <param name="documentTemplateId">The document template identifier.</param>
            <param name="metaData">The meta data.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.FetchProjectTasks(System.Guid,UL.Aria.Service.Domain.Search.SearchCriteria,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.RefinementItemDto}}@)">
            <summary>
            Fetches the project tasks.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="refinerResults">The refiner results.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.DeleteBulk(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            Deletes the bulk.
            </summary>
            <param name="convertedContainerId">The converted container identifier.</param>
            <param name="taskGuidIds">The task unique identifier ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ITaskManager.ValidateOnDeleteTasks(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates the on delete tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="taskGuidIds">The task unique identifier ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.#ctor(UL.Aria.Service.Provider.ITaskProvider,UL.Aria.Service.Provider.IProjectProvider,UL.Aria.Service.Provider.IAssetProvider,UL.Aria.Service.Provider.IMultiProjectDocumentBuilder,UL.Aria.Service.Provider.ISearchProvider,UL.Aria.Service.Manager.ISmtpClientManager,UL.Enterprise.Foundation.Logging.ILogManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IContainerManager,UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Manager.Validation.ITaskValidationManager,UL.Aria.Service.Notifications.ITaskNotificationCheckManager,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.TaskStatus.ITaskFetchStatusStrategyFactory,UL.Aria.Service.TaskStatus.ITaskFetchStatusListStrategyFactory,UL.Aria.Service.Manager.Validation.ITaskDeleteValidationManager,UL.Aria.Service.Manager.IDocumentTemplateManager,UL.Aria.Service.Manager.IDocumentManagementManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Manager.DataRule.IWorkflowManagerFactory,UL.Aria.Service.Manager.DataRule.IWorkflowDataContextFactory,UL.Aria.Service.Provider.ITaskTypeNotificationProvider,UL.Aria.Service.Configuration.IServiceConfiguration,UL.Aria.Service.Manager.IProjectCoreManager,UL.Aria.Service.Provider.ITaskTypeBehaviorProvider,UL.Aria.Service.Provider.ITaskNotificationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.TaskManager"/> class.
            </summary>
            <param name="taskProvider">The task provider.</param>
            <param name="projectProvider">The project provider.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="taskDocumentBuilder">The task document builder.</param>
            <param name="searchProvider">The search provider.</param>
            <param name="smtpClientManager">The SMTP client manager.</param>
            <param name="logManager">The log manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="containerManager">The container manager.</param>
            <param name="notificationManager">The notification manager.</param>
            <param name="taskValidationManager">The task validation manager.</param>
            <param name="taskNotificationCheckManager">The task notification check manager.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="taskFetchStatusStrategyFactory">The task fetch status strategy factory.</param>
            <param name="taskFetchStatusListStrategyFactory">The task fetch status list strategy factory.</param>
            <param name="taskDeleteValidationManager">The task delete validation manager.</param>
            <param name="documentTemplateManager">The document template manager.</param>
            <param name="documentManagementManager">The document management manager.</param>
            <param name="mapper">The mapper.</param>
            <param name="workflowManagerFactory">The workflow manager factory.</param>
            <param name="workflowDataContextFactory">The workflow data context factory.</param>
            <param name="taskTypeNotificationProvider">The task type notification provider.</param>
            <param name="serviceConfiguration">The service configuration.</param>
            <param name="projectCoreManager">The project core manager.</param>
            <param name="taskTypeBehaviorProvider">The task type behavior provider.</param>
            <param name="taskNotificationProvider">The task notification provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.UpdateBulk(System.Guid,System.Collections.Generic.List{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Updates multiple tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="updatedTasks">The tasks.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Tasks with associated projects that are Completed or Canceled cannot be updated.</exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.DeleteBulk(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            Deletes the bulk.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="deletedTaskIds">The deleted task ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.Delete(System.Guid,System.Guid)">
            <summary>
                Deletes the specified task in the specified container.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="taskId">The task id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.ValidateTasks(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Validates the bulk.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="updatedTasks">The updated tasks.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Tasks with associated projects that are Completed or Canceled cannot be updated.</exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.FetchAll(System.Guid)">
            <summary>
                Fetches all tasks in a container.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{Task}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.FetchAllFlatList(System.Guid)">
            <summary>
                Fetches all tasks in a container keeping flat, tasks next to subtasks.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{Task}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.FetchAllWithDeleted(System.Guid)">
            <summary>
            Fetches all with deleted, including all child tasks to N level deep.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.FetchById(System.Guid,System.Guid)">
            <summary>
                Fetches the task in the specified container by id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="taskId">The task id.</param>
            <returns>UL.Aria.Service.Domain.Entity.Task.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.Validate(System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Validates the specified container identifier.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="task">The task.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.Create(System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
                Creates the task in specified container.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="task">The task.</param>
            <returns>System.Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.Update(System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
                Updates the specified task in the specified container.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="task">The task.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.BulkCreate(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
                Creates the tasks in specified container.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.FetchHistory(System.Guid,System.Guid)">
            <summary>
                Fetches the history.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="taskId">The task id.</param>
            <returns>System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.TaskHistory}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.FetchDeltaHistory(System.Guid,System.Guid)">
            <summary>
            Fetches the delta history.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.FetchCount(System.Guid)">
            <summary>
            Fetches the count.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.FetchStatusListByTaskData(System.Guid,System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Fetches the status and status list by task data.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="id">The identifier.</param>
            <param name="task">The task.</param>
            <returns>TaskStatusList.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.DownloadByContainer(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Downloads the tasks for a given container.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.Download(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Downloads the tasks for the specified container id.
            </summary>
            <param name="searchCriteria">The container id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.RefinementItemDto}}@)">
            <summary>
                Searches the tasks for the project specified in the search criteria.
            </summary>
            <param name="searchCriteria">
                The search criteria.  This must have the container id specified in the AriaContainerID
                filter.
            </param>
            <param name="refinerResults">The refiner results1.</param>
            <returns>IList{Task}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.FetchProjectTasks(System.Guid,UL.Aria.Service.Domain.Search.SearchCriteria,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{UL.Aria.Service.Contracts.Dto.RefinementItemDto}}@)">
            <summary>
            Fetches the project tasks.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="refinerResults">The refiner results.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.CreateAndLinkDocument(System.Guid,System.Guid,System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates the document from the document Template and links document to the task.
            </summary>
            <param name="taskId">The task identifier.</param>
            <param name="containerId">The container identifier.</param>
            <param name="documentTemplateId">The document template identifier.</param>
            <param name="metaData">The meta data.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.TaskManager.ValidateOnDeleteTasks(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates the on delete tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="taskGuidIds">The task unique identifier ids.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IContainerDefinitionManager">
            <summary>
            Interface IContainerDefinitionManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerDefinitionManager.Create(System.Guid,System.Nullable{System.Guid},System.String)">
            <summary>
                Creates the template.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IContainerManager">
            <summary>
                Interface IContainerManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerManager.Delete(System.Guid)">
            <summary>
                Deletes the specified container by id.
            </summary>
            <param name="containerId">The container id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerManager.FindById(System.Guid)">
            <summary>
                Fetches the specified container by id.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerManager.Update(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Updates the specified container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerManager.Create(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,System.Nullable{System.Guid})">
            <summary>
                Creates entity metadata.
            </summary>
            <param name="primarySearchEntityBase">The container.</param>
            <param name="containerId"></param>
            <returns>The created content id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerManager.Create(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase)">
            <summary>
                Creates entity metadata.
            </summary>
            <param name="primarySearchEntityBase">The container.</param>
            <returns>
                The created content id.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerManager.Update(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,System.Nullable{System.Guid})">
            <summary>
                Updates the specified primary search entity base.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="containerId">The container id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerManager.GetAvailableUserClaims(System.Guid)">
            <summary>
                Gets all actions.
            </summary>
            <param name="containerId">The container id.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.IContainerManager.GetByCompanyId(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Get all containers by company id
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductClaimAssignmentManager">
            <summary>
            Defines operations for assigning claims upon document creation/update.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductClaimAssignmentManager.AssignClaim(UL.Aria.Service.Domain.Entity.ProductUpload,System.Guid,UL.Aria.Service.Contracts.Dto.ProfileDto)">
            <summary>
            Assigns claims for the specified upload and container.
            </summary>
            <param name="productUpload">The product upload.</param>
            <param name="containerId">The container id.</param>
            <param name="profile"></param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductUploadDocumentImportManager">
            <summary>
            Defines operations for storing documents associated with an upload.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductUploadDocumentImportManager.StoreDocumentsForProduct(UL.Aria.Service.Domain.Entity.ProductUpload,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Guid,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload},UL.Aria.Service.Contracts.Dto.DocumentPermissionEnumDto,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ContainerImportFile})">
            <summary>
            Stores the documents for product.
            </summary>
            <param name="productUpload">The product upload.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="productContainerId"></param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles">The scratch files.</param>
            <param name="defaultPermission"></param>
            <param name="filesToImport"></param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductUploadProductInsertManager">
            <summary>
                Defines operations for adding <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objects while importing.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductUploadProductInsertManager.Persist(UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Guid)">
            <summary>
                Persists the specified product upload result.
            </summary>
            <param name="productUploadResult">The product upload result.</param>
            <param name="uploadId">The upload id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductUploadProductInsertManager.PersistCharacteristics(System.Guid,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload})">
            <summary>
                Persists the characteristics for new product.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles">The scratch files.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductUploadProductUpdateManager">
            <summary>
                Defines operations for updating <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objects while importing.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductUploadProductUpdateManager.Persist(System.Guid,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Guid)">
            <summary>
                Persists the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="uploadId">The upload id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductUploadProductUpdateManager.PersistCharacteristics(System.Guid,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload})">
            <summary>
                Persists the characteristics for existing product.
            </summary>
            <param name="containerId"></param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles"></param>
        </member>
        <member name="T:UL.Aria.Service.Manager.OrderManager">
            <summary>
                Manager for Orders.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.IOrderManager">
            <summary>
            Interface defining a Order Manager class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IOrderManager.FetchById(System.Guid)">
            <summary>
            Gets the order by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Order.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IOrderManager.FetchByOrderNumber(System.String)">
            <summary>
            Gets the order by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>Order.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IOrderManager.Create(System.String)">
            <summary>
            Creates the order.
            </summary>
            <param name="orderXml">The order.</param>
            <returns>The created order id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IOrderManager.Update(System.String)">
            <summary>
            Updates the order.
            </summary>
            <param name="orderXml">The order.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IOrderManager.Delete(System.Guid)">
            <summary>
            Deletes the order by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.OrderManager.#ctor(UL.Aria.Service.Provider.IOrderProvider,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IInboundMessageProvider,UL.Aria.Service.Parser.IXmlParser)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.OrderManager"/> class.
            </summary>
            <param name="orderProvider">The order provider.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="inboundMessageProvider">The inbound message provider.</param>
            <param name="incomingOrderParser">The incoming order parser.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.OrderManager.FetchById(System.Guid)">
            <summary>
                Gets the order by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.OrderManager.FetchByOrderNumber(System.String)">
            <summary>
                Gets the order by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>Order.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.OrderManager.Create(System.String)">
            <summary>
            Creates the order.
            </summary>
            <param name="orderXml">The order.</param>
            <returns>The created order id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.OrderManager.Update(System.String)">
            <summary>
            Updates the order.
            </summary>
            <param name="orderXml">The order.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.OrderManager.Delete(System.Guid)">
            <summary>
                Deletes the order by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductCharacteristicImportManager">
            <summary>
            Defines Operations for construction of <see cref="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic"/> and other properties for a product.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductCharacteristicImportManager.Fill(UL.Aria.Service.Domain.Entity.Product,Aspose.Cells.Cell)">
            <summary>
            Fills the specified product.
            </summary>
            <param name="product">The product.</param>
            <param name="characteristicCell">The characteristic cell.</param>
            <returns>Whether this object handled the cell</returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.TermsAndConditionsService">
            <summary>
            concrete implementation of the contract that allow one acces to features having accepted the terms and conditions
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TermsAndConditionsService.#ctor(UL.Aria.Service.Provider.ITermsAndConditionsProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.TermsAndConditionsService"/> class.
            </summary>
            <param name="termsAndConditionsProvider">The terms and conditions provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TermsAndConditionsService.FetchById(System.String)">
            <summary>
            Fetches the by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.TermsAndConditionsService.FetchAllByType(System.String)">
            <summary>
            Fetches the type of all by.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductDocumentManager">
            <summary>
            Defines operations for fetching product documents.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductDocumentManager.Get(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
            Fetches the specified product document.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductDocumentManager.Get(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Product},System.Guid)">
            <summary>
            Gets the document for a group of products
            </summary>
            <param name="products">The products.</param>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductImportManager">
            <summary>
            Defines operations for importing <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> entities from documents.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductImportManager.Import(System.IO.Stream)">
            <summary>
            Imports the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductManager">
            <summary>
                Product Manager interface.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.Create(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Creates the specified product.
            </summary>
            <param name="product">The product.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.Update(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
            Updates the specified product.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.Get(System.Guid)">
            <summary>
                Gets the specified product by id.
            </summary>
            <param name="productId">The product by id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.GetDownload(System.Guid)">
            <summary>
            Gets the download.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.GetByProductFamilyId(System.Guid)">
            <summary>
            Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.GetProductDownloadByProductFamilyId(System.Guid)">
            <summary>
            Gets the by family download.
            </summary>
            <param name="productFamilyId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.Upload(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
            Uploads the specified file.
            </summary>
            <param name="productUpload">The product upload.</param>
            <returns>Confirmation Id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.FetchByUserId(System.Guid,System.Int64,System.Int64)">
            <summary>
            Fetches the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <param name="rowStartIndex">Start index of the row.</param>
            <param name="rowEndIndex">End index of the row.</param>
            <returns>ProductUploadSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.GetByProductUploadId(System.Guid)">
            <summary>
            Gets the by product upload id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUploadResultSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.GetById(System.Guid)">
            <summary>
            Gets the by id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUpload.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.Delete(System.Guid)">
            <summary>
            Deletes the specified product id.
            </summary>
            <param name="productId">The product id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.GetProductDownloadByProductUploadId(System.Guid)">
            <summary>
            Gets the product download by product upload id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.UpdateStatus(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
            Updates the status.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductManager.GetProductUploadHeader(System.Guid)">
            <summary>
            Gets the product upload header.
            </summary>
            <param name="productUploadId">The product upload unique identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ProductService">
            <summary>
                Product Service implementation.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.#ctor(UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Manager.IProductManager,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Common.Authorization.IAuthorizationManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.Validation.IProductValidationManager,UL.Aria.Service.Manager.IProductUploadProductUpdateManager,UL.Aria.Service.Manager.IProductUploadProductInsertManager,UL.Aria.Service.Provider.IProductProvider,UL.Aria.Service.Provider.IAssetProvider,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ProductService"/> class.
            </summary>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="productManager">The product manager.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="authorizationManager">The authorization manager.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="productValidationManager">The product validation manager.</param>
            <param name="productUploadProductUpdateManager">The product upload product update manager.</param>
            <param name="productUploadProductInsertManager">The product upload product insert manager.</param>
            <param name="productProvider">The product provider.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.Create(UL.Aria.Service.Contracts.Dto.ProductDto)">
            <summary>
                Creates the specified product family.
            </summary>
            <param name="productFamily">The product family.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.Update(System.String,UL.Aria.Service.Contracts.Dto.ProductDto)">
            <summary>
                Updates the specified product family.
            </summary>
            <param name="id">The id.</param>
            <param name="product">The product family.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.Delete(System.String)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.GetProductById(System.String)">
            <summary>
                Gets the product family by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.GetProductDownloadById(System.String)">
            <summary>
                Gets the product's download by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.GetProductDownloadByProductFamilyId(System.String)">
            <summary>
                Gets the product's download by id.
            </summary>
            <param name="familyId">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.GetProductDownloadByProductUploadId(System.String)">
            <summary>
                Gets the product download by product upload id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.Upload(System.String,System.String,System.String,System.IO.Stream)">
            <summary>
                Uploads the specified file.
            </summary>
            <param name="userId">The user id.</param>
            <param name="companyId">The company id.</param>
            <param name="fileName"></param>
            <param name="file">The file.</param>
            <returns>Confirmation Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.FetchByUserId(System.String,System.Int64,System.Int64)">
            <summary>
                Fetches the product uploads by user id.
            </summary>
            <param name="userId">The user id.</param>
            <param name="rowStartIndex">Start index of the row.</param>
            <param name="rowEndIndex">End index of the row.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.GetByProductUploadId(System.String)">
            <summary>
                Gets the by product upload id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUploadResultSearchResultSetDto.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.GetById(System.String)">
            <summary>
                Gets the by id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUploadDto.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.ChangeStatusOverride(System.String,System.String)">
            <summary>
                Changes the status.
            </summary>
            <param name="id">The id.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.ChangeStatus(System.String,System.String)">
            <summary>
                Changes the status.
            </summary>
            <param name="id">The id.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.CreateFromUpload(UL.Aria.Service.Contracts.Dto.ProductUploadResultDto,System.String)">
            <summary>
                Creates the specified product.
            </summary>
            <param name="product">The product.</param>
            <param name="uploadId">The upload id.</param>
            <returns>
                <c>true</c> if XXXX, <c>false</c> otherwise
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.UpdateFromUpload(System.String,UL.Aria.Service.Contracts.Dto.ProductUploadResultDto,System.String)">
            <summary>
                Updates the specified product.
            </summary>
            <param name="id">The id.</param>
            <param name="product">The product.</param>
            <param name="uploadId">The upload id.</param>
            <returns>
                <c>true</c> if XXXX, <c>false</c> otherwise
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductService.UploadUpdate(System.String,UL.Aria.Service.Contracts.Dto.ProductUploadDto)">
            <summary>
                Uploads the update.
            </summary>
            <param name="id">The id.</param>
            <param name="productUploadDto">The product upload dto.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductUploadImportManager">
            <summary>
                Defines operations for importing <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> entities from <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductUploadImportManager.Import(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Imports the specified product upload.
            </summary>
            <param name="productUpload">The product upload.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ISmtpClientManager">
            <summary>
                defines contract for smtp client management
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.ContactUs(UL.Aria.Service.Domain.View.ContactUs)">
            <summary>
                Builds and sends the Contact Us email
            </summary>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendProductStatusChanged(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Sends the by default settings.
            </summary>
            <param name="product"></param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendPortalAccessRequest(System.String)">
            <summary>
                Sends the portal access request.
            </summary>
            <param name="loginId">The login unique identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendPortalAccessGranted(System.String)">
            <summary>
                Sends the portal access granted.
            </summary>
            <param name="loginId">The login unique identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendNewCompany(UL.Aria.Service.Domain.View.NewCompanyEmail)">
            <summary>
            Sends the notification to create new company.
            </summary>
            <param name="model">The model to populate email template.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendProjectCreated(System.String,UL.Aria.Service.Domain.View.ProjectEmail)">
            <summary>
                Sends the project created email.
            </summary>
            <param name="user">The user.</param>
            <param name="model">The model</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendAccountCreated(UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
                Sends the account created email.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendTaskCompleted(System.String,UL.Aria.Service.Domain.View.TaskCompletedEmail)">
            <summary>
            Sends the task completed.
            </summary>
            <param name="loginId">The login identifier.</param>
            <param name="taskCompletedEmail">The task completed email.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendTaskAssigned(System.String,UL.Aria.Service.Domain.View.TaskEmail)">
            <summary>
                Sends the portal task assign.
            </summary>
            <param name="loginId">The login unique identifier.</param>
            <param name="taskEmail">The task email.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendTaskReassigned(System.String,UL.Aria.Service.Domain.View.TaskEmail)">
            <summary>
                Sends the portal task reassign.
            </summary>
            <param name="loginId">The login unique identifier.</param>
            <param name="taskEmail">The task email.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendTaskDelete(System.String,UL.Aria.Service.Domain.View.TaskEmail)">
            <summary>
                Sends the portal task delete.
            </summary>
            <param name="loginId">The login unique identifier.</param>
            <param name="taskEmail">The task email.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendProjectAssigned(System.String,UL.Aria.Service.Domain.View.ProjectAssignmentEmail)">
            <summary>
            Sends the project assigned.
            </summary>
            <param name="recipient">The recipient.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendProjectAssignedNewHandler(System.String,UL.Aria.Service.Domain.View.ProjectAssignmentEmail)">
            <summary>
            Sends the project assigned.
            </summary>
            <param name="recipient">The recipient.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendProjectCompleted(System.String,UL.Aria.Service.Domain.View.ProjectCompletedEmail)">
            <summary>
            This method sends out an email to the recipient (project handler and/or order owner) when the project is completed.
            </summary>
            <param name="user">user</param>
            <param name="model">model</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ISmtpClientManager.SendProjectOrderOwnerReassigned(System.String,UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail)">
            <summary>
            This method sends out an email to the recipient when the project order owner is reassigned.
            </summary>
            <param name="user">user</param>
            <param name="model">model</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductCharacteristicImportManager">
            <summary>
            Operations for construction of <see cref="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic"/> and other properties for a product.
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ProductCharacteristicImportManager.ExpectedTypes">
            <summary>
            Gets the expected name of the type.
            </summary>
            <value>
            The expected name of the type.
            </value>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductCharacteristicImportManager.Fill(UL.Aria.Service.Domain.Entity.Product,Aspose.Cells.Cell)">
            <summary>
            Fills the specified product.
            </summary>
            <param name="product">The product.</param>
            <param name="characteristicCell">The characteristic cell.</param>
            <returns>Whether this object handled the cell</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductClaimAssignmentManager">
            <summary>
            Implements operations for assigning claims upon document creation/update.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductClaimAssignmentManager.#ctor(UL.Aria.Service.Contracts.Service.IUserBusinessClaimService)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductClaimAssignmentManager"/> class.
            </summary>
            <param name="claimProvider">The claim provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductClaimAssignmentManager.AssignClaim(UL.Aria.Service.Domain.Entity.ProductUpload,System.Guid,UL.Aria.Service.Contracts.Dto.ProfileDto)">
            <summary>
            Assigns claims for the specified upload and container.
            </summary>
            <param name="productUpload">The product upload.</param>
            <param name="containerId">The container id.</param>
            <param name="profile"></param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductDocumentManager">
            <summary>
            Implements operations for getting documents built from <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objetcts.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductDocumentManager.#ctor(UL.Aria.Service.Provider.IProductDocumentBuilder,UL.Aria.Service.Manager.IProductFamilyManager,UL.Aria.Service.Manager.IProductFamilyCharacteristicGroupHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductDocumentManager"/> class.
            </summary>
            <param name="productDocumentBuilder">The product document builder.</param>
            <param name="productFamilyManager">The product family manager.</param>
            <param name="productFamilyCharacteristicGroupHelper">The product family characteristic group helper.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductDocumentManager.Get(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
            Fetches the specified product document.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductDocumentManager.Get(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Product},System.Guid)">
            <summary>
            Gets the document for a group of products
            </summary>
            <param name="products">The products.</param>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductFamilyCharacteristicGroupHelper">
            <summary>
            Defines operations that help manage grouping <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity"/> objects. 
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyCharacteristicGroupHelper.GroupCharacteristics(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity}@,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity}@)">
            <summary>
            Groups the characteristics.
            </summary>
            <param name="characteristics">The characteristics.</param>
            <param name="baseCharacteristics">The base characteristics.</param>
            <param name="variableCharacteristics">The variable characteristics.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductFamilyCharacteristicGroupHelper">
            <summary>
            Defines operations that help manage grouping <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity"/> objects. 
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyCharacteristicGroupHelper.GroupCharacteristics(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity}@,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity}@)">
            <summary>
            Groups the characteristics.
            </summary>
            <param name="characteristics">The characteristics.</param>
            <param name="baseCharacteristics">The base characteristics.</param>
            <param name="variableCharacteristics">The variable characteristics.</param>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductUploadResult">
            <summary>
                Result of importing a <see cref="P:UL.Aria.Service.Domain.Entity.ProductUploadResult.Product"/>
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUploadResult.ProductUploadId">
            <summary>
                Gets or sets the product upload id.
            </summary>
            <value>The product upload id.</value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUploadResult.Product">
            <summary>
                Gets or sets the product.
            </summary>
            <value>
                The product.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUploadResult.Messages">
            <summary>
                Gets or sets the errors.
            </summary>
            <value>
                The errors.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUploadResult.IsValid">
            <summary>
                Gets or sets a value indicating whether this instance is valid.
            </summary>
            <value>
                <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductUploadResult.CreatedByUserLoginId">
            <summary>
                Gets or sets the created by user login id.
            </summary>
            <value>The created by user login id.</value>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductImportManager">
            <summary>
            Implements operatiosn for importing <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> entities from documents.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductImportManager.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Manager.IProductCharacteristicImportManager})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductImportManager"/> class.
            </summary>
            <param name="factories">The factories.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductImportManager.Import(System.IO.Stream)">
            <summary>
            Imports the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductImportManager.FindLastFilledRow(Aspose.Cells.Worksheet)">
            <summary>
            Finds the last filled row.
            </summary>
            <param name="worksheet">The worksheet.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductUploadDocumentImportManager">
            <summary>
                Implements operations for storing documents associated with an upload.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadDocumentImportManager.#ctor(UL.Aria.Service.Provider.IAssetProvider,UL.Aria.Service.Contracts.Service.IScratchSpaceService,UL.Enterprise.Foundation.Logging.ILogManager,UL.Aria.Service.Provider.IDocumentContentProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductUploadDocumentImportManager"/> class.
            </summary>
            <param name="assetProvider">The content provider.</param>
            <param name="scratchSpaceRepository">The scratch space repository.</param>
            <param name="logManager">The log manager.</param>
            <param name="documentContentProvider">The document content provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadDocumentImportManager.StoreDocumentsForProduct(UL.Aria.Service.Domain.Entity.ProductUpload,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Guid,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload},UL.Aria.Service.Contracts.Dto.DocumentPermissionEnumDto,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ContainerImportFile})">
            <summary>
                Stores the documents for product.
            </summary>
            <param name="productUpload">The product upload.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="productContainerId"></param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles">The scratch files.</param>
            <param name="defaultPermission"></param>
            <param name="filesToImport"></param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductUploadImportManager">
            <summary>
                Implements operations for importing <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> entities from <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadImportManager.#ctor(UL.Aria.Service.Provider.IProductProvider,UL.Aria.Service.Contracts.Service.IProductService,UL.Aria.Service.Manager.IProductImportManager,UL.Enterprise.Foundation.Logging.ILogManager,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Contracts.Service.IScratchSpaceService,UL.Aria.Service.Contracts.Service.IProfileService,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductUploadImportManager"/> class.
            </summary>
            <param name="productProvider">The product provider.</param>
            <param name="productService">The product service.</param>
            <param name="productImportManager">The product import manager.</param>
            <param name="logManager">The log manager.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="scratchSpaceService">The scratch space repository.</param>
            <param name="profileService">The profile service.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadImportManager.Process(System.Threading.CancellationToken,System.Boolean)">
            <summary>
                Processes this instance.
            </summary>
            <param name="token">The token.</param>
            <param name="isContinuous">
                if set to <c>true</c> [is continuous].
            </param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadImportManager.Import(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Imports the specified product upload.
            </summary>
            <param name="productUpload">The product upload.</param>
        </member>
        <member name="P:UL.Aria.Service.Manager.ProductUploadImportManager.ErrorCount">
            <summary>
            Gets or sets the error count.
            </summary>
            <value>The error count.</value>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductUploadProductInsertManager">
            <summary>
                Implements operations for adding <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objects while importing.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadProductInsertManager.#ctor(UL.Aria.Service.Provider.IProductProvider,UL.Enterprise.Foundation.Logging.ILogManager,UL.Aria.Service.Provider.IProductUploadFamilyCharacteristicProvider,UL.Aria.Service.Repository.IProductCharacteristicRepository,UL.Aria.Service.Manager.IProductUploadDocumentImportManager,UL.Aria.Service.Provider.IAssetProvider,UL.Aria.Service.Manager.IProductClaimAssignmentManager,UL.Aria.Service.Provider.IProductUploadDocumentCharacteristicProvider,UL.Aria.Service.Manager.IProductCharacteristicChildManager,UL.Aria.Service.Repository.IScratchSpaceRepository,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductUploadProductInsertManager"/> class.
            </summary>
            <param name="productProvider">The product provider.</param>
            <param name="logManager">The log manager.</param>
            <param name="productUploadFamilyCharacteristicProvider">The product upload family characteristic provider.</param>
            <param name="productCharacteristicRepository">The product characteristic repository.</param>
            <param name="productUploadDocumentImportManager">The product upload document import manager.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="productClaimAssignmentManager">The product claim assignment manager.</param>
            <param name="documentCharacteristicProvider">The document characteristic provider.</param>
            <param name="productCharacteristicChildManager">The product characteristic child manager.</param>
            <param name="scratchSpaceRepository">The scratch space repository.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadProductInsertManager.Persist(UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Guid)">
            <summary>
            Persists the specified product upload result.
            </summary>
            <param name="productUploadResult">The product upload result.</param>
            <param name="uploadId">The upload id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadProductInsertManager.PersistCharacteristics(System.Guid,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload})">
            <summary>
                Persists the characteristics for new product.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles">The scratch files.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadProductInsertManager.TryExecute``1(UL.Enterprise.Foundation.Logging.ILogManager,UL.Aria.Service.Domain.Entity.ProductUploadResult,``0,System.String,System.String,System.Action{``0})">
            <summary>
                Tries the execute.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="logManager">The log manager.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="entity">The entity.</param>
            <param name="titleFormat">The title format.</param>
            <param name="detailFormat">The detail format.</param>
            <param name="action">The action.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductUploadProductUpdateManager">
            <summary>
                Implements operations for updating <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objects while importing.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadProductUpdateManager.#ctor(UL.Aria.Service.Provider.IProductProvider,UL.Aria.Service.Provider.IAssetProvider,UL.Aria.Service.Provider.ISearchProvider,UL.Enterprise.Foundation.Logging.ILogManager,UL.Aria.Service.Provider.IProductUploadFamilyCharacteristicProvider,UL.Aria.Service.Repository.IProductCharacteristicRepository,UL.Aria.Service.Manager.IProductUploadDocumentImportManager,UL.Aria.Service.Manager.IProductClaimAssignmentManager,UL.Aria.Service.Provider.IProductUploadDocumentCharacteristicProvider,UL.Aria.Service.Manager.IProductCharacteristicChildManager,UL.Aria.Service.Repository.IScratchSpaceRepository,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IProductManager)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductUploadProductUpdateManager"/> class.
            </summary>
            <param name="productProvider">The product provider.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="searchProvider">The search provider.</param>
            <param name="logManager">The log manager.</param>
            <param name="productCharacteristicImportManager">The product characteristic import manager.</param>
            <param name="productCharacteristicRepository">The product characteristic repository.</param>
            <param name="productUploadDocumentImportManager">The product upload document import manager.</param>
            <param name="productClaimAssignmentManager">The claim provider.</param>
            <param name="documentCharacteristicProvider">The document characteristic provider.</param>
            <param name="productCharacteristicChildManager">The product characteristic child manager.</param>
            <param name="scratchSpaceRepository">The scratch space repository.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="productManager">The product manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadProductUpdateManager.Persist(System.Guid,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Guid)">
            <summary>
                Persists the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="uploadId">The upload id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductUploadProductUpdateManager.PersistCharacteristics(System.Guid,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload})">
            <summary>
                Persists the characteristics for existing product.
            </summary>
            <param name="containerId"></param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles"></param>
        </member>
        <member name="T:UL.Aria.Service.Manager.SmtpClientManager">
            <summary>
                Manages Smtp Client Provider activities
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.#ctor(UL.Aria.Service.Provider.ISmtpClientProvider,UL.Aria.Common.BusinessMessage.IBusinessMessageProvider,UL.Aria.Service.Templating.IAriaTemplateService,UL.Aria.Service.Configuration.IServiceConfiguration,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.SmtpClientManager"/> class.
            </summary>
            <param name="smtpClientProvider">The SMTP client provider.</param>
            <param name="businessMessageProvider">The business message provider.</param>
            <param name="templateService">The template service.</param>
            <param name="serviceConfiguration">The service configuration.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.ContactUs(UL.Aria.Service.Domain.View.ContactUs)">
            <summary>
                Builds and sends the Contact Us email
            </summary>
            <param name="contact">The contact.</param>
            <exception cref="T:System.Net.Mail.SmtpException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendProductStatusChanged(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
            Sends the the prooduct status change email.
            </summary>
            <param name="product"></param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendPortalAccessRequest(System.String)">
            <summary>
                Sends the portal access request.
            </summary>
            <param name="loginId">The login unique identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendPortalAccessGranted(System.String)">
            <summary>
                Sends the portal access granted.
            </summary>
            <param name="loginId">The login unique identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendNewCompany(UL.Aria.Service.Domain.View.NewCompanyEmail)">
            <summary>
            This method sends email notification to create a new company.
            </summary>        
            <param name="model">model</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendProjectCreated(System.String,UL.Aria.Service.Domain.View.ProjectEmail)">
            <summary>
            This method sends out an email when a project is created.
            </summary>
            <param name="user">user</param>
            <param name="model">model</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendProjectAssigned(System.String,UL.Aria.Service.Domain.View.ProjectAssignmentEmail)">
            <summary>
            This method sends out an email when project handler is reassigned.
            </summary>
            <param name="user">user</param>
            <param name="model">model</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendProjectAssignedNewHandler(System.String,UL.Aria.Service.Domain.View.ProjectAssignmentEmail)">
            <summary>
            This method sends out an email to new handler when project handler is reassigned.
            </summary>
            <param name="user">user</param>
            <param name="model">model</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendProjectCompleted(System.String,UL.Aria.Service.Domain.View.ProjectCompletedEmail)">
            <summary>
            This method sends out an email to the recipient (project handler and/or order owner) when the project is completed.
            </summary>
            <param name="user">user</param>
            <param name="model">model</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendProjectOrderOwnerReassigned(System.String,UL.Aria.Service.Domain.View.ProjectOrderOwnerReassignedEmail)">
            <summary>
            This method sends out an email to the recipient when the project order owner is reassigned.
            </summary>
            <param name="user">user</param>
            <param name="model">model</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendAccountCreated(UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
                Sends the account created email.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendTaskCompleted(System.String,UL.Aria.Service.Domain.View.TaskCompletedEmail)">
            <summary>
            Sends the task completed email.
            </summary>
            <param name="handler">The login unique identifier.</param>
            <param name="taskCompletedEmail">The task completed email.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendTaskAssigned(System.String,UL.Aria.Service.Domain.View.TaskEmail)">
            <summary>
            Sends the portal task assign.
            </summary>
            <param name="loginId">The login unique identifier.</param>
            <param name="taskEmail">The task email.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendTaskReassigned(System.String,UL.Aria.Service.Domain.View.TaskEmail)">
            <summary>
            Sends the portal task reassign.
            </summary>
            <param name="loginId">The login unique identifier.</param>
            <param name="taskEmail">The task email.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.SmtpClientManager.SendTaskDelete(System.String,UL.Aria.Service.Domain.View.TaskEmail)">
            <summary>
            Sends the portal task delete.
            </summary>
            <param name="loginId">The login unique identifier.</param>
            <param name="taskEmail">The task email.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.StaticColumnProductCharacteristicImportManager">
            <summary>
            Implements Operations for construction of <see cref="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic"/> and other properties for a product.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.StaticColumnProductCharacteristicImportManager.Fill(UL.Aria.Service.Domain.Entity.Product,Aspose.Cells.Cell)">
            <summary>
            Fills the specified product.
            </summary>
            <param name="product">The product.</param>
            <param name="characteristicCell">The characteristic cell.</param>
            <returns>Whether this object handled the cell</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.IProductValidationManager">
            <summary>
                Defines operations to Validates <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.IProductValidationManager.Validate(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Validates the specified entity to validate.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.IProductValidator">
            <summary>
                Defines operations to Validate <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objects for a specific rule.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.IProductValidator.Validate(UL.Aria.Service.Domain.Entity.Product,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.List{System.String})">
            <summary>
                Validates the instance.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="characteristicDefinitions">The characteristic definitions.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ProductCharacteristicTypeValidator`1">
            <summary>
            Validates <see cref="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic"/> objects of type date time.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductCharacteristicTypeValidator`1.#ctor(UL.Aria.Service.Contracts.Dto.ProductFamilyCharacteristicDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.ProductCharacteristicTypeValidator`1"/> class.
            </summary>
            <param name="expectedType">The expected type.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductCharacteristicTypeValidator`1.Validate(UL.Aria.Service.Domain.Entity.Product,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductCharacteristic},System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.List{System.String})">
            <summary>
            Validates the instance.
            </summary>
            <param name="product"></param>
            <param name="characteristics"></param>
            <param name="characteristicDefinitions">The characteristic definitions.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ProductDocumentCharacteristicValidator">
            <summary>
                Implements operations to Validate <see cref="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic"/> objects with documents.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductDocumentCharacteristicValidator.#ctor(UL.Aria.Service.Provider.ISearchProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.ProductDocumentCharacteristicValidator"/> class.
            </summary>
            <param name="searchProvider">The search provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductDocumentCharacteristicValidator.Validate(UL.Aria.Service.Domain.Entity.Product,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductCharacteristic},System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.List{System.String})">
            <summary>
            Validates the instance.
            </summary>
            <param name="product"></param>
            <param name="characteristics"></param>
            <param name="characteristicDefinitions">The characteristic definitions.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductDocumentCharacteristicValidator.GetDocumentsForProduct(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Gets the documents for product.
            </summary>
            <param name="product">The product.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ProductRequiredCharacteristicValidator">
            <summary>
            Validates required <see cref="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic"/> objects on <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objetcs
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductRequiredCharacteristicValidator.Validate(UL.Aria.Service.Domain.Entity.Product,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.List{System.String})">
            <summary>
                Validates the instance.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
            <param name="characteristicDefinitions">The characteristic definitions.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.Validation.ProductValidationManager">
            <summary>
                Validates <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductValidationManager.#ctor(UL.Aria.Service.Manager.IProductFamilyManager,System.Collections.Generic.IEnumerable{UL.Aria.Service.Manager.Validation.IProductValidator},System.Collections.Generic.IEnumerable{UL.Aria.Service.Manager.Validation.ICharacteristicValidator},System.Collections.Generic.IEnumerable{UL.Aria.Service.Manager.Validation.ICharacteristicValidator})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.Validation.ProductValidationManager"/> class.
            </summary>
            <param name="productFamilyManager">The product family manager.</param>
            <param name="productValidators">The product validators.</param>
            <param name="attributeValidators">The attribute validators.</param>
            <param name="featureValidators">The feature validators.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.Validation.ProductValidationManager.Validate(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Validates the specified entity to validate.
            </summary>
            <param name="entityToValidate">The entity to validate.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.AcceptanceClaimProvider">
            <summary>
                concrete acceptance claim provider
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IAcceptanceClaimProvider">
            <summary>
            provider for acceptance claim repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAcceptanceClaimProvider.GetTermsAndConditions(System.Guid)">
            <summary>
            Gets the terms and conditions.
            </summary>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAcceptanceClaimProvider.AcceptTermsAndConditions(UL.Aria.Service.Domain.Entity.TermsAndConditions,System.Guid,System.Boolean)">
            <summary>
            Accepts the terms and conditions.
            </summary>
            <param name="termsAndConditions">The terms and conditions.</param>
            <param name="userId">The user id.</param>
            <param name="hasAccepted">if set to <c>true</c> [has accepted].</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AcceptanceClaimProvider.#ctor(UL.Aria.Service.Repository.IAcceptanceClaimRepository,UL.Aria.Service.Repository.ITermsAndConditionsRepository)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.AcceptanceClaimProvider"/> class.
            </summary>
            <param name="acceptanceClaimRepository">The acceptance claim repository.</param>
            <param name="termsAndConditionsRepository"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AcceptanceClaimProvider.GetTermsAndConditions(System.Guid)">
            <summary>
            Gets the terms and conditions.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AcceptanceClaimProvider.AcceptTermsAndConditions(UL.Aria.Service.Domain.Entity.TermsAndConditions,System.Guid,System.Boolean)">
            <summary>
            Accepts the terms and conditions.
            </summary>
            <param name="termsAndConditions">The terms and conditions.</param>
            <param name="userId">The user id.</param>
            <param name="hasAccepted">if set to <c>true</c> [has accepted].</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.AllowedValuteTypeValidationBuilder">
            <summary>
                Builds validations for value types in workbooks.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.WorkbookValidationBuilderBase">
            <summary>
            Base class for <see cref="T:UL.Aria.Service.Provider.IValidationBuilder"/> for workbooks.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IValidationBuilder">
            <summary>
            Defines operations for injecting unit of measure validators into worksheet.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IValidationBuilder.Build(Aspose.Cells.Workbook,System.Int32,System.Int32)">
            <summary>
            Builds the specified workbook.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="columnToValidate">The column to validate.</param>
            <param name="maxRows"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.WorkbookValidationBuilderBase.Build(Aspose.Cells.Workbook,System.Int32,System.Int32)">
            <summary>
            Builds the specified workbook.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="columnToValidate">The column to validate.</param>
            <param name="maxRows"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.WorkbookValidationBuilderBase.AddValidationValues(Aspose.Cells.Worksheet)">
            <summary>
            Adds the validation values.
            </summary>
            <param name="validationWorksheet">The validation worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.WorkbookValidationBuilderBase.AddValidation(Aspose.Cells.Workbook,System.Int32,System.Int32,Aspose.Cells.Range)">
            <summary>
            Adds the validation.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="columnToValidate">The column to validate.</param>
            <param name="maxRows">The max rows.</param>
            <param name="valueRange">The value range.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AllowedValuteTypeValidationBuilder.AddValidationValues(Aspose.Cells.Worksheet)">
            <summary>
                Adds the validation values.
            </summary>
            <param name="validationWorksheet">The validation worksheet.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProjectProvider">
            <summary>
                Interface IProjectProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.FetchProjects(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
                Fetches the projects.
            </summary>
            <param name="ids">The ids.</param>
            <returns>IEnumerable{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.Publish(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Publishes the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="changedProject">The changed project.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.FetchById(System.Guid)">
            <summary>
                Fetches the by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Project.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.FetchByOrderNumber(System.String)">
            <summary>
                Fetches the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>IList{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.Create(System.Guid,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Creates the specified container id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="project">The project.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.Update(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates the specified project.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.UpdateAllContactsForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.UpdateAllCustomersForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderCustomer)">
            <summary>
            Updates all customers for external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="customer"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.UpdateFromIncomingOrder(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates from incoming order.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.UpdateStatusFromOrder(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Updates the status from order.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.FetchProjects">
            <summary>
                Fetches all projects.
            </summary>
            <returns>IEnumerable{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.FetchProjectLookups">
            <summary>
            Fetches the project lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.FetchAllIds">
            <summary>
            Fetches all headers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.UpdateContact(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectProvider.CreateContact(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Creates the contact.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="contact">The contact.</param>
            <returns>Guid.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProjectProvider">
            <summary>
                Class ProjectProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.#ctor(UL.Enterprise.Foundation.Logging.ILogManager,UL.Aria.Service.Repository.IProjectRepository,UL.Aria.Service.Repository.IProjectProjectTemplateRepository,UL.Aria.Service.Provider.IProjectStatusMessageProvider,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IAssetProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Provider.ICompanyProvider,UL.Aria.Service.Provider.ITaskProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProjectProvider"/> class.
            </summary>
            <param name="logManager">The log manager.</param>
            <param name="projectRepository">The project repository.</param>
            <param name="projectProjectTemplateRepository">The project project template repository.</param>
            <param name="projectStatusMessageProvider">The project status message provider.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="companyProvider">The company provider.</param>
            <param name="taskProvider">The task provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.FetchProjectLookups">
            <summary>
            Fetches a IEnumerable of name id pair objects for  project as lookup objects.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.FetchAllIds">
            <summary>
            Fetches all headers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.FetchProjects(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
                Fetches the projects.
            </summary>
            <param name="ids">The ids.</param>
            <returns>IEnumerable{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.FetchProjects">
            <summary>
                Fetches all projects.
            </summary>
            <returns>IEnumerable{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.Publish(UL.Aria.Service.Domain.Entity.Project,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Publishes the specified project.
            </summary>
            <param name="project">The project.</param>
            <param name="changedProject">The changed project.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.FetchById(System.Guid)">
            <summary>
                Fetches the by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Project.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.Create(System.Guid,UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Creates the specified container id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="project">The project.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.Update(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates the specified project.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.UpdateStatusFromOrder(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Updates the status from order.
            </summary>
            <param name="project">The project.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.UpdateAllContactsForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="contact">The contact.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.UpdateContact(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.CreateContact(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Creates the contact.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="contact">The contact.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.UpdateAllCustomersForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderCustomer)">
            <summary>
            Updates all customers for external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="customer"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.FetchByOrderNumber(System.String)">
            <summary>
                Fetches the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>IList{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectProvider.UpdateFromIncomingOrder(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates from incoming order.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IFavoriteSearchProvider">
            <summary>
            Saved search provider interface definition.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IFavoriteSearchProvider.FetchAll">
            <summary>
            Fetches the saved searches by user id.
            </summary>
            <returns>User's saved searches.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IFavoriteSearchProvider.FetchByLocation(System.String)">
            <summary>
            Fetches the by user id and location.
            </summary>
            <param name="location">The location.</param>
            <returns>User's saved searches for a location</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IFavoriteSearchProvider.Create(UL.Aria.Service.Domain.Entity.FavoriteSearch)">
            <summary>
            Creates the specified saved search.
            </summary>
            <param name="favoriteSearch">The saved search.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IFavoriteSearchProvider.Update(UL.Aria.Service.Domain.Entity.FavoriteSearch)">
            <summary>
            Updates the specified saved search.
            </summary>
            <param name="favoriteSearch">To saved search.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IFavoriteSearchProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified favorite search id.
            </summary>
            <param name="favoriteSearchId">The favorite search id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IFavoriteSearchProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>Matching favorite search results.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IFavoriteSearchProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by id.
            </summary>
            <param name="favoriteSearchId">The favorite search id.</param>
            <returns>Matching favorite search.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IFavoriteSearchProvider.PartialUpdate(UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch)">
            <summary>
            Partials the update.
            </summary>
            <param name="partialUpdateFavoriteSearch">The partial update favorite search.</param>
            <returns>Updated favorite search.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IFavoriteSearchProvider.FetchActiveByLocation(System.String)">
            <summary>
            Fetches the active by location.
            </summary>        
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IFavoriteSearchProvider.FetchAvailableByLocation(System.String)">
            <summary>
            Fetches the available by location.
            </summary>        
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProjectTemplateProvider">
            <summary>
                Class ProjectTemplateProvider
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProjectTemplateProvider">
            <summary>
                Interface IProjectTemplateProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectTemplateProvider.Create(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Creates the specified project template.
            </summary>
            <param name="projectTemplate">The project template.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectTemplateProvider.Update(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Updates the specified project template.
            </summary>
            <param name="projectTemplate">The project template.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectTemplateProvider.GetAll">
            <summary>
            Fetches the project templates.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectTemplateProvider.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectTemplateProvider.GetAllByCorrelationId(System.Guid)">
            <summary>
                Fetches the project templates with the same correlationId.
            </summary>
            <param name="correlationId">The project template correlation id.</param>
            <returns>List{ProjectTemplate}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectTemplateProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified project template id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectTemplateProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>ProjectTemplateSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateProvider.#ctor(UL.Aria.Service.Repository.IProjectTemplateRepository)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProjectTemplateProvider"/> class.
            </summary>
            <param name="projectTemplateRepository">The project template repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateProvider.Create(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Creates the specified project template.
            </summary>
            <param name="projectTemplate">The project template.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateProvider.GetAll">
            <summary>
                Fetches the project templates.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateProvider.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateProvider.GetAllByCorrelationId(System.Guid)">
            <summary>
                Fetches the project templates with the same correlationId.
            </summary>
            <param name="correlationId">The project template correlation id.</param>
            <returns>List{ProjectTemplate}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateProvider.Update(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Updates the specified project template.
            </summary>
            <param name="projectTemplate">The project template.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified project template id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectTemplateProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>ProjectTemplateSearchResultSet.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.FavoriteSearchProvider">
            <summary>
            Saved search provider class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.#ctor(UL.Aria.Service.Repository.IFavoriteSearchRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Enterprise.Foundation.Domain.IValidator{UL.Aria.Service.Domain.Entity.FavoriteSearch},UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.FavoriteSearchProvider"/> class.
            </summary>
            <param name="favoriteSearchRepository">The saved search repository.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="favoriteSearchValidator">The favorite search validator.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.FetchAll">
            <summary>
            Fetches the saved searches by user id.
            </summary>
            <returns>
            User's saved searches.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.FetchByLocation(System.String)">
            <summary>
            Fetches the by user id and location.
            </summary>
            <param name="location">The location.</param>
            <returns>
            User's saved searches for a location
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.FetchActiveByLocation(System.String)">
            <summary>
            Fetches the active by location.
            </summary>        
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.FetchAvailableByLocation(System.String)">
            <summary>
            Fetches the available by location.
            </summary>        
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.Create(UL.Aria.Service.Domain.Entity.FavoriteSearch)">
            <summary>
            Creates the specified saved search.
            </summary>
            <param name="favoriteSearch">The saved search.</param>
            <returns>Created favorite search.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.Update(UL.Aria.Service.Domain.Entity.FavoriteSearch)">
            <summary>
            Updates the specified saved search.
            </summary>
            <param name="favoriteSearch">To saved search.</param>
            <returns>Updated favorite search.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified favorite search id.
            </summary>
            <param name="favoriteSearchId">The favorite search id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>
            Matching favorite search results.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by id.
            </summary>
            <param name="favoriteSearchId">The favorite search id.</param>
            <returns>
            Matching favorite search.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.FavoriteSearchProvider.PartialUpdate(UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch)">
            <summary>
            Partials the update.
            </summary>
            <param name="partialUpdateFavoriteSearch">The partial update favorite search.</param>
            <returns>
            Updated favorite search.
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SharePointRestApiAccessTokenGeneratorConfiguration">
            <summary>
                Configuration class for <see cref="T:UL.Iam.Common.OAuth.SharePointRestApiAccessTokenGenerator"/>
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointRestApiAccessTokenGeneratorConfiguration.ClientId">
            <summary>
                Gets the search service OAuth client id.
            </summary>
            <value>
                The search service OAuth client id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointRestApiAccessTokenGeneratorConfiguration.SiteId">
            <summary>
                Gets the search service OAuth site id.
            </summary>
            <value>
                The search service OAuth site id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointRestApiAccessTokenGeneratorConfiguration.TrustedCertificateThumprint">
            <summary>
                Gets or sets the trusted certificate thumprint.
            </summary>
            <value>
                The trusted certificate thumprint.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointRestApiAccessTokenGeneratorConfiguration.TrustedCertificateStoreName">
            <summary>
                Gets or sets the name of the trusted certificate store.
            </summary>
            <value>
                The name of the trusted certificate store.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointRestApiAccessTokenGeneratorConfiguration.TrustedCertificateLocation">
            <summary>
                Gets or sets the trusted certificate location.
            </summary>
            <value>
                The trusted certificate location.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Provider.CustomerInformationProjectDocumentSectionBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProjectDocumentSectionBuilder">
            <summary>
            Defines operations for building sections in documents from <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectDocumentSectionBuilder.AddSection(Aspose.Cells.Workbook,Aspose.Cells.Worksheet,UL.Aria.Service.Domain.Entity.Project,System.Int32)">
            <summary>
            Adds the section.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="worksheet">The worksheet.</param>
            <param name="project">The project.</param>
            <param name="startRow">The start row.</param>
            <returns>
            the last row populated by this builder.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.CustomerInformationProjectDocumentSectionBuilder.AddSection(Aspose.Cells.Workbook,Aspose.Cells.Worksheet,UL.Aria.Service.Domain.Entity.Project,System.Int32)">
            <summary>
            Adds the section.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="worksheet">The worksheet.</param>
            <param name="project">The project.</param>
            <param name="startRow">The start row.</param>
            <returns>the last row populated by this builder.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.EstimatesAndConstraintsInformationProjectDocumentSectionBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.EstimatesAndConstraintsInformationProjectDocumentSectionBuilder.AddSection(Aspose.Cells.Workbook,Aspose.Cells.Worksheet,UL.Aria.Service.Domain.Entity.Project,System.Int32)">
            <summary>
            Adds the section.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="worksheet">The worksheet.</param>
            <param name="project">The project.</param>
            <param name="startRow">The start row.</param>
            <returns>the last row populated by this builder.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.GeneralInformationProjectDocumentSectionBuilder">
            <summary>
            Builds project document section for Order Information
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.GeneralInformationProjectDocumentSectionBuilder.AddSection(Aspose.Cells.Workbook,Aspose.Cells.Worksheet,UL.Aria.Service.Domain.Entity.Project,System.Int32)">
            <summary>
            Adds the section.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="worksheet">The worksheet.</param>
            <param name="project">The project.</param>
            <param name="startRow">The start row.</param>
            <returns>the last row populated by this builder.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProjectDocumentBuilder">
            <summary>
            Defines operations for building documents from <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProjectDocumentBuilder.Build(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Builds the specified project.
            </summary>
            <param name="project">The project.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IUnitOfMeasureProvider">
            <summary>
                Defines Operations for UnitOfMeasure
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUnitOfMeasureProvider.GetAll">
            <summary>
                Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUnitOfMeasureProvider.Fetch(System.Guid)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>UnitOfMeasure.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUnitOfMeasureProvider.Create(UL.Aria.Service.Domain.Entity.UnitOfMeasure)">
            <summary>
                Creates the specified unit of measure.
            </summary>
            <param name="unitOfMeasure">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUnitOfMeasureProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.UnitOfMeasure)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="unitOfMeasure">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUnitOfMeasureProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.UnitOfMeasureProvider">
            <summary>
                stub
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.UnitOfMeasureProvider.#ctor(UL.Aria.Service.Repository.IUnitOfMeasureRepository)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.UnitOfMeasureProvider"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.UnitOfMeasureProvider.GetAll">
            <summary>
                Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.UnitOfMeasureProvider.Fetch(System.Guid)">
            <summary>
                Fetches the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>UnitOfMeasure.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.UnitOfMeasureProvider.Create(UL.Aria.Service.Domain.Entity.UnitOfMeasure)">
            <summary>
                Creates the specified unit of measure.
            </summary>
            <param name="unitOfMeasure">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.UnitOfMeasureProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.UnitOfMeasure)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="unitOfMeasure">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.UnitOfMeasureProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.MiscellaneousProjectDocumentSectionBuilder">
            <summary>
            Builds document section for Miscellaneous
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.MiscellaneousProjectDocumentSectionBuilder.AddSection(Aspose.Cells.Workbook,Aspose.Cells.Worksheet,UL.Aria.Service.Domain.Entity.Project,System.Int32)">
            <summary>
            Adds the section.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="worksheet">The worksheet.</param>
            <param name="project">The project.</param>
            <param name="startRow">The start row.</param>
            <returns>Last Row Populated</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.OrderInformationProjectDocumentSectionBuilder">
            <summary>
                Builds project document section for Order Informaiton
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderInformationProjectDocumentSectionBuilder.AddSection(Aspose.Cells.Workbook,Aspose.Cells.Worksheet,UL.Aria.Service.Domain.Entity.Project,System.Int32)">
            <summary>
                Adds the section.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="worksheet">The worksheet.</param>
            <param name="project">The project.</param>
            <param name="startRow">The start row.</param>
            <returns>Last Row Populated</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductFamilyMultiTemplateBuilder">
            <summary>
                Implements a product family template builder that uses several sheets to present the family.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderBase">
            <summary>
            Base implementation for classes which build templates for <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.DocumentBuilderBase">
            <summary>
            Base implementation for classes which build documents.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentBuilderBase.InitializeDocument">
            <summary>
                Initializes the document and makes it ready for writing.
                This
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentBuilderBase.InitializeDocument(System.IO.Stream)">
            <summary>
                Initializes the document based on an existing <see cref="T:System.IO.Stream"/> and makes it ready for writing.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentBuilderBase.AddWorksheet(Aspose.Cells.Workbook,System.String)">
            <summary>
            Adds the worksheet.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="sheetName">Name of the sheet.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentBuilderBase.FindWorksheet(Aspose.Cells.Workbook,System.String)">
            <summary>
            Finds the worksheet.
            </summary>
            <param name="workbook">The workbook.</param>
            <param name="sheetName">Name of the sheet.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentBuilderBase.FinalizeDocument(Aspose.Cells.Workbook)">
            <summary>
                Closes the document.
            </summary>
            <param name="workbook"></param>
            <returns>The stream with the document.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.DocumentBuilderBase.FinalizeStyle(Aspose.Cells.Workbook)">
            <summary>
            Finalizes the style.
            </summary>
            <param name="workbook"></param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductFamilyDocumentBuilder">
            <summary>
            Defines Operations for building documents based on a <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/>.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyDocumentBuilder.Build(UL.Aria.Service.Domain.Entity.ProductFamily,UL.Aria.Service.Domain.Entity.ProfileBo,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping})">
            <summary>
            Builds the specified product family.
            </summary>
            <param name="productFamily">The product family.</param>
            <param name="creatingUser">The creating user.</param>
            <param name="baseCharacteristics">The base characteristics.</param>
            <param name="variableCharacteristics">The variable characteristics.</param>
            <param name="sourceAndDependentCharacteristics">The source and dependent characteristics.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyDocumentBuilder.Build(System.IO.Stream,UL.Aria.Service.Domain.Entity.ProductFamily,UL.Aria.Service.Domain.Entity.ProfileBo,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping})">
            <summary>
            Builds the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="productFamily">The product family.</param>
            <param name="creatingUser">The creating user.</param>
            <param name="baseCharacteristics">The base characteristics.</param>
            <param name="variableCharacteristics">The variable characteristics.</param>
            <param name="sourceAndDependentCharacteristics">The source and dependent characteristics.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderBase.Build(UL.Aria.Service.Domain.Entity.ProductFamily,UL.Aria.Service.Domain.Entity.ProfileBo,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping})">
            <summary>
            Builds the specified product family.
            </summary>
            <param name="productFamily">The product family.</param>
            <param name="creatingUser">The creating user.</param>
            <param name="baseCharacteristics">The base characteristics.</param>
            <param name="variableCharacteristics">The variable characteristics.</param>
            <param name="sourceAndDependentCharacteristics">The source and dependent characteristics.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderBase.Build(System.IO.Stream,UL.Aria.Service.Domain.Entity.ProductFamily,UL.Aria.Service.Domain.Entity.ProfileBo,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping})">
            <summary>
            Builds the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="productFamily">The product family.</param>
            <param name="creatingUser">The creating user.</param>
            <param name="baseCharacteristics">The base characteristics.</param>
            <param name="variableCharacteristics">The variable characteristics.</param>
            <param name="sourceAndDependentCharacteristics">The source and dependent characteristics.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderBase.AddProductFamily(Aspose.Cells.Workbook,UL.Aria.Service.Domain.Entity.ProductFamily,UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
                Adds the product family.
            </summary>
            <param name="workbook"></param>
            <param name="productFamily">The product family.</param>
            <param name="creatingUser"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderBase.AddBaseCharacteristics(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Adds the base characteristics.
            </summary>
            <param name="workbook"></param>
            <param name="characteristics"></param>
            <param name="familyToAddTo"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderBase.AddOtherCharacteristics(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Adds the other character istics.
            </summary>
            <param name="workbook"></param>
            <param name="characteristics"></param>
            <param name="familyToAddTo"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderBase.AddDependencies(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Adds the dependencies.
            </summary>
            <param name="workbook"></param>
            <param name="dependencies"></param>
            <param name="familyToAddto"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyMultiTemplateBuilder.#ctor(UL.Aria.Service.Provider.IProductMetaDataProvider,UL.Aria.Service.Provider.IProductFamilyFeatureProvider,UL.Aria.Service.Provider.IValidationBuilder,UL.Aria.Service.Provider.IValidationBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProductFamilyMultiTemplateBuilder"/> class.
            </summary>
            <param name="productMetaDataProvider">The product meta data provider.</param>
            <param name="featureProvider">The feature provider.</param>
            <param name="unitOfMeasurevalidationBuilder">The unit of measure builder.</param>
            <param name="valueTypeValidationBuilder">The familyId type validation builder.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyMultiTemplateBuilder.FinalizeStyle(Aspose.Cells.Workbook)">
            <summary>
                Finalizes the style.
            </summary>
            <param name="workbook"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyMultiTemplateBuilder.AddProductFamily(Aspose.Cells.Workbook,UL.Aria.Service.Domain.Entity.ProductFamily,UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
                Adds the product family.
            </summary>
            <param name="workbook"></param>
            <param name="productFamily">The product family.</param>
            <param name="creatingUser"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyMultiTemplateBuilder.AddBaseCharacteristics(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Adds the base characteristics.
            </summary>
            <param name="workbook"></param>
            <param name="characteristics"></param>
            <param name="familyToAddTo"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyMultiTemplateBuilder.AddOtherCharacteristics(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Adds the other character istics.
            </summary>
            <param name="workbook"></param>
            <param name="characteristics"></param>
            <param name="familyToAddTo"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyMultiTemplateBuilder.AddDependencies(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Adds the dependencies.
            </summary>
            <param name="workbook"></param>
            <param name="dependencies"></param>
            <param name="familyToAddto"></param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProjectDocumentBuilder">
            <summary>
            Implements operations for building documents from <see cref="T:UL.Aria.Service.Domain.Entity.Project"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectDocumentBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProjectDocumentBuilder"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectDocumentBuilder.#ctor(System.Collections.Generic.IEnumerable{UL.Aria.Service.Provider.IProjectDocumentSectionBuilder})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProjectDocumentBuilder"/> class.
            </summary>
            <param name="sectionBuilders">The section builders.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProjectDocumentBuilder.Build(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
            Builds the specified project.
            </summary>
            <param name="project">The project.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy">
            <summary>
                Class AriaContentServiceProxy
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.Proxy.IAriaContentServiceProxy">
            <summary>
                Interface IAriaContentService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.IAriaContentServiceProxy.CreateContainer(System.String,System.String)">
            <summary>
                Creates the container.
            </summary>
            <param name="container">The container.</param>
            <param name="metaData">The meta data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.IAriaContentServiceProxy.CreateAsset(System.String,System.String,System.String,System.IO.Stream)">
            <summary>
                Creates the asset.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="assetId">The asset id.</param>
            <param name="streamType">Type of the stream.</param>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.IAriaContentServiceProxy.UpdateAsset(System.String,System.String,System.IO.Stream)">
            <summary>
                Updates the asset.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="streamType">Type of the stream.</param>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.IAriaContentServiceProxy.FetchAsset(System.String,System.String)">
            <summary>
                Fetches the asset.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="streamType">Type of the stream.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.IAriaContentServiceProxy.UpdateContainer(System.String,System.String)">
            <summary>
                Updates the container.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="metaData">The meta data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.IAriaContentServiceProxy.FetchAssetMetadata(System.String)">
            <summary>
                Fetches the asset metadata.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>IDictionary{System.StringSystem.String}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.#ctor(System.ServiceModel.ChannelFactory{UL.Aria.Service.Contracts.Service.IAriaContentService})">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy"/> class.
            </summary>
            <param name="serviceProxyFactory">The service proxy factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.#ctor(UL.Aria.Service.Provider.Proxy.IProxyConfigurationSource)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy"/> class.
            </summary>
            <param name="serviceProxyFactory">The service proxy factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.DeleteContainer(System.String)">
            <summary>
                Deletes the container.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>
                <c>true</c> if XXXX, <c>false</c> otherwise
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.DeleteAsset(System.String)">
            <summary>
                Deletes the asset.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>
                <c>true</c> if XXXX, <c>false</c> otherwise
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.CreateAssetLink(System.String,System.String)">
            <summary>
                Creates the asse link.
            </summary>
            <param name="parentId">The parent id.</param>
            <param name="assetId">The asset id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.FetchParentAssetLinks(System.String)">
            <summary>
                Fetches the parent asset links.
            </summary>
            <param name="parentId">The parent id.</param>
            <returns>IEnumerable{System.String}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.FetchAssetLinks(System.String)">
            <summary>
                Fetches the asset links.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>IEnumerable{System.String}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.Ping">
            <summary>
                Pings this instance.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.FetchAllAssets(System.String)">
            <summary>
                Fetches all assets in a container.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IEnumerable{AriaMetaDataItem}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.CreateContainer(UL.Aria.Service.Contracts.Dto.AriaCreateContainerRequestDto)">
            <summary>
                Creates the container.
            </summary>
            <param name="createContainerRequest">The create container request.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.CreateAsset(System.IO.Stream)">
            <summary>
                Creates the asset.
            </summary>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.DeleteAssetLink(System.String,System.String)">
            <summary>
                Deletes the asset link.
            </summary>
            <param name="parentId">The parent id.</param>
            <param name="assetId">The asset id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.FetchAsset(System.String)">
            <summary>
                Fetches the asset.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.UpdateAsset(System.IO.Stream)">
            <summary>
                Updates the asset.
            </summary>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.UpdateContainer(UL.Aria.Service.Contracts.Dto.AriaUpdateContainerRequestDto)">
            <summary>
                Updates the container.
            </summary>
            <param name="updateContainerRequest">The update container request.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.CreateContainer(System.String,System.String)">
            <summary>
                Creates the container.
            </summary>
            <param name="container">The container.</param>
            <param name="metaData">The meta data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.UpdateContainer(System.String,System.String)">
            <summary>
                Updates the container.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="metaData">The meta data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.CreateAsset(System.String,System.String,System.String,System.IO.Stream)">
            <summary>
                Creates the asset.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="assetId">The asset id.</param>
            <param name="streamType">Type of the stream.</param>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.UpdateAsset(System.String,System.String,System.IO.Stream)">
            <summary>
                Updates the asset.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="streamType">Type of the stream.</param>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.FetchAsset(System.String,System.String)">
            <summary>
                Fetches the asset.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="streamType">Type of the stream.</param>
            <returns>Stream.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.FetchAssetMetadata(System.String)">
            <summary>
                Fetches the asset metadata.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>IDictionary{System.StringSystem.String}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.FetchMultipleParentAssetLinks(System.String[])">
            <summary>
                Fetches the multiple parent asset links.
            </summary>
            <param name="parentIds">The parent ids.</param>
            <returns>IEnumerable{AriaMetaDataLinkDto}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.AriaContentServiceProxy.SaveAssets(System.Collections.Generic.IEnumerable{UL.Aria.Service.Contracts.Dto.AriaAsset})">
            <summary>
                Saves the assets.
            </summary>
            <param name="assets">The assets.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.Proxy.IProxyConfigurationSource">
            <summary>
                An interface to allow for the injection of a proxies EndPoint i.e. http://localhost:807/ProfileService
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.Proxy.IProxyConfigurationSource.AriaTaskServiceEndPoint">
            <summary>
                Gets or sets the aria task service end point.
            </summary>
            <value>The aria task service end point.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.Proxy.IProxyConfigurationSource.AriaContentServiceEndPoint">
            <summary>
                Gets or sets the aria content service end point.
            </summary>
            <value>The aria content service end point.</value>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITaskProvider">
            <summary>
                Interface ITaskProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchByProject(System.Guid)">
            <summary>
            Fetches the by project.
            </summary>
            <param name="projectId">The project identifier.</param>
            <returns>Project.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchAll(System.Guid)">
            <summary>
                Fetches all.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{Task}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchAllFlatList(System.Guid)">
            <summary>
                Fetches all keeping in flat list format, not tree with SubTasks.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{Task}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.PendingTasks(System.Guid)">
            <summary>
            Determines if the container has pending tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchAllWithDeleted(System.Guid)">
            <summary>
                Fetches all.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{Task}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchLookups(System.Guid)">
            <summary>
            Fetches the task lookup list for the specified container.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchById(System.Guid,System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="id">The id.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchTaskOnly(System.Guid,System.Guid)">
            <summary>
            Fetches the task only.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="id">The identifier.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.Create(System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
                Creates the specified container id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="task">The task.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
                Updates the specified container id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="task">The task.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.BulkUpdate(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Updates a list of tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.Delete(System.Guid,System.Guid)">
            <summary>
                Deletes the specified container id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.BulkCreate(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
                Bulks the create.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchHistory(System.Guid,System.Guid)">
            <summary>
                Fetches the history.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="taskId">The task id.</param>
            <returns>IList{TaskHistory}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchMultipleContainerTasks(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
                Fetches the multiple container tasks.
            </summary>
            <param name="containerIds">The container ids.</param>
            <returns>IList{TaskContainer}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchDeltaHistory(System.Guid,System.Guid)">
            <summary>
            Fetches the delta history.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchCount(System.Guid)">
            <summary>
            Fetches the count of tasks for the container.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITaskProvider.FetchPredecessorsByProject(System.Guid)">
            <summary>
            Fetches the predecessors by project.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IContainerProvider">
            <summary>
                Interface IContainerProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IContainerProvider.Create(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Creates the specified container.
            </summary>
            <param name="container">The container.</param>
            <returns>Guid.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.IContainerProvider.Update(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Updates the specified container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IContainerProvider.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IContainerProvider.GetByCompanyId(System.Guid)">
            <summary>
                Gets the by company id.
            </summary>
            <param name="companyId">The company id.</param>
            <returns>IEnumerable{Container}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IContainerProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified container id.
            </summary>
            <param name="containerId">The container id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IContainerProvider.DeleteList(System.Guid,System.String)">
            <summary>
            Deletes the list.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IContainerProvider.FetchByPrimarySearchEntityId(System.Guid)">
            <summary>
            Fetches the by primary search entity identifier.
            </summary>
            <param name="primarySearchEntityId">The primary search entity identifier.</param>
            <returns>Container.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductUploadDocumentCharacteristicProvider">
            <summary>
            Defines operations for mananging document characteristics.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductUploadDocumentCharacteristicProvider.FillCharacteristics(System.Guid,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload},System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ContainerImportFile})">
            <summary>
            Fills the characteristic.
            </summary>
            <param name="containerId"></param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles">The scratch files.</param>
            <param name="externalDocuments">The external documents.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductUploadDocumentCharacteristicProvider.FillCharacteristic(System.Guid,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload},System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ContainerImportFile},UL.Aria.Service.Domain.Entity.ProductCharacteristic,System.Collections.Generic.IList{UL.Aria.Service.Domain.Search.SearchResult})">
            <summary>
            Fills the characteristic.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles">The scratch files.</param>
            <param name="externalDocuments">The external documents.</param>
            <param name="productCharacteristic">The product characteristic.</param>
            <param name="results"></param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IContainerSerializer">
            <summary>
                Interface IContainerSerializer
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IContainerSerializer.Serialize(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Serializes the specified container.
            </summary>
            <param name="container">The container.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductUploadFamilyCharacteristicProvider">
            <summary>
            Defines operations for locating <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity"/> data for a <see cref="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductUploadFamilyCharacteristicProvider.FillCharacteristic(System.Guid,UL.Aria.Service.Domain.Entity.ProductCharacteristic,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload})">
            <summary>
            Fills the characteristic.
            </summary>
            <param name="familyId"></param>
            <param name="characteristic">The characteristic.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductUploadFamilyCharacteristicProvider.GetProductFamilyCharacteristics(System.Guid)">
            <summary>
            Gets the product family characteristics.
            </summary>
            <param name="familyId">The family id.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.OrderProvider">
            <summary>
                Class OrderProvider
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IOrderProvider">
            <summary>
                Interface IOrderProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderProvider.Create(System.String,System.String)">
            <summary>
            Creates the specified new order.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="orderXml">The new order.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderProvider.Update(System.String,System.String)">
            <summary>
            Updates the specified order id.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="orderXml">The order.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified <see cref="T:UL.Aria.Service.Domain.Entity.Order"/>.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderProvider.FindById(System.Guid)">
            <summary>
                Finds the <see cref="T:UL.Aria.Service.Domain.Entity.Order"/> by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderProvider.FindByOrderNumber(System.String)">
            <summary>
                Finds the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>Order.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IOrderProvider.FindOrderLookups">
            <summary>
            Fetches the order lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderProvider.#ctor(UL.Aria.Service.Repository.IOrderRepository,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IAssetProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Parser.IXmlParser,UL.Aria.Service.Provider.ICompanyProvider,UL.Aria.Common.Authorization.IAuthorizationManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.OrderProvider"/> class.
            </summary>
            <param name="orderRepository">The order repository.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="assetProvider">The content repository.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="incomingOrderParser">The incoming order parser.</param>
            <param name="companyProvider">The company provider.</param>
            <param name="authorizationManager">The authorization manager.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderProvider.Create(System.String,System.String)">
            <summary>
            Creates the specified new order.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="orderXml">The new order.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderProvider.Update(System.String,System.String)">
            <summary>
            Updates the specified order.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="orderXml">The order.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified <see cref="T:UL.Aria.Service.Domain.Entity.Order"/>.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderProvider.FindById(System.Guid)">
            <summary>
                Finds the <see cref="T:UL.Aria.Service.Domain.Entity.Order"/> by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderProvider.FindByOrderNumber(System.String)">
            <summary>
                Finds the <see cref="T:UL.Aria.Service.Domain.Entity.Order"/> by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.OrderProvider.FindOrderLookups">
            <summary>
            Fetches the order lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductDocumentBuilder">
            <summary>
            Defines operations for building documents based on a product.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductDocumentBuilder.Build(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Product},UL.Aria.Service.Domain.Entity.ProductFamily,UL.Aria.Service.Domain.Entity.ProfileBo,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping})">
            <summary>
            Builds the specified product family.
            </summary>
            <param name="products"></param>
            <param name="productFamily">The product family.</param>
            <param name="creatingUser">The creating user.</param>
            <param name="baseCharacteristics">The base characteristics.</param>
            <param name="variableCharacteristics">The variable characteristics.</param>
            <param name="dependencyMapping"></param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductFamilyDocumentBuilderLocator">
            <summary>
            Defines a Locator for <see cref="T:UL.Aria.Service.Provider.IProductFamilyDocumentBuilder"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyDocumentBuilderLocator.Resolve(System.String)">
            <summary>
            Resolves the entity.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ISmtpClientProvider">
            <summary>
            contract for Smtp Client Provider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ISmtpClientProvider.Send(System.Net.Mail.MailMessage,System.String@)">
            <summary>
            Sends the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="errorMessage"></param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ITermsAndConditionsProvider">
            <summary>
            contract that defines the delegation of to the repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITermsAndConditionsProvider.FindByType(UL.Aria.Service.Domain.Entity.TermsAndConditionsType)">
            <summary>
            Finds all.
            </summary>
            <param name="conditionsType">Type of the conditions.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ITermsAndConditionsProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by id.
            </summary>
            <param name="id">The GUID.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductDocumentBuilder">
            <summary>
            Implements operations for building documents based on a product.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductTemplateBuilder">
            <summary>
            Implements operations for building a Product template based on a given <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductTemplateBuilder.AddProductFamily(Aspose.Cells.Workbook,UL.Aria.Service.Domain.Entity.ProductFamily,UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
            Adds the product family.
            </summary>
            <param name="workbook"></param>
            <param name="productFamily">The product family.</param>
            <param name="creatingUser"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductTemplateBuilder.AddBaseCharacteristics(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
            Adds the base characteristics.
            </summary>
            <param name="workbook"></param>
            <param name="characteristics"></param>
            <param name="familyToAddTo"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductTemplateBuilder.AddOtherCharacteristics(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
            Adds the other character istics.
            </summary>
            <param name="workbook"></param>
            <param name="characteristics"></param>
            <param name="familyToAddTo"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductTemplateBuilder.AddDependencies(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
            Adds the dependencies.
            </summary>
            <param name="workbook"></param>
            <param name="dependencies"></param>
            <param name="familyToAddto"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductTemplateBuilder.FinalizeStyle(Aspose.Cells.Workbook)">
            <summary>
            Finalizes the style.
            </summary>
            <param name="workbook"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductTemplateBuilder.FinalizeSheetStyle(Aspose.Cells.Worksheet)">
            <summary>
            Finalizes the sheet style.
            </summary>
            <param name="worksheet">The worksheet.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductTemplateBuilder.CharacteristicTypeComparer.Compare(UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x"/> and <paramref name="y"/>, as shown in the following table.Value Meaning Less than zero<paramref name="x"/> is less than <paramref name="y"/>.Zero<paramref name="x"/> equals <paramref name="y"/>.Greater than zero<paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
            <param name="x">The first object to compare.</param><param name="y">The second object to compare.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductDocumentBuilder.Build(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Product},UL.Aria.Service.Domain.Entity.ProductFamily,UL.Aria.Service.Domain.Entity.ProfileBo,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping})">
            <summary>
            Builds the specified product family.
            </summary>
            <param name="products"></param>
            <param name="productFamily">The product family.</param>
            <param name="creatingUser">The creating user.</param>
            <param name="baseCharacteristics">The base characteristics.</param>
            <param name="variableCharacteristics">The variable characteristics.</param>
            <param name="dependencyMapping"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductDocumentBuilder.FinalizeSheetStyle(Aspose.Cells.Worksheet)">
            <summary>
            Finalizes the sheet style.
            </summary>
            <param name="worksheet">The worksheet.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderLocator">
            <summary>
            Locator for <see cref="T:UL.Aria.Service.Provider.IProductFamilyDocumentBuilder"/>
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderLocator._container">
            <summary>
                The _container
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderLocator.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderLocator"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyDocumentBuilderLocator.Resolve(System.String)">
            <summary>
            Resolves the entity.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductFamilyTemplateBuilder">
            <summary>
                Implements operations for building documents based on a <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/>.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyTemplateBuilder.#ctor(UL.Aria.Service.Provider.IProductMetaDataProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProductFamilyTemplateBuilder"/> class.
            </summary>
            <param name="productMetaDataProvider">The product meta data provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyTemplateBuilder.AddProductFamily(Aspose.Cells.Workbook,UL.Aria.Service.Domain.Entity.ProductFamily,UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
                Adds the product family.
            </summary>
            <param name="workbook"></param>
            <param name="productFamily">The product family.</param>
            <param name="creatingUser"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyTemplateBuilder.AddBaseCharacteristics(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Adds the base characteristics.
            </summary>
            <param name="workbook"></param>
            <param name="characteristics"></param>
            <param name="familyToAddTo"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyTemplateBuilder.AddOtherCharacteristics(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Adds the other character istics.
            </summary>
            <param name="workbook"></param>
            <param name="characteristics"></param>
            <param name="familyToAddTo"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyTemplateBuilder.AddDependencies(Aspose.Cells.Workbook,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependencyMapping},UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Adds the dependencies.
            </summary>
            <param name="workbook"></param>
            <param name="dependencies"></param>
            <param name="familyToAddto"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyTemplateBuilder.FinalizeStyle(Aspose.Cells.Workbook)">
            <summary>
            Finalizes the style.
            </summary>
            <param name="workbook"></param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductMetaDataProvider">
            <summary>
            Defines Operations for returning metadata about products.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductMetaDataProvider.GetCharacteristicDataTypes">
            <summary>
            Gets the characteristic data types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductMetaDataProvider.GetScopes">
            <summary>
            Gets the scopes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductMetaDataProvider.GetUnitsOfMeasure">
            <summary>
            Gets the units of measure.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductMetaDataProvider.GetCharacteristicTypes">
            <summary>
            Gets the type of the characteristic.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductMetaDataProviderStub">
            <summary>
            Implements a stub .
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductMetaDataProviderStub.GetCharacteristicDataTypes">
            <summary>
            Gets the characteristic data types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductMetaDataProviderStub.GetScopes">
            <summary>
            Gets the scopes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductMetaDataProviderStub.GetUnitsOfMeasure">
            <summary>
            Gets the units of measure.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductMetaDataProviderStub.GetCharacteristicTypes">
            <summary>
            Gets the type of the characteristic.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductProvider">
            <summary>
                Product provider.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductProvider">
            <summary>
                Product provider interface.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.Create(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Creates the specified product.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.Create(UL.Aria.Service.Domain.Entity.ProductUploadResult)">
            <summary>
                Creates the specified product upload result.
            </summary>
            <param name="productUploadResult">The product upload result.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.Create(UL.Aria.Service.Domain.Entity.ProductUploadMessage)">
            <summary>
                Creates the specified product upload message.
            </summary>
            <param name="productUploadMessage">The product upload message.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.Update(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Updates the specified product.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.Update(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Updates the specified product upload.
            </summary>
            <param name="productUpload">The product upload.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.Get(System.Guid)">
            <summary>
                Gets the specified product id.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.GetByProductFamilyId(System.Guid)">
            <summary>
                Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.Upload(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Uploads the specified file.
            </summary>
            <param name="productUpload">The product upload.</param>
            <returns>Confirmation Id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.FetchProductUploadNextForProcessing">
            <summary>
            Fetches the next available <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/> for processing.
            </summary>
            <returns>The next <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/>. May return null (will not throw) if there is none.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.FetchByUserId(System.Guid,System.Int64,System.Int64)">
            <summary>
                Fetches the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <param name="rowStartIndex">Start index of the row.</param>
            <param name="rowEndIndex">End index of the row.</param>
            <returns>ProductUploadSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.GetByProductUploadId(System.Guid)">
            <summary>
                Gets the by product upload id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUploadResultSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUpload.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified product id.
            </summary>
            <param name="productId">The product id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.UpdateStatus(System.Guid,UL.Aria.Service.Contracts.Dto.ProductStatus,System.Nullable{System.DateTime})">
            <summary>
            Updates the status.
            </summary>
            <param name="productId">The product id.</param>
            <param name="status">The status.</param>
            <param name="submittedDateTime"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.GetStatus(System.Guid)">
            <summary>
            Gets the status.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.GetProductUploadHeader(System.Guid)">
            <summary>
            Gets the product upload header.
            </summary>
            <param name="productUploadId">The product upload unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductProvider.GetHeader(System.Guid)">
            <summary>
            Gets the header. NON TRANSACTIONAL
            </summary>
            <param name="productId">The product unique identifier.</param>
            <returns>The <see cref="T:UL.Aria.Service.Domain.Entity.Product"/></returns>
            <remarks>NON TRANSACTIONAL</remarks>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.#ctor(UL.Aria.Service.Repository.IProductRepository,UL.Aria.Service.Repository.IProductUploadRepository,UL.Aria.Service.Repository.IProductUploadResultRepository,UL.Aria.Service.Repository.IProductUploadMessageRepository)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProductProvider"/> class.
            </summary>
            <param name="productRepository">The product repository.</param>
            <param name="productUploadRepository">The product upload repository.</param>
            <param name="productUploadResultRepository">The product upload result repository.</param>
            <param name="productUploadMessageRepository">The product upload message repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.Create(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Creates the specified product.
            </summary>
            <param name="product">The product.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.Create(UL.Aria.Service.Domain.Entity.ProductUploadResult)">
            <summary>
                Creates the specified product upload result.
            </summary>
            <param name="productUploadResult">The product upload result.</param>
            <returns>Guid.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.Create(UL.Aria.Service.Domain.Entity.ProductUploadMessage)">
            <summary>
                Creates the specified product upload message.
            </summary>
            <param name="productUploadMessage">The product upload message.</param>
            <returns>Guid.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.Update(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Updates the specified product.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.Update(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Updates the specified product upload.
            </summary>
            <param name="productUpload">The product upload.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.Get(System.Guid)">
            <summary>
                Gets the specified product id.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.GetByProductFamilyId(System.Guid)">
            <summary>
                Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.Upload(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Uploads the specified file.
            </summary>
            <param name="productUpload">The product upload.</param>
            <returns>Confirmation Id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.FetchProductUploadNextForProcessing">
            <summary>
                Fetches the next available <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/> for processing.
            </summary>
            <returns>The next <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/>. May return null (will not throw) if there is none.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.FetchByUserId(System.Guid,System.Int64,System.Int64)">
            <summary>
                Fetches the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <param name="rowStartIndex">Start index of the row.</param>
            <param name="rowEndIndex">End index of the row.</param>
            <returns>ProductUploadSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.GetProductUploadHeader(System.Guid)">
            <summary>
                Gets the product upload header.
            </summary>
            <param name="productUploadId">The product upload unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.GetHeader(System.Guid)">
            <summary>
                Gets the header. NON TRANSACTIONAL
            </summary>
            <param name="productId">The product unique identifier.</param>
            <returns>The <see cref="T:UL.Aria.Service.Domain.Entity.Product"/></returns>
            <remarks>NON TRANSACTIONAL</remarks>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.GetByProductUploadId(System.Guid)">
            <summary>
                Gets the by product upload id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUploadResultSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.GetById(System.Guid)">
            <summary>
                Gets the product upload by id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUpload.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified product id.
            </summary>
            <param name="productId">The product id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.UpdateStatus(System.Guid,UL.Aria.Service.Contracts.Dto.ProductStatus,System.Nullable{System.DateTime})">
            <summary>
                Updates the status.
            </summary>
            <param name="productId">The product id.</param>
            <param name="status">The status.</param>
            <param name="submittedDateTime"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductProvider.GetStatus(System.Guid)">
            <summary>
                Gets the status.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductManager">
            <summary>
                Product Manager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.#ctor(UL.Aria.Service.Provider.IProductProvider,UL.Aria.Service.Manager.IProductDocumentManager,UL.Aria.Service.Manager.ISmtpClientManager,UL.Aria.Common.BusinessMessage.IBusinessMessageProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Provider.ISearchProvider,UL.Aria.Service.Provider.IAssetProvider,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IContainerProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductManager"/> class.
            </summary>
            <param name="productProvider">The product provider.</param>
            <param name="productDocumentManager">The product document manager.</param>
            <param name="smtpClientManager">The SMTP client manager.</param>
            <param name="businessMessageProvider">The business message provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="searchProvider">The search provider.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="containerProvider">The container provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.Create(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Creates the specified product.
            </summary>
            <param name="product">The product.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.Update(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Updates the specified product.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.Get(System.Guid)">
            <summary>
                Gets the specified product by id.
            </summary>
            <param name="productId">The product by id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.GetDownload(System.Guid)">
            <summary>
                Gets the download.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.GetByProductFamilyId(System.Guid)">
            <summary>
                Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.GetProductDownloadByProductFamilyId(System.Guid)">
            <summary>
                Gets the by family download.
            </summary>
            <param name="productFamilyId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.GetProductDownloadByProductUploadId(System.Guid)">
            <summary>
                Gets the product download by product upload id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.Upload(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Uploads the specified file.
            </summary>
            <param name="productUpload">The product upload.</param>
            <returns>Confirmation Id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.FetchByUserId(System.Guid,System.Int64,System.Int64)">
            <summary>
                Fetches the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <param name="rowStartIndex">Start index of the row.</param>
            <param name="rowEndIndex">End index of the row.</param>
            <returns>ProductUploadSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.GetByProductUploadId(System.Guid)">
            <summary>
                Gets the by product upload id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUploadResultSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.GetProductUploadHeader(System.Guid)">
            <summary>
            Gets the product upload header.
            </summary>
            <param name="productUploadId">The product upload unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUpload.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.Delete(System.Guid)">
            <summary>
                Deletes the specified product id.
            </summary>
            <param name="productId">The product id.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductManager.UpdateStatus(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Updates the status.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProjectTemplateKeys">
            <summary>
            Keys for projects
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ProjectsSheetName">
            <summary>
            The projects sheet name
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.TasksSheetName">
            <summary>
            The tasks sheet name
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.LineItemIDsLabel">
            <summary>
            The line item i ds label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ProjectStatusLabel">
            <summary>
            The project status label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.DescriptionLabel">
            <summary>
            The description label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.EndDateLabel">
            <summary>
            The end date label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.CompletionDateLabel">
            <summary>
            The completion date label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.NumberOfSamplesLabel">
            <summary>
            The number of samples label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.CompanyLabel">
            <summary>
            The company label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.SampleReferenceNumbersLabel">
            <summary>
            The sample reference numbers label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.CcnLabel">
            <summary>
            The CCN label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.FileNumberLabel">
            <summary>
            The file number label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.StatusNotesLabel">
            <summary>
            The status notes label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.EstEngineeringEffortHoursLabel">
            <summary>
            The est engineering effort hours label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.EstLabEffortHoursLabel">
            <summary>
            The est lab effort hours label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.EstReviewerEffortHoursLabel">
            <summary>
            The est reviewer effort hours label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.EstimatedTatLabel">
            <summary>
            The estimated tat label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ScopeLabel">
            <summary>
            The scope label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.AssumptionsLabel">
            <summary>
            The assumptions label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.EngineeringOfficeLimitationsLabel">
            <summary>
            The engineering office limitations label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.LaboratoryLimitationsLabel">
            <summary>
            The laboratory limitations label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ComplexityLabel">
            <summary>
            The complexity label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.StandardsLabel">
            <summary>
            The standards label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.InventoryItemCatalogueNosLabel">
            <summary>
            The inventory item catalogue nos label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.InventoryItemNosDescriptionLabel">
            <summary>
            The inventory item nos description label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ProjectTypeLabel">
            <summary>
            The project type label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.QuoteNoLabel">
            <summary>
            The quote no label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.PriceLabel">
            <summary>
            The price label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ExpeditedLabel">
            <summary>
            The expedited label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.AdditionalCriteriaLabel">
            <summary>
            The additional criteria label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.IndustryLabel">
            <summary>
            The industry label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.IndustrySubGroupLabel">
            <summary>
            The industry sub group label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.IndustryCategoryLabel">
            <summary>
            The industry category label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.LocationLabel">
            <summary>
            The location label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ProductGroupLabel">
            <summary>
            The product group label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ProjectTaskTemplateTypeLabel">
            <summary>
            The project task template type label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ProjectHandlerLabel">
            <summary>
            The project handler label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.CustomerPOLabel">
            <summary>
            The customer po label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.OrderTypeLabel">
            <summary>
            The order type label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ServiceDescriptionLabel">
            <summary>
            The service description label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.FileNoLabel">
            <summary>
            The file no label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.CustomerRequestedDateLabel">
            <summary>
            The customer requested date label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.DateBookedLabel">
            <summary>
            The date booked label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.DateOrderedLabel">
            <summary>
            The date ordered label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.LastUpdateDateLabel">
            <summary>
            The last update date label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.OrderStartDateLabel">
            <summary>
            The order start date label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.OracleProjectIDLabel">
            <summary>
            The oracle project identifier label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.OracleProjectNameLabel">
            <summary>
            The oracle project name label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.OracleProjectNumberLabel">
            <summary>
            The oracle project number label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.AssociatedProductIDsLabel">
            <summary>
            The associated product i ds label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.OrderIDLabel">
            <summary>
            The order identifier label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.LineItemIDLabel">
            <summary>
            The line item identifier label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ProjectIDLabel">
            <summary>
            The project identifier label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ProjectNameLabel">
            <summary>
            The project name label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.TaskIDLabel">
            <summary>
            The task identifier label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.TaskNameLabel">
            <summary>
            The task name label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ChildIdsLabel">
            <summary>
            The child ids label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ParentIdLabel">
            <summary>
            The parent identifier label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.PredecessorTasksLabel">
            <summary>
            The predecessor tasks label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.PhaseLabel">
            <summary>
            The phase label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ProgressLabel">
            <summary>
            The progress label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.StartDateLabel">
            <summary>
            The start date label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.DueDateLabel">
            <summary>
            The due date label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.EstimatedDurationHoursLabel">
            <summary>
            The estimated duration hours label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ActualDurationHoursLabel">
            <summary>
            The actual duration hours label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ClientBarrierHoursLabel">
            <summary>
            The client barrier hours label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.PercentCompleteLabel">
            <summary>
            The percent complete label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.TaskOwnerLabel">
            <summary>
            The task owner label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.CommentsLabel">
            <summary>
            The comments label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.CreatedLabel">
            <summary>
            The comments label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.ModifiedLabel">
            <summary>
            The modified label
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.ProjectTemplateKeys.IsDeleted">
            <summary>
            The is deleted
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductUploadDocumentCharacteristicProvider">
            <summary>
            Implements operations for mananging document characteristics.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductUploadDocumentCharacteristicProvider.#ctor(UL.Aria.Service.Provider.IAssetProvider,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProductUploadDocumentCharacteristicProvider"/> class.
            </summary>
            <param name="assetProvider">The asset provider.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductUploadDocumentCharacteristicProvider.FillCharacteristics(System.Guid,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload},System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ContainerImportFile})">
            <summary>
            Fills the characteristic.
            </summary>
            <param name="containerId"></param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles">The scratch files.</param>
            <param name="externalDocuments"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductUploadDocumentCharacteristicProvider.FillCharacteristic(System.Guid,UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload},System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ContainerImportFile},UL.Aria.Service.Domain.Entity.ProductCharacteristic,System.Collections.Generic.IList{UL.Aria.Service.Domain.Search.SearchResult})">
            <summary>
            Fills the characteristic.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="productUploadResult">The product upload result.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles">The scratch files.</param>
            <param name="externalDocuments">The external documents.</param>
            <param name="productCharacteristic">The product characteristic.</param>
            <param name="results"></param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductUploadFamilyCharacteristicProvider">
            <summary>
            Implements operations for locating <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity"/> data for a <see cref="T:UL.Aria.Service.Domain.Entity.ProductCharacteristic"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductUploadFamilyCharacteristicProvider.#ctor(UL.Aria.Service.Provider.IProductFamilyAttributeProvider,UL.Aria.Service.Provider.IProductFamilyFeatureProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProductUploadFamilyCharacteristicProvider"/> class.
            </summary>
            <param name="productFamilyAttributeProvider">The product family attribute provider.</param>
            <param name="productFamilyFeatureProvider">The product family feature provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductUploadFamilyCharacteristicProvider.FillCharacteristic(System.Guid,UL.Aria.Service.Domain.Entity.ProductCharacteristic,System.Collections.Generic.IDictionary{System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity},System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.ScratchFileUpload})">
            <summary>
            Fills the characteristic.
            </summary>
            <param name="familyId"></param>
            <param name="characteristic">The characteristic.</param>
            <param name="cachedCharacteristics">The cached characteristics.</param>
            <param name="scratchFiles"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductUploadFamilyCharacteristicProvider.GetProductFamilyCharacteristics(System.Guid)">
            <summary>
            Gets the product family characteristics.
            </summary>
            <param name="familyId">The family id.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskCategoryProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskCategoryProvider.#ctor(UL.Aria.Service.Repository.ITaskCategoryRepository,UL.Aria.Common.BusinessMessage.IBusinessMessageProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TaskCategoryProvider"/> class.
            </summary>
            <param name="taskCategoryRepository">The task template repository.</param>
            <param name="businessMessageProvider">The business message provider.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskCategoryProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskCategoryProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskCategoryProvider.Create(UL.Aria.Service.Domain.Entity.TaskCategory)">
            <summary>
            Creates the specified task template.
            </summary>
            <param name="taskTemplate">The task template.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskCategoryProvider.Update(UL.Aria.Service.Domain.Entity.TaskCategory)">
            <summary>
            Updates the specified task template.
            </summary>
            <param name="taskTemplate">The task template.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskCategoryProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskCategoryProvider.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskCategoryProvider.FetchActiveById(System.Guid)">
            <summary>
            Fetches the active by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskTemplateProvider">
            <summary>
            Provider implementation for Task Templates.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTemplateProvider.#ctor(UL.Aria.Service.Repository.ITaskTemplateRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TaskTemplateProvider"/> class.
            </summary>
            <param name="taskTemplateRepository">The task template repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTemplateProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTemplateProvider.FetchTaskTemplateByProjectTemplate(System.Guid,System.Boolean)">
            <summary>
            Fetches the task template by project template.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="flatten">if set to <c>true</c> [flatten].</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTemplateProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified task template identifier.
            </summary>
            <param name="taskTemplateId">The task template identifier.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTemplateProvider.Create(UL.Aria.Service.Domain.Entity.TaskTemplate)">
            <summary>
            Creates the specified task template.
            </summary>
            <param name="taskTemplate">The task template.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTemplateProvider.Update(UL.Aria.Service.Domain.Entity.TaskTemplate)">
            <summary>
            Updates the specified task template.
            </summary>
            <param name="taskTemplate">The task template.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTemplateProvider.UpdateBulk(System.Guid,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskTemplate})">
            <summary>
            Updates the templates in bulk.
            </summary>
            <param name="projectTemplateId"></param>
            <param name="taskTemplates">The task templates.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskTypeProvider">
            <summary>
            Class TaskTypeProvider.
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.TaskTypeProvider._taskTypeRepository">
            <summary>
            The _task type repository
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.TaskTypeProvider._principalResolver">
            <summary>
            The _principal resolver
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeProvider.#ctor(UL.Aria.Service.Repository.ITaskTypeRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Provider.ILinkProvider,UL.Aria.Service.Provider.ILookupProvider,UL.Aria.Service.Provider.IDocumentTemplateProvider,UL.Aria.Service.Provider.ITaskTypeNotificationProvider,UL.Aria.Service.Provider.ITaskTypeBehaviorProvider,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TaskTypeProvider"/> class.
            </summary>
            <param name="taskTypeRepository">The task type repository.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="linkProvider">The link provider.</param>
            <param name="lookupProvider">The lookup provider.</param>
            <param name="documentTemplateProvider">The document template provider.</param>
            <param name="taskTypeNotificationProvider">The task type notification provider.</param>
            <param name="taskTypeBehaviorProvider"></param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeProvider.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
            <returns>IEnumerable&lt;Lookup&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeProvider.GetLookups(System.Boolean)">
            <summary>
            Gets the lookups.
            </summary>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeProvider.Fetch(System.Guid,System.Boolean)">
            <summary>
            Fetches the active by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="isDeleted">if set to <c>true</c> [is deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeProvider.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeProvider.Fetch(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>TaskType.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeProvider.Update(System.Guid,UL.Aria.Service.Domain.TaskType)">
            <summary>
            Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="entity">The unit of measure.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskTypeProvider.Create(UL.Aria.Service.Domain.TaskType)">
            <summary>
            Creates the specified industry code.
            </summary>
            <param name="entity">The industry code.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.TextExportExtensions">
            <summary>
            Static class with helpers for writing to text for export.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TextExportExtensions.WriteValue(System.IO.StreamWriter,System.Object)">
            <summary>
            Writes the value.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.UnitOfMeasureValidationBuilder">
            <summary>
            Implements operations for injecting unit of measure validators into worksheet.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.UnitOfMeasureValidationBuilder.#ctor(UL.Aria.Service.Provider.IUnitOfMeasureProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.UnitOfMeasureValidationBuilder"/> class.
            </summary>
            <param name="unitOfMeasureProvider">The unit of measure provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.UnitOfMeasureValidationBuilder.AddValidationValues(Aspose.Cells.Worksheet)">
            <summary>
            Adds the validation values.
            </summary>
            <param name="validationWorksheet">The validation worksheet.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.WorkbookExtensions.AddTwoPlusTwoColumn(Aspose.Cells.Cell,System.String,System.String)">
            <summary>
            Adds the label and value two column.
            </summary>
            <param name="lastCell">The last cell.</param>
            <param name="label">The label.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.WorkbookExtensions.AddTwoColumn(Aspose.Cells.Cell,System.String,System.String,System.Boolean)">
            <summary>
            Adds the label and value two column.
            </summary>
            <param name="lastCell">The last cell.</param>
            <param name="label">The label.</param>
            <param name="value">The value.</param>
            <param name="isFirst">if set to <c>true</c> [is first].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.WorkbookExtensions.StartTwoPlusTwoColumn(Aspose.Cells.Cell,System.String,System.String)">
            <summary>
            Starts the label and value two plus two column.
            </summary>
            <param name="startCell">The start cell.</param>
            <param name="label">The label.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.WorkbookExtensions.AddTableValue(Aspose.Cells.Cell,System.String,System.Boolean)">
            <summary>
            Adds the value.
            </summary>
            <param name="lastCell">The last cell.</param>
            <param name="label">The label.</param>
            <param name="isFirst">if set to <c>true</c> [is first].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.WorkbookExtensions.ToYesNo(System.Boolean)">
            <summary>
            To the yes no.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.WorkbookExtensions.FromYesNo(System.String)">
            <summary>
            Froms the yes no.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.WorkbookExtensions.FindLastFilledRow(Aspose.Cells.Worksheet)">
            <summary>
            Finds the last filled row.
            </summary>
            <param name="worksheet">The worksheet.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.Proxy.ProxyConfigurationSource">
            <summary>
                Will provide URIs for all service enpoints for proxy classes use.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.Proxy.ProxyConfigurationSource.#ctor(UL.Aria.Service.Provider.ISharepointConfigurationSource)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.Proxy.ProxyConfigurationSource"/> class.
            </summary>
            <param name="sharepointConfigurationSource">The sharepoint configuration source.</param>
        </member>
        <member name="P:UL.Aria.Service.Provider.Proxy.ProxyConfigurationSource.AriaTaskServiceEndPoint">
            <summary>
                Gets or sets the task service end point.
            </summary>
            <value>The task service end point.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.Proxy.ProxyConfigurationSource.AriaContentServiceEndPoint">
            <summary>
                Gets or sets the aria content service end point.
            </summary>
            <value>The aria content service end point.</value>
        </member>
        <member name="T:UL.Aria.Service.Provider.SharePointContainerSerializer">
            <summary>
                Class SharePointContainerSerializer
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.SharePointContainerSerializer.templateVersion">
            <summary>
                The template version
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SharePointContainerSerializer.Serialize(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Serializes the specified container.
            </summary>
            <param name="container">The container.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.TaskProvider">
            <summary>
                Class TaskProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.#ctor(UL.Aria.Service.Repository.ITaskRepository,UL.Aria.Service.Repository.IContainerRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Provider.IHistoryProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Provider.EntityHistoryStrategy.IEntityHistoryStrategyResolver,UL.Aria.Service.Repository.IProjectRepository,UL.Aria.Service.Provider.ITaskNotificationProvider,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.ITaskTypeBehaviorProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TaskProvider"/> class.
            </summary>
            <param name="taskRepository">The task repository.</param>
            <param name="containerRepository">The container repository.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="historyProvider">The history provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="entityHistoryStrategyResolver">The entity history strategy resolver.</param>
            <param name="projectRepository">The project repository.</param>
            <param name="taskNotificationProvider">The task notification provider.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="taskTypeBehaviorProvider">The task type behavior provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchByProject(System.Guid)">
            <summary>
            Fetches the project by id.
            </summary>
            <param name="projectId">The project identifier.</param>
            <returns>Project.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchAll(System.Guid)">
            <summary>
                Fetches all.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{Task}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchAllFlatList(System.Guid)">
            <summary>
                Fetches all keeping in flat list format, not tree with SubTasks.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>IList{Task}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.PendingTasks(System.Guid)">
            <summary>
            Determines if the container has pending tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchLookups(System.Guid)">
            <summary>
            Fetches the task lookup list for the specified container.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchAllWithDeleted(System.Guid)">
            <summary>
            Fetches all, including deleted tasks.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>
            IList{Task}.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchById(System.Guid,System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="id">The id.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchTaskOnly(System.Guid,System.Guid)">
            <summary>
            Fetches the task only.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="id">The identifier.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.Create(System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
                Creates the specified container id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="task">The task.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.Task)">
            <summary>
                Updates the specified container id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="task">The task.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.BulkUpdate(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Updates a list of tasks.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.Delete(System.Guid,System.Guid)">
            <summary>
                Deletes the specified container id.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.BulkCreate(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
                Bulks the create.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchHistory(System.Guid,System.Guid)">
            <summary>
                Fetches the history.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="taskId">The task id.</param>
            <returns>IList{TaskHistory}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchDeltaHistory(System.Guid,System.Guid)">
            <summary>
            Fetches the history.
            </summary>
            <param name="containerId">The container identifier.</param>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchCount(System.Guid)">
            <summary>
            Fetches the count of tasks for the container.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchMultipleContainerTasks(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
                Fetches the multiple container tasks.
            </summary>
            <param name="containerIds">The container ids.</param>
            <returns>IList{TaskContainer}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TaskProvider.FetchPredecessorsByProject(System.Guid)">
            <summary>
            Fetches the predecessors by project.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Proxy.CertificationRequestServiceProxy">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CertificationRequestServiceProxy.#ctor(UL.Aria.Service.Proxy.ICertificationRequestServiceConfigurationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Proxy.CertificationRequestServiceProxy"/> class.
            </summary>
            <param name="configurationSource">The configuration source.</param>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CertificationRequestServiceProxy.#ctor(UL.Aria.Service.Proxy.ICertificationRequestServiceConfigurationSource,System.ServiceModel.ChannelFactory{UL.Aria.Service.Contracts.Service.ICertificationRequestService})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Proxy.CertificationRequestServiceProxy"/> class.
            </summary>
            <param name="configurationSource">The configuration source.</param>
            <param name="serviceProxyFactory">The service proxy factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CertificationRequestServiceProxy.PublishCertificationRequest(UL.Aria.Service.Contracts.Dto.CertificationRequestDto)">
            <summary>
            Submits a certification request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Proxy.CertificationRequestServiceConfigurationSource">
            <summary>
            Proxy configuration definition.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Proxy.ICertificationRequestServiceConfigurationSource">
            <summary>
            Proxy configuration.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Proxy.ICertificationRequestServiceConfigurationSource.TokenProvider">
            <summary>
            Gets the token provider.
            </summary>
            <value>
            The token provider.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.ICertificationRequestServiceConfigurationSource.CertificationRequestServiceUri">
            <summary>
            Gets or sets the customer party service URI.
            </summary>
            <value>
            The customer party service URI.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.ICertificationRequestServiceConfigurationSource.CertificationRequestServiceBinding">
            <summary>
            Gets or sets the customer party service binding.
            </summary>
            <value>
            The customer party service binding.
            </value>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CertificationRequestServiceConfigurationSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Proxy.CertificationRequestServiceConfigurationSource"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Proxy.CertificationRequestServiceConfigurationSource.TokenProvider">
            <summary>
            Gets the token provider.
            </summary>
            <value>
            The token provider.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.CertificationRequestServiceConfigurationSource.CertificationRequestServiceUri">
            <summary>
            Gets or sets the certification request service URI.
            </summary>
            <value>
            The certification request service URI.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.CertificationRequestServiceConfigurationSource.CertificationRequestServiceBinding">
            <summary>
            Gets or sets the certification request service binding.
            </summary>
            <value>
            The certification request service binding.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Proxy.CustomerPartyProxyConfigurationSource">
            <summary>
            Implementation of proxy configuration.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Proxy.ICustomerPartyProxyConfigurationSource">
            <summary>
            Proxy configuration.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Proxy.ICustomerPartyProxyConfigurationSource.TokenProvider">
            <summary>
            Gets the token provider.
            </summary>
            <value>
            The token provider.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.ICustomerPartyProxyConfigurationSource.CustomerPartyServiceUri">
            <summary>
            Gets or sets the customer party service URI.
            </summary>
            <value>
            The customer party service URI.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.ICustomerPartyProxyConfigurationSource.CustomerPartyServiceBinding">
            <summary>
            Gets or sets the customer party service binding.
            </summary>
            <value>
            The customer party service binding.
            </value>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CustomerPartyProxyConfigurationSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Proxy.CustomerPartyProxyConfigurationSource"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Proxy.CustomerPartyProxyConfigurationSource.TokenProvider">
            <summary>
            Gets the token provider.
            </summary>
            <value>
            The token provider.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.CustomerPartyProxyConfigurationSource.CustomerPartyServiceUri">
            <summary>
            Gets or sets the customer party service URI.
            </summary>
            <value>
            The customer party service URI.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.CustomerPartyProxyConfigurationSource.CustomerPartyServiceBinding">
            <summary>
            Gets or sets the customer party service binding.
            </summary>
            <value>
            The customer party service binding.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Proxy.CustomerPartyServiceProxy">
            <summary>
                Implements a proxy for <see cref="T:UL.Aria.Service.Contracts.Service.IMessageService"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CustomerPartyServiceProxy.#ctor(UL.Aria.Service.Proxy.ICustomerPartyProxyConfigurationSource)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Proxy.MessageServiceProxy"/> class.
            </summary>
            <param name="configurationSource">The configuration source.</param>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CustomerPartyServiceProxy.#ctor(UL.Aria.Service.Proxy.ICustomerPartyProxyConfigurationSource,System.ServiceModel.ChannelFactory{UL.Aria.Service.Contracts.Service.ICustomerPartyService})">
            <summary>
                Prevents a default instance of the <see cref="T:UL.Aria.Service.Proxy.MessageServiceProxy"/> class from being created.
            </summary>
            <param name="configurationSource">The configuration source.</param>
            <param name="serviceProxyFactory">The service proxy factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CustomerPartyServiceProxy.Fetch(System.String)">
            <summary>
                Gets the customer.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CustomerPartyServiceProxy.FetchParties(System.String)">
            <summary>
                Gets the customer.
            </summary>
            <param name="orderNumber">The external identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CustomerPartyServiceProxy.FillContact(UL.Aria.Service.Contracts.Dto.IncomingOrderPartyDto,System.String)">
            <summary>
            Fills the contact.
            </summary>
            <param name="recordToFill">The record to fill.</param>
            <param name="orderNumber">The order number.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Proxy.CustomerPartyServiceProxy.FillParty(UL.Aria.Service.Contracts.Dto.IncomingOrderPartyDto,System.String)">
            <summary>
            Fills the party.
            </summary>
            <param name="recordToFill">The record to fill.</param>
            <param name="orderNumber">The order number.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Proxy.IOutboundDocumentProxyConfigurationSource">
            <summary>
            Interface IOutboundDocumentProxyConfigurationSource
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Proxy.IOutboundDocumentProxyConfigurationSource.TokenProvider">
            <summary>
            Gets the token provider.
            </summary>
            <value>
            The token provider.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.IOutboundDocumentProxyConfigurationSource.OutboundDocumentServiceUri">
            <summary>
            Gets or sets the outbound document service URI.
            </summary>
            <value>The outbound document service URI.</value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.IOutboundDocumentProxyConfigurationSource.OutboundDocumentServiceBinding">
            <summary>
            Gets or sets the outbound document service binding.
            </summary>
            <value>The outbound document service binding.</value>
        </member>
        <member name="T:UL.Aria.Service.Proxy.IOutboundDocumentServiceProxy">
            <summary>
            Interface IOutboundDocumentServiceProxy
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Proxy.IOutboundDocumentServiceProxy.DocumentExists(UL.Aria.Service.Contracts.Dto.OutboundDocumentDto)">
            <summary>
            Documents the exists.
            </summary>
            <param name="outboundDocument">The outbound document.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:UL.Aria.Service.Proxy.IOutboundDocumentServiceProxy.SaveDocument(System.String,System.IO.Stream)">
            <summary>
            Saves the document.
            </summary>
            <param name="metadata">The metadata.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:UL.Aria.Service.Proxy.IProxyConfigurationSource">
            <summary>
            Proxy configuration.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Proxy.IProxyConfigurationSource.MessageServiceBinding">
            <summary>
            Gets or sets the message service binding.
            </summary>
            <value>
            The message service binding.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.IProxyConfigurationSource.MessageServiceUri">
            <summary>
            Gets the message service URI.
            </summary>
            <value>
            The message service URI.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.IProxyConfigurationSource.TokenProvider">
            <summary>
            Gets the token provider.
            </summary>
            <value>
            The token provider.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Proxy.MessageServiceProxy">
            <summary>
                Implements a proxy for <see cref="T:UL.Aria.Service.Contracts.Service.IMessageService"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Proxy.MessageServiceProxy.#ctor(UL.Aria.Service.Proxy.IProxyConfigurationSource,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Proxy.MessageServiceProxy"/> class.
            </summary>
            <param name="configurationSource">The configuration source.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Proxy.MessageServiceProxy.#ctor(UL.Aria.Service.Proxy.IProxyConfigurationSource,System.ServiceModel.ChannelFactory{UL.Aria.Service.Contracts.Service.IMessageService})">
            <summary>
            Prevents a default instance of the <see cref="T:UL.Aria.Service.Proxy.MessageServiceProxy"/> class from being created.
            </summary>
            <param name="configurationSource">The configuration source.</param>
            <param name="serviceProxyFactory">The service proxy factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Proxy.MessageServiceProxy.PublishProjectStatusMessage(UL.Aria.Service.Contracts.Dto.ProjectStatusMessageDto)">
            <summary>
                Publishes the specified unique identifier.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:UL.Aria.Service.Proxy.MessageServiceProxy.Ping">
            <summary>
                Pings the specified message.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:UL.Aria.Service.Proxy.OutboundDocumentProxyConfigurationSource">
            <summary>
            Class OutboundDocumentProxyConfigurationSource.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Proxy.OutboundDocumentProxyConfigurationSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Proxy.OutboundDocumentProxyConfigurationSource"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Proxy.OutboundDocumentProxyConfigurationSource.TokenProvider">
            <summary>
            Gets the token provider.
            </summary>
            <value>
            The token provider.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.OutboundDocumentProxyConfigurationSource.OutboundDocumentServiceUri">
            <summary>
            Gets or sets the outbound document service URI.
            </summary>
            <value>The outbound document service URI.</value>
        </member>
        <member name="P:UL.Aria.Service.Proxy.OutboundDocumentProxyConfigurationSource.OutboundDocumentServiceBinding">
            <summary>
            Gets or sets the outbound document service binding.
            </summary>
            <value>The outbound document service binding.</value>
        </member>
        <member name="T:UL.Aria.Service.Proxy.OutboundDocumentServiceProxy">
            <summary>
            Class OutboundDocumentServiceProxy.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Proxy.OutboundDocumentServiceProxy.#ctor(UL.Aria.Service.Proxy.IOutboundDocumentProxyConfigurationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Proxy.OutboundDocumentServiceProxy"/> class.
            </summary>
            <param name="configurationSource">The configuration source.</param>
        </member>
        <member name="M:UL.Aria.Service.Proxy.OutboundDocumentServiceProxy.DocumentExists(UL.Aria.Service.Contracts.Dto.OutboundDocumentDto)">
            <summary>
            Documents the exists.
            </summary>
            <param name="outboundDocument">The outbound document.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:UL.Aria.Service.Proxy.OutboundDocumentServiceProxy.SaveDocument(System.String,System.IO.Stream)">
            <summary>
            Saves the document.
            </summary>
            <param name="metadata">The metadata.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.AriaMetaDataLinkRepository">
            <summary>
            Class AriaMetaDataLinkRepository.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IAriaMetaDataLinkRepository">
            <summary>
            Interface IAriaMetaDataLinkRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataLinkRepository.FetchAssetLinks(System.Guid)">
            <summary>
            Fetches the asset links.
            </summary>
            <param name="assetId">The asset identifier.</param>
            <returns>IList&lt;MetaDataLink&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataLinkRepository.FetchParentLinks(System.Guid)">
            <summary>
            Fetches the parent links.
            </summary>
            <param name="parentAssetId">The parent asset identifier.</param>
            <returns>IList&lt;MetaDataLink&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataLinkRepository.Delete(System.Guid,System.Guid)">
            <summary>
            Deletes the specified parent asset identifier.
            </summary>
            <param name="parentAssetId">The parent asset identifier.</param>
            <param name="assetId">The asset identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataLinkRepository.Create(System.Guid,System.Guid)">
            <summary>
            Creates the specified parent asset identifier.
            </summary>
            <param name="parentAssetId">The parent asset identifier.</param>
            <param name="assetId">The asset identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataLinkRepository.FetchAssetLinks(System.Guid)">
            <summary>
            Fetches the asset links.
            </summary>
            <param name="assetId">The asset identifier.</param>
            <returns>IList&lt;MetaDataLink&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataLinkRepository.FetchParentLinks(System.Guid)">
            <summary>
            Fetches the parent links.
            </summary>
            <param name="parentAssetId">The parent asset identifier.</param>
            <returns>IList&lt;MetaDataLink&gt;.</returns> 
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataLinkRepository.Delete(System.Guid,System.Guid)">
            <summary>
            Deletes the specified parent asset identifier.
            </summary>
            <param name="parentAssetId">The parent asset identifier.</param>
            <param name="assetId">The asset identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataLinkRepository.Create(System.Guid,System.Guid)">
            <summary>
            Creates the specified parent asset identifier.
            </summary>
            <param name="parentAssetId">The parent asset identifier.</param>
            <param name="assetId">The asset identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.AriaMetaDataRepository">
            <summary>
            Class AriaMetaDataRepository.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IAriaMetaDataRepository">
            <summary>
            Interface IAriaMetaDataRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataRepository.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AriaMetaData.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataRepository.Delete(System.Guid)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataRepository.Create(UL.Aria.Service.Domain.Entity.AriaMetaData)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataRepository.ReCrawlAsset(System.Guid)">
            <summary>
            Res the crawl asset.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataRepository.FetchByParentId(System.Guid)">
            <summary>
            Fetches the by parent identifier.
            </summary>
            <param name="parentAssetId">The parent asset identifier.</param>
            <returns>IList&lt;AriaMetaDataItem&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataRepository.FetchAvailableClaimsByContainerAssetId(System.Guid)">
            <summary>
            Fetches the available claims by container asset identifier.
            </summary>
            <param name="containerAssetId">The container asset identifier.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAriaMetaDataRepository.Update(UL.Aria.Service.Domain.Entity.AriaMetaData)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.AriaMetaDataRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.UL#Aria#Service#Repository#IAriaMetaDataRepository#FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>AriaMetaData.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.UL#Aria#Service#Repository#IAriaMetaDataRepository#Delete(System.Guid)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.UL#Aria#Service#Repository#IAriaMetaDataRepository#Create(UL.Aria.Service.Domain.Entity.AriaMetaData)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.ReCrawlAsset(System.Guid)">
            <summary>
            Res the crawl asset.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.FetchByParentId(System.Guid)">
            <summary>
            Fetches the by parent identifier.
            </summary>
            <param name="parentAssetId">The parent asset identifier.</param>
            <returns>IList&lt;AriaMetaDataItem&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.FetchAvailableClaimsByContainerAssetId(System.Guid)">
            <summary>
            Fetches the available claims by container asset identifier.
            </summary>
            <param name="containerAssetId">The container asset identifier.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.Update(UL.Aria.Service.Domain.Entity.AriaMetaData)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Int32.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.FindAll">
            <summary>
            Finds all.
            </summary>
            <returns>IList&lt;AriaMetaData&gt;.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.FindById(System.Guid)">
            <summary>
            Finds the by identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>AriaMetaData.</returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.Add(UL.Aria.Service.Domain.Entity.AriaMetaData)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaMetaDataRepository.Remove(System.Guid)">
            <summary>
            Removes the specified entity identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.AzureScratchSpaceRepository">
            <summary>
                Implements Azure based storage for scratch space
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IScratchSpaceRepository">
            <summary>
            interface that abstracts the storage medium
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IScratchSpaceRepository.FetchAll(System.Guid)">
            <summary>
            Fetches all.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IScratchSpaceRepository.FetchContent(System.Guid,System.Guid)">
            <summary>
            Fetches the content.
            </summary>
            <param name="userId">The user id.</param>
            <param name="fileId">The file id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IScratchSpaceRepository.PublishContent(System.Guid,System.String,System.IO.Stream)">
            <summary>
            Publishes the content.
            </summary>
            <param name="userId">The user id.</param>
            <param name="fileName">Name of the file.</param>
            <param name="contentStream">The content stream.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IScratchSpaceRepository.Purge(System.Guid,System.Boolean)">
            <summary>
            Purges the specified user's files
            </summary>
            <param name="userid">The userid.</param>
            <param name="forceDelete">True to delete all files regardless of age</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureScratchSpaceRepository.#ctor(UL.Aria.Service.Configuration.IServiceConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.AzureScratchSpaceRepository"/> class.
            </summary>
            <param name="serviceConfiguration">The service configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureScratchSpaceRepository.FetchAll(System.Guid)">
            <summary>
                Fetches all.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureScratchSpaceRepository.FetchContent(System.Guid,System.Guid)">
            <summary>
                Fetches the content.
            </summary>
            <param name="userId">The user id.</param>
            <param name="fileId">The file id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureScratchSpaceRepository.PublishContent(System.Guid,System.String,System.IO.Stream)">
            <summary>
                Publishes the content.
            </summary>
            <param name="userId">The user id.</param>
            <param name="fileName">Name of the file.</param>
            <param name="contentStream">The content stream.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureScratchSpaceRepository.Purge(System.Guid,System.Boolean)">
            <summary>
                Purges the specified user's files
            </summary>
            <param name="userid">The userid.</param>
            <param name="forceDelete">True to delete all files regardless of age</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration">
            <summary>
            Class AzureServiceBusQueueConfiguration.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration.ServiceBusQueue">
            <summary>
            Gets or sets the service bus queue.
            </summary>
            <value>The service bus queue.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration.ServiceBusConnectionString">
            <summary>
            Gets or sets the service bus connection string.
            </summary>
            <value>The service bus connection string.</value>
        </member>
        <member name="T:UL.Aria.Service.Repository.AzureServiceBusQueueRepositoryBase`1">
            <summary>
            Class AzureServiceBusQueueRepositoryBase.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:UL.Aria.Service.Repository.IAzureServiceBusQueueRepository`1">
            <summary>
            Interface IAzureServiceBusQueueRepository
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureServiceBusQueueRepository`1.AddQueueMessage(UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration,`0)">
            <summary>
            Adds the queue message.
            </summary>
            <param name="azureServiceBusQueueConfiguration">The azure service bus queue configuration.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureServiceBusQueueRepository`1.CreateQueue(UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration)">
            <summary>
            Creates the queue.
            </summary>
            <param name="azureServiceBusQueueConfiguration">The azure service bus queue configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureServiceBusQueueRepository`1.PopQueueMessage(UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration)">
            <summary>
            Pops the queue message.
            </summary>
            <param name="azureServiceBusQueueConfiguration">The azure service bus queue configuration.</param>
            <returns>T.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureServiceBusQueueRepository`1.DeleteQueue(UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration)">
            <summary>
            Deletes the queue.
            </summary>
            <param name="azureServiceBusQueueConfiguration">The azure service bus queue configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureServiceBusQueueRepository`1.QueueExists(UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration)">
            <summary>
            Queues the exists.
            </summary>
            <param name="azureServiceBusQueueConfiguration">The azure service bus queue configuration.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureServiceBusQueueRepositoryBase`1.AddQueueMessage(UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration,`0)">
            <summary>
            Adds the queue message.
            </summary>
            <param name="azureServiceBusQueueConfiguration">The azure service bus queue configuration.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureServiceBusQueueRepositoryBase`1.CreateQueue(UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration)">
            <summary>
            Creates the queue.
            </summary>
            <param name="azureServiceBusQueueConfiguration">The azure service bus queue configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureServiceBusQueueRepositoryBase`1.PopQueueMessage(UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration)">
            <summary>
            Pops the queue message. For integration testing purposes only.
            </summary>
            <param name="azureServiceBusQueueConfiguration">The azure service bus queue configuration.</param>
            <returns>T.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureServiceBusQueueRepositoryBase`1.DeleteQueue(UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration)">
            <summary>
            Deletes the queue. For integration testing purposes only.
            </summary>
            <param name="azureServiceBusQueueConfiguration">The azure service bus queue configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureServiceBusQueueRepositoryBase`1.QueueExists(UL.Aria.Service.Repository.AzureServiceBusQueueConfiguration)">
            <summary>
            Queues the exists.
            </summary>
            <param name="azureServiceBusQueueConfiguration">The azure service bus queue configuration.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.AzureStorageBlobInternal">
            <summary>
            Class AzureStorageBlobInternal.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureStorageBlobInternal.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.AzureStorageBlobInternal"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureStorageBlobInternal.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureStorageBlobInternal.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureStorageBlobInternal.Uri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureStorageBlobInternal.HashValue">
            <summary>
            Gets or sets the hash value.
            </summary>
            <value>The hash value.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureStorageBlobInternal.LastModified">
            <summary>
            Gets or sets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureStorageBlobInternal.Stream">
            <summary>
            Gets or sets the stream.
            </summary>
            <value>The stream.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureStorageBlobInternal.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="T:UL.Aria.Service.Repository.AzureBlobStorageConfiguration">
            <summary>
            Class AzureBlobStorageConfiguration.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureBlobStorageConfiguration.StorageConnectionString">
            <summary>
            Gets or sets the storage connection string.
            </summary>
            <value>The storage connection string.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureBlobStorageConfiguration.Container">
            <summary>
            Gets or sets the container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureBlobStorageConfiguration.AzureBlobStorageRepositoryConfigurationSource">
            <summary>
            Gets or sets the azure BLOB storage repository configuration source.
            </summary>
            <value>The azure BLOB storage repository configuration source.</value>
        </member>
        <member name="T:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceBase">
            <summary>
            Class AzureBlobStorageConfigurationSourceBase.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSource">
            <summary>
            Interface IAzureBlobStorageRepositoryConfigurationSource
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSource.ParallelOperationThreadCount">
            <summary>
            Gets the parallel operation thread count.
            </summary>
            <value>The parallel operation thread count.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSource.ServerTimeOut">
            <summary>
            Gets the server time out.
            </summary>
            <value>The server time out.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSource.SingleUploadThresholdInBytes">
            <summary>
            Gets the single upload threshold in bytes.
            </summary>
            <value>The single upload threshold in bytes.</value>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceBase"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceBase.ParallelOperationThreadCountName">
            <summary>
            Gets the name of the parallel operation thread count.
            </summary>
            <value>The name of the parallel operation thread count.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceBase.ServerTimeOutName">
            <summary>
            Gets the name of the server time out.
            </summary>
            <value>The name of the server time out.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceBase.SingleUploadThresholdInBytesName">
            <summary>
            Gets the name of the single upload threshold in bytes.
            </summary>
            <value>The name of the single upload threshold in bytes.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceBase.ParallelOperationThreadCount">
            <summary>
            Gets the parallel operation thread count.
            </summary>
            <value>The parallel operation thread count.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceBase.ServerTimeOut">
            <summary>
            Gets the server time out.
            </summary>
            <value>The server time out.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceBase.SingleUploadThresholdInBytes">
            <summary>
            Gets the single upload threshold in bytes.
            </summary>
            <value>The single upload threshold in bytes.</value>
        </member>
        <member name="T:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceResolver">
            <summary>
            Class AzureBlobStorageRepositoryConfigurationSourceResolver.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSourceResolver">
            <summary>
            Interface IAzureBlobStorageRepositoryConfigurationSourceResolver
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureBlobStorageRepositoryConfigurationSourceResolver.Resolve(System.String)">
            <summary>
            Resolves the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>IAzureBlobStorageRepositoryConfigurationSource.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceResolver.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceResolver"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepositoryConfigurationSourceResolver.Resolve(System.String)">
            <summary>
            Resolves the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>IAzureBlobStorageRepositoryConfigurationSource.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.AzureBlobStorageContainer">
            <summary>
            Class AzureBlobStorageContainer.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.AzureBlobStorageContainer.LastModified">
            <summary>
            Gets or sets the last modified.
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="T:UL.Aria.Service.Repository.AzureBlobStorageHelper">
            <summary>
            Class AzureBlobStorageHelper.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageHelper.GetBlob(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.String)">
            <summary>
            Gets the BLOB.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="blob">The BLOB.</param>
            <returns>CloudBlockBlob.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageHelper.GetBlobContainer(UL.Aria.Service.Repository.AzureBlobStorageConfiguration)">
            <summary>
            Gets the BLOB container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <returns>CloudBlobContainer.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageHelper.GetStorageAccount(UL.Aria.Service.Repository.AzureBlobStorageConfiguration)">
            <summary>
            Gets the storage account.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <returns>CloudStorageAccount.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.AzureBlobStorageRepository">
            <summary>
            Class AzureBlobStorageRepository.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IAzureBlobStorageRepository">
            <summary>
            Interface IAzureBlobStorageRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureBlobStorageRepository.CreateContainer(UL.Aria.Service.Repository.AzureBlobStorageConfiguration)">
            <summary>
            Creates the container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureBlobStorageRepository.FetchContainer(UL.Aria.Service.Repository.AzureBlobStorageConfiguration)">
            <summary>
            Fetches the container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <returns>AzureStorageContainer.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureBlobStorageRepository.DeleteContainer(UL.Aria.Service.Repository.AzureBlobStorageConfiguration)">
            <summary>
            Deletes the container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureBlobStorageRepository.DeleteContainerBlobsByExpireDays(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.Int32)">
            <summary>
            Deletes the container blobs by expire days.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="expireDays">The expire days.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureBlobStorageRepository.Fetch(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.String)">
            <summary>
            Fetches the specified inbound document container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="blobName">Name of the BLOB.</param>
            <returns>AzureStorageBlobInternal.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureBlobStorageRepository.Save(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.Collections.Generic.IDictionary{System.String,System.String},System.String,UL.Aria.Service.Repository.BlobProperties,System.IO.Stream)">
            <summary>
            Saves the specified inbound document container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="metadata">The metadata.</param>
            <param name="blobName">Name of the BLOB.</param>
            <param name="blobProperties">The BLOB properties.</param>
            <param name="stream">The stream.</param>
            <returns>BlobProperties.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureBlobStorageRepository.Delete(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.String)">
            <summary>
            Deletes the specified inbound document container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="blobName">Name of the BLOB.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAzureBlobStorageRepository.Exists(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.String)">
            <summary>
            Existses the specified azure storage configuration.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="blobName">Name of the BLOB.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepository.CreateContainer(UL.Aria.Service.Repository.AzureBlobStorageConfiguration)">
            <summary>
            Creates the container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepository.FetchContainer(UL.Aria.Service.Repository.AzureBlobStorageConfiguration)">
            <summary>
            Fetches the container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <returns>AzureStorageContainer.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepository.DeleteContainer(UL.Aria.Service.Repository.AzureBlobStorageConfiguration)">
            <summary>
            Deletes the container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepository.DeleteContainerBlobsByExpireDays(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.Int32)">
            <summary>
            Deletes the container blobs by expire days.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="expireDays">The expire days.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepository.Fetch(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.String)">
            <summary>
            Fetches the stream.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="blobName">Name of the BLOB.</param>
            <returns>AzureStorageBlobInternal.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepository.Save(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.Collections.Generic.IDictionary{System.String,System.String},System.String,UL.Aria.Service.Repository.BlobProperties,System.IO.Stream)">
            <summary>
            Saves the blob and it's corresponding properties and metadata.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="metadata">The metadata.</param>
            <param name="blobName">Name of the BLOB.</param>
            <param name="blobProperties">The BLOB properties.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepository.Delete(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.String)">
            <summary>
            Deletes the specified inbound message container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="blobName">Name of the BLOB.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AzureBlobStorageRepository.Exists(UL.Aria.Service.Repository.AzureBlobStorageConfiguration,System.String)">
            <summary>
            Existses the specified inbound message container.
            </summary>
            <param name="azureBlobStorageConfiguration">The azure BLOB storage configuration.</param>
            <param name="blobName">Name of the BLOB.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.BlobProperties">
            <summary>
            Class BlobProperties.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.BlobProperties.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.BlobProperties.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.BlobProperties.Uri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="T:UL.Aria.Service.Repository.BusinessUnitAssociationRepository">
            <summary>
            Provides a repository implementation for LinkAssociations.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1">
            <summary>
                Base repository for <see cref="T:UL.Aria.Service.Domain.Entity.TrackedDomainEntity"/>
            </summary>
            <typeparam name="TTrackedDomainEntity">The type of the characteristic.</typeparam>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1"/> class.
            </summary>
            <param name="dbIdFieldName">Name of the db id field.</param>
            <param name="tableName">Name of the base field.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.CreateDataTable">
            <summary>
            Creates the data table.
            </summary>
            <returns>DataTable.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.CreateDataTable(System.String)">
            <summary>
            Creates the data table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns>DataTable.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.CreateTableRow(System.Data.DataTable,`0,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Creates the table row.
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="entity">The entity.</param>
            <param name="isNew">
                if set to <c>true</c> [is new].
            </param>
            <param name="isDirty">
                if set to <c>true</c> [is dirty].
            </param>
            <param name="isDelete">
                if set to <c>true</c> [is delete].
            </param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.AddTableRowFields(`0,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
                Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">
                if set to <c>true</c> [is new].
            </param>
            <param name="isDirty">
                if set to <c>true</c> [is dirty].
            </param>
            <param name="isDelete">
                if set to <c>true</c> [is delete].
            </param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.CreateClaimsParameterTable(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Creates the claims parameter table.
            </summary>
            <param name="claims">The claims.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.InitializeSaveCommand(`0,Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase{`0}.SaveEnum)">
            <summary>
                Initializes the save command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <param name="saveEnum">The save enum.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.InitializeMultiSaveCommand(System.Collections.Generic.IEnumerable{`0},Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase{`0}.SaveEnum)">
            <summary>
            Initializes the multi save command.
            </summary>
            <param name="entities">The entities.</param>
            <param name="db">The database.</param>
            <param name="saveEnum">The save enum.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.Add(`0)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.Update(`0)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.Update(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Updates the collection of entities.
            </summary>
            <param name="entities">The entities.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.Delete(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Deletes the specified entities.
            </summary>
            <param name="entities">The entities.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.Remove(System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.Create(`0)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.InitializeFindCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find command.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.SaveEnum">
            <summary>
                Repository save enumeration.
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.SaveEnum.Add">
            <summary>
                The add operation
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.SaveEnum.Update">
            <summary>
                The update operation
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1.SaveEnum.Delete">
            <summary>
                The delete operation
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IBusinessUnitAssociationRepository">
            <summary>
            Provides a Repository interface for Business Unit associations.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IBusinessUnitAssociationRepository.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.BusinessUnitAssociation},System.Guid)">
            <summary>
            Updates the link associations.
            </summary>
            <param name="linkAssociations">The links.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IBusinessUnitAssociationRepository.FindByParent(System.Guid)">
            <summary>
            Finds the by parent.
            </summary>
            <param name="guid">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IBusinessUnitAssociationRepository.Create(UL.Aria.Service.Domain.Entity.BusinessUnitAssociation)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.BusinessUnitAssociationRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.BusinessUnitAssociation},System.Guid)">
            <summary>
            Updates the bulk.
            </summary>
            <param name="businessUnitAssociations">The business unit associations.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.FindByParent(System.Guid)">
            <summary>
            Finds the by parent.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.InitializeBusinessUnitAssociationGetByParentCommand(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Guid)">
            <summary>
            Initializes the business unit association get by parent command.
            </summary>
            <param name="db">The database.</param>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.InitializeBusinessUnitAssociationBulkUpdateCommand(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.BusinessUnitAssociation},Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Guid)">
            <summary>
            Initializes the link association bulk update command.
            </summary>
            <param name="entities">The entities.</param>
            <param name="db">The database.</param>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.BusinessUnitAssociation,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.Add(UL.Aria.Service.Domain.Entity.BusinessUnitAssociation)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.Remove(System.Guid)">
            <summary>
            Removes the specified entity identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.FindAll">
            <summary>
            Finds all.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.FindById(System.Guid)">
            <summary>
            Finds the by identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.Update(UL.Aria.Service.Domain.Entity.BusinessUnitAssociation)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitAssociationRepository.Create(UL.Aria.Service.Domain.Entity.BusinessUnitAssociation)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Repository.BusinessUnitRepository">
            <summary>
            Repository for <see cref="T:UL.Aria.Service.Domain.Lookup.BusinessUnit"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IBusinessUnitRepository">
            <summary>
                Defines repository operations for <see cref="T:UL.Aria.Service.Domain.Lookup.BusinessUnit"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IBusinessUnitRepository.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IBusinessUnitRepository.FetchBusinessUnitByEntity(System.Guid)">
            <summary>
            Fetches the business unit by entity.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns>IEnumerable&lt;BusinessUnit&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitRepository.#ctor(UL.Aria.Service.Configuration.IServiceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.BusinessUnitRepository"/> class.
            </summary>
            <param name="serviceConfiguration">The service configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitRepository.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Lookup.BusinessUnit})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitRepository.MapPrimaryEntityToDataRow(UL.Aria.Service.Domain.Lookup.BusinessUnit,System.Data.DataRow)">
            <summary>
            Maps the primary entity to data row.
            </summary>
            <param name="src">The source.</param>
            <param name="dest">The dest.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            When implemented in derived classes, allows for additional situation specific paramters to be added beyond
            the minimum parameters handled by the InitializeSearchCommand method.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.BusinessUnitRepository.FetchBusinessUnitByEntity(System.Guid)">
            <summary>
            Fetches the business unit by entity.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.BusinessUnitRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.BusinessUnitRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.BusinessUnitRepository.GroupParameterName">
            <summary>
            Gets the name of the group parameter.
            </summary>
            <value>
            The name of the group parameter.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.CategoryRepository">
            <summary>
                Class CategoryRepository
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ICategoryRepository">
            <summary>
                Interface ICategoryRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ICategoryRepository.Create(UL.Aria.Service.Domain.Entity.Category)">
            <summary>
                Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ICategoryRepository.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="categoryId">The category id.</param>
            <returns>Category.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CategoryRepository.#ctor">
            <summary>
                Containers the repository.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.CategoryRepository.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns>IList{Category}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CategoryRepository.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>Category.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CategoryRepository.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>Category.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CategoryRepository.Add(UL.Aria.Service.Domain.Entity.Category)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CategoryRepository.Update(UL.Aria.Service.Domain.Entity.Category)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CategoryRepository.Remove(System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CategoryRepository.Create(UL.Aria.Service.Domain.Entity.Category)">
            <summary>
                Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CategoryRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns>Category.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ContactOrderAzureServiceBusQueueRepository">
            <summary>
            Class ContactOrderAzureServiceBusQueueRepository. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.DepartmentCodeRepository">
            <summary>
                Repository for <see cref="T:UL.Aria.Service.Domain.Entity.DepartmentCode"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3">
            <summary>
            
            </summary>
            <typeparam name="TDomainEntity">The type of the domain entity.</typeparam>
            <typeparam name="TSearchResult">The type of the search result.</typeparam>
            <typeparam name="TSearchResultSet">The type of the search result set.</typeparam>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3.#ctor(UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,`0})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3.FindByExternalId(System.String)">
            <summary>
            Finds the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>IndustryCode.</returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3.ConstructSearchResult(System.Data.IDataReader)">
            <summary>
            Constructs the search result.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3.InitializeFindByExternalIdCommand(System.String,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find by external identifier command.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="db">The database.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.LookupCodeRepositoryBase`3.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.IDepartmentCodeRepository">
            <summary>
            Repository for <see cref="T:UL.Aria.Service.Domain.Entity.DepartmentCode"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ILookupCodeRepositoryBase`1">
            <summary>
            Base repository interface for lookup codes
            </summary>
            <typeparam name="TDomainEntity">The type of the domain entity.</typeparam>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILookupCodeRepositoryBase`1.FindByExternalId(System.String)">
            <summary>
            Finds the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>IndustryCode.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILookupCodeRepositoryBase`1.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.DepartmentCodeRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.DepartmentCodeRepository"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.DepartmentCodeRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.DepartmentCodeRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.DocumentContentAzureBlobStorageRepositoryConfigurationSource">
            <summary>
            Class DocumentContentAzureBlobStorageRepositoryConfigurationSource. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.DocumentContentAzureBlobStorageRepositoryConfigurationSource.ParallelOperationThreadCountName">
            <summary>
            Gets the name of the parallel operation thread count.
            </summary>
            <value>The name of the parallel operation thread count.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.DocumentContentAzureBlobStorageRepositoryConfigurationSource.ServerTimeOutName">
            <summary>
            Gets the name of the server time out.
            </summary>
            <value>The name of the server time out.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.DocumentContentAzureBlobStorageRepositoryConfigurationSource.SingleUploadThresholdInBytesName">
            <summary>
            Gets the name of the single upload threshold in bytes.
            </summary>
            <value>The name of the single upload threshold in bytes.</value>
        </member>
        <member name="T:UL.Aria.Service.Repository.DocumentTemplateAssociationRepository">
            <summary>
            Document Template Association repository class
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IDocumentTemplateAssociationRepository">
            <summary>
            Defines repository operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation"/>objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateAssociationRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateAssociationRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateAssociationRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.DocumentTemplateAssociation})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="P:UL.Aria.Service.Repository.DocumentTemplateAssociationRepository.GroupParameterName">
            <summary>
            Gets the name of the group parameter.
            </summary>
            <value>
            The name of the group parameter.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.DocumentTemplateAssociationRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.DocumentTemplateAssociationRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProjectProjectTemplateRepository">
            <summary>
            Provides a Repository interface for User Team Members.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITaskTypeNotificationRepository">
            <summary>
            Provides a Repository interface for Task Type Notifications.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskTypeNotificationRepository.FindByTaskTypeId(System.Guid)">
            <summary>
            Finds the by task task identifier.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITaskPropertyRepository">
            <summary>
            Defines repository operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.TaskProperty"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskPropertyRepository.FindByTaskPropertyTypeId(System.Guid,System.Guid)">
            <summary>
            Finds the by task property type identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <param name="taskPropertyTypeId">The task property type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskPropertyRepository.FindByTaskId(System.Guid)">
            <summary>
            Finds the by task identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITaskNotificationRepository">
            <summary>
            Provides a Repository interface for Task Notifications.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskNotificationRepository.FindByTaskId(System.Guid)">
            <summary>
            Finds the by task identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITaskTypeAvailableBehaviorFieldRepository">
            <summary>
            Defines Repository operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskTypeAvailableBehaviorFieldRepository.FindByTaskTypeAvailableBehaviorId(System.Guid)">
            <summary>
            Finds the by task type available behavior identifier.
            </summary>
            <param name="taskTypeAvailableBehaviorId">The task type available behavior identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITaskTypeAvailableBehaviorRepository">
            <summary>
            Defines Repository operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeBehavior"/> objects.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITaskTypeBehaviorRepository">
            <summary>
            Defines Repository operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeBehavior"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskTypeBehaviorRepository.FindByTaskTypeId(System.Guid)">
            <summary>
            Finds the by task type identifier.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProjectProjectTemplateRepository">
            <summary>
            User Team Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectProjectTemplateRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProjectProjectTemplateRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectProjectTemplateRepository.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectProjectTemplateRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectProjectTemplateRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            When implemented in derived classes, allows for additional situation specific paramters to be added beyond
            the minimum parameters handled by the InitializeSearchCommand method.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectProjectTemplateRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.ProjectProjectTemplate})">
            <summary>
            
            </summary>
            <param name="expressionChain"></param>
        </member>
        <member name="P:UL.Aria.Service.Repository.ProjectProjectTemplateRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.ProjectProjectTemplateRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.ProjectProjectTemplateRepository.GroupParameterName">
            <summary>
            Gets the name of the group parameter.
            </summary>
            <value>
            The name of the group parameter.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.DocumentTemplateRepository">
            <summary>
            Class DocumentTemplateRepository.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IDocumentTemplateRepository">
            <summary>
            Interface IDocumentTemplateRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IDocumentTemplateRepository.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IDocumentTemplateRepository.FetchDocumentTemplatesByEntity(System.Guid)">
            <summary>
            Fetches the document templates by entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Lookup.DocumentTemplate})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            When implemented in derived classes, allows for additional situation specific parameters to be added beyond
            the minimum parameters handled by the InitializeSearchCommand method.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateRepository.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateRepository.InitializeFetchAll(Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the get lookups.
            </summary>
            <param name="db">The database.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateRepository.ConstructDocumentTemplateLookups(System.Data.IDataReader)">
            <summary>
            Constructs the document template lookups.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentTemplateRepository.FetchDocumentTemplatesByEntity(System.Guid)">
            <summary>
            Fetches the document templates by entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.DocumentTemplateRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>The name of the identifier field.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.DocumentTemplateRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.DocumentTemplateRepository.GroupParameterName">
            <summary>
            Gets the name of the group parameter.
            </summary>
            <value>
            The name of the group parameter.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.DocumentVersionRepository">
            <summary>
            Class DocumentVersionRepository. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IDocumentVersionRepository">
            <summary>
            Interface IDocumentVersionRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IDocumentVersionRepository.Create(UL.Aria.Service.Domain.Entity.DocumentVersion)">
            <summary>
            Creates the specified document version.
            </summary>
            <param name="documentVersion">The document version.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IDocumentVersionRepository.GetDocumentVersionByHashValue(System.String)">
            <summary>
            Gets the document version by hash value.
            </summary>
            <param name="hashValue">The hash value.</param>
            <returns>DocumentVersion.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentVersionRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.DocumentVersionRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentVersionRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.DocumentVersion,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
                Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">
                if set to <c>true</c> [is new].
            </param>
            <param name="isDirty">
                if set to <c>true</c> [is dirty].
            </param>
            <param name="isDelete">
                if set to <c>true</c> [is delete].
            </param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentVersionRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentVersionRepository.GetDocumentVersionByHashValue(System.String)">
            <summary>
            Gets the document de dup by hash value.
            </summary>
            <param name="hashValue">The hash value.</param>
            <returns>DocumentVersion.</returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Repository.DocumentRepository">
            <summary>
            Class DocumentRepository. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IDocumentRepository">
            <summary>
            Interface IDocumentRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IDocumentRepository.Create(UL.Aria.Service.Domain.Entity.Document)">
            <summary>
            Creates the specified document.
            </summary>
            <param name="document">The document.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IDocumentRepository.Update(UL.Aria.Service.Domain.Entity.Document)">
            <summary>
            Updates the specified document.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IDocumentRepository.Delete(System.Guid)">
            <summary>
            Deletes the specified entity identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.DocumentRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentRepository.Update(UL.Aria.Service.Domain.Entity.Document)">
            <summary>
            Updates the specified document.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentRepository.Delete(System.Guid)">
            <summary>
            Deletes the specified entity identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.Document,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
                Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">
                if set to <c>true</c> [is new].
            </param>
            <param name="isDirty">
                if set to <c>true</c> [is dirty].
            </param>
            <param name="isDelete">
                if set to <c>true</c> [is delete].
            </param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.DocumentRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ILinkAssociationRepository">
            <summary>
            Interface ILinkAssociationRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILinkAssociationRepository.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.LinkAssociation},System.Guid)">
            <summary>
            Updates the link associations.
            </summary>
            <param name="linkAssociations">The links.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILinkAssociationRepository.FindByParent(System.Guid)">
            <summary>
            Finds the by parent.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILinkAssociationRepository.Create(UL.Aria.Service.Domain.Entity.LinkAssociation)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IUserTeamMemberRepository">
            <summary>
            Provides a Repository interface for User Team Members.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IUserTeamMemberRepository.FindByUserTeamId(System.Guid)">
            <summary>
            Finds the by user team identifier.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IUserTeamRepository">
            <summary>
            Provides a Repository interface for User Teams.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IUserTeamRepository.FindByUserId(System.Guid)">
            <summary>
            Finds the by user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ILinkRepository">
            <summary>
            Provides a Repository interface for Links.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILinkRepository.FetchLinksByEntity(System.Guid)">
            <summary>
            Fetches the links by entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILinkRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified criteria.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILinkRepository.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ILocationCodeRepository">
            <summary>
            Repository for <see cref="T:UL.Aria.Service.Domain.Entity.LocationCode"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILocationCodeRepository.FindByExternalId(System.String)">
            <summary>
            Finds the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>LocationCode.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILocationCodeRepository.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.InboundMessageAzureBlobStorageRepositoryConfigurationSource">
            <summary>
            Class InboundMessageAzureBlobStorageRepositoryConfigurationSource. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.InboundMessageAzureBlobStorageRepositoryConfigurationSource.ParallelOperationThreadCountName">
            <summary>
            Gets the name of the parallel operation thread count.
            </summary>
            <value>The name of the parallel operation thread count.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.InboundMessageAzureBlobStorageRepositoryConfigurationSource.ServerTimeOutName">
            <summary>
            Gets the name of the server time out.
            </summary>
            <value>The name of the server time out.</value>
        </member>
        <member name="P:UL.Aria.Service.Repository.InboundMessageAzureBlobStorageRepositoryConfigurationSource.SingleUploadThresholdInBytesName">
            <summary>
            Gets the name of the single upload threshold in bytes.
            </summary>
            <value>The name of the single upload threshold in bytes.</value>
        </member>
        <member name="T:UL.Aria.Service.Repository.InboundMessageAzureServiceBusQueueRepository">
            <summary>
            Class InboundMessageAzureServiceBusQueueRepository. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITaskRepository">
            <summary>
            Interface ITaskRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.Create(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Creates the specified task.
            </summary>
            <param name="task">The task.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.FetchByProject(System.Guid)">
            <summary>
            Fetches the by project.
            </summary>
            <param name="ProjectId">The project identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.FetchPredecessorsByProject(System.Guid)">
            <summary>
            Fetches the predecessors by project.
            </summary>
            <param name="projectId">The project identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.Update(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Updates the specified task.
            </summary>
            <param name="task">The task.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.FindByIdTaskOnly(System.Guid)">
            <summary>
            Finds the by identifier task only.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.FindIdsByPrimarySearchEntityId(System.Guid,System.Boolean)">
            <summary>
            Finds the ids by primary search entity identifier.
            </summary>
            <param name="primarySearchEntityId">The primary search entity identifier.</param>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <returns>List&lt;Lookup&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.FindByPrimarySearchEntityId(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Finds the by primary search entity identifier.
            </summary>
            <param name="primarySearchEntityId">The primary search entity identifier.</param>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <param name="flatList">if set to <c>true</c> [return flat list of tasks]</param>
            <returns>List&lt;Task&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.FindByMultiplePrimarySearchEntityIds(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Finds the by multiple primary search entity ids.
            </summary>
            <param name="primarySearchEntityIds">The primary search entity ids.</param>
            <returns>List&lt;Task&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.Remove(System.Guid,System.Guid)">
            <summary>
            Removes the specified entity identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="userId">The user identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.BulkCreate(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Bulk create tasks.
            </summary>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.BulkUpdate(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Bulk update tasks.
            </summary>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.PendingTasks(System.Guid)">
            <summary>
            Determines if there are pending tasks for the given entity.
            </summary>
            <param name="primarySearchEntityId">The primary search entity identifier.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskRepository.FetchCountByPrimarySearchEntityId(System.Guid)">
            <summary>
            Gets the count of tasks for the pr.
            </summary>
            <param name="primarySearchEntityId">The entity identifier.</param>
            <returns></returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITaskTemplateRepository">
            <summary>
            Provides a Repository interface for Task Templates.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskTemplateRepository.FetchTaskTemplateByProjectTemplate(System.Guid)">
            <summary>
            Fetches the task template by project template.
            </summary>
            <param name="projectTemplateId">The project identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskTemplateRepository.UpdateBulk(System.Guid,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskTemplate})">
            <summary>
            Updates the a list of TaskTemplates in bulk.
            </summary>
            <param name="ProjectTemplateId"></param>
            <param name="taskTemplates">The task templates.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.LinkAssociationRepository">
            <summary>
            Provides a repository implementation for LinkAssociations.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.LinkAssociationRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.LinkAssociation},System.Guid)">
            <summary>
            Updates the bulk.
            </summary>
            <param name="linkAssociation">The link association.</param>
            <param name="parentId">The parent identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.FindByParent(System.Guid)">
            <summary>
            Finds the by parent.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.InitializeLinkAssociationGetByParentCommand(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Guid)">
            <summary>
            Initializes the link association get by parent command.
            </summary>
            <param name="db">The database.</param>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.InitializeLinkAssociationBulkUpdateCommand(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.LinkAssociation},Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Guid)">
            <summary>
            Initializes the link association bulk update command.
            </summary>
            <param name="entities">The entities.</param>
            <param name="db">The database.</param>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.LinkAssociation,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.Add(UL.Aria.Service.Domain.Entity.LinkAssociation)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.Remove(System.Guid)">
            <summary>
            Removes the specified entity identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.FindAll">
            <summary>
            Finds all.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.FindById(System.Guid)">
            <summary>
            Finds the by identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.Update(UL.Aria.Service.Domain.Entity.LinkAssociation)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkAssociationRepository.Create(UL.Aria.Service.Domain.Entity.LinkAssociation)">
            <summary>
            Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Repository.TaskTypeNotificationRepository">
            <summary>
            Task Type Notification Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeNotificationRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TaskTypeNotificationRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeNotificationRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.TaskTypeNotification})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeNotificationRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeNotificationRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeNotificationRepository.FindByTaskTypeId(System.Guid)">
            <summary>
            Finds the by task type identifier.
            </summary>
            <param name="taskTypeId">The task type notification identifier.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeNotificationRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeNotificationRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeNotificationRepository.GroupParameterName">
            <summary>
            Gets the name of the group parameter.
            </summary>
            <value>
            The name of the group parameter.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.TaskPropertyRepository">
            <summary>
            Implements repository operations for working with <see cref="T:UL.Aria.Service.Domain.Entity.TaskProperty"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskPropertyRepository.DefinePrimaryEntityIDataReaderMapping(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the primary entity i data reader mapping.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskPropertyRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.TaskProperty})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskPropertyRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskPropertyRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskPropertyRepository.FindByTaskPropertyTypeId(System.Guid,System.Guid)">
            <summary>
            Finds the by task property type identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <param name="taskPropertyTypeId">The task property type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskPropertyRepository.FindByTaskId(System.Guid)">
            <summary>
            Finds the by task identifier.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskPropertyRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskPropertyRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.TaskNotificationRepository">
            <summary>
            Task Notification Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskNotificationRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TaskNotificationRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskNotificationRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.TaskNotification})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskNotificationRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskNotificationRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskNotificationRepository.FindByTaskId(System.Guid)">
            <summary>
            Finds the by task identifier.
            </summary>
            <param name="taskId">The task notification identifier.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskNotificationRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskNotificationRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskNotificationRepository.GroupParameterName">
            <summary>
            Gets the name of the group parameter.
            </summary>
            <value>
            The name of the group parameter.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorFieldRepository">
            <summary>
            Implements Repository operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorFieldRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehaviorField})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorFieldRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorFieldRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorFieldRepository.FindByTaskTypeAvailableBehaviorId(System.Guid)">
            <summary>
            Finds the by task type available behavior identifier.
            </summary>
            <param name="taskTypeAvailableBehaviorId">The task type available behavior identifier.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorFieldRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorFieldRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorRepository">
            <summary>
            Implements Repository operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeBehavior"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.TaskTypeAvailableBehavior})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeAvailableBehaviorRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.TaskTypeBehaviorRepository">
            <summary>
            Implements Repository operations for <see cref="T:UL.Aria.Service.Domain.Entity.TaskTypeBehavior"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeBehaviorRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.TaskTypeBehavior})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeBehaviorRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeBehaviorRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeBehaviorRepository.FindByTaskTypeId(System.Guid)">
            <summary>
            Finds the by task type identifier.
            </summary>
            <param name="taskTypeId">The task type identifier.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeBehaviorRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeBehaviorRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.UserTeamMemberRepository">
            <summary>
            User Team Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.UserTeamMemberRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.UserTeamMemberRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.UserTeamMemberRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.UserTeamMember})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.UserTeamMemberRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.UserTeamMemberRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.UserTeamMemberRepository.FindByUserTeamId(System.Guid)">
            <summary>
            Finds the by user team identifier.
            </summary>
            <param name="userTeamMemberId">The user team member identifier.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.UserTeamMemberRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.UserTeamMemberRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.UserTeamMemberRepository.GroupParameterName">
            <summary>
            Gets the name of the group parameter.
            </summary>
            <value>
            The name of the group parameter.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.UserTeamRepository">
            <summary>
            User Team Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.UserTeamRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.UserTeamRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.UserTeamRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.UserTeamRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.UserTeam})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.UserTeamRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.UserTeamRepository.FindByUserId(System.Guid)">
            <summary>
            Fetches the by user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.UserTeamRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.UserTeamRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.LinkRepository">
            <summary>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.FindAll">
            <summary>
            Finds all.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.FindById(System.Guid)">
            <summary>
            Finds the by identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.Add(UL.Aria.Service.Domain.Entity.Link)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.Update(UL.Aria.Service.Domain.Entity.Link)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.Remove(System.Guid)">
            <summary>
            Removes the specified entity identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.FetchLinksByEntity(System.Guid)">
            <summary>
            Fetches the links by entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified criteria.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.GetLookups">
            <summary>
            Gets the lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.Link})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LinkRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="P:UL.Aria.Service.Repository.LinkRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.LinkRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.LinkRepository.GroupParameterName">
            <summary>
            Gets the name of the group parameter.
            </summary>
            <value>
            The name of the group parameter.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITaskTypeRepository">
            <summary>
            Interface ITaskTypeRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskTypeRepository.GetLookups(System.Boolean)">
            <summary>
            Gets the lookups.
            </summary>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskTypeRepository.Fetch(System.Guid,System.Boolean)">
            <summary>
            Fetches the active by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="isDeleted">if set to <c>true</c> [is deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskTypeRepository.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITaskCategoryRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskCategoryRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskCategoryRepository.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITaskCategoryRepository.FetchActiveById(System.Guid)">
            <summary>
            Fetches the active by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.LocationCodeRepository">
            <summary>
            Repository for <see cref="T:UL.Aria.Service.Domain.Entity.LocationCode"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocationCodeRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.LocationCodeRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocationCodeRepository.FetchAll">
            <summary>
            Fetches all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocationCodeRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.Entity.LocationCode})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocationCodeRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocationCodeRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocationCodeRepository.FindByExternalId(System.String)">
            <summary>
            Finds the by external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <returns>LocationCode.</returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="P:UL.Aria.Service.Repository.LocationCodeRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.LocationCodeRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.LookupRepository">
            <summary>
            Lookup Repository
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ILookupRepository">
            <summary>
            Interface for Lookup Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILookupRepository.FetchAllBusinessUnits">
            <summary>
                FetchAll Business Unit
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ILookupRepository.FetchBusinessUnitByEntity(System.Guid)">
            <summary>
            Fetches the business unit by entity.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.LookupRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupRepository.FetchAllBusinessUnits">
            <summary>
                Fetch all businessUnits
            </summary>
            <returns>IList{Lookup}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LookupRepository.FetchBusinessUnitByEntity(System.Guid)">
            <summary>
            Fetches the business unit by entity.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.HistoryRepository">
            <summary>
            History Repository
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IHistoryRepository">
            <summary>
            Interface for History Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IHistoryRepository.FindById(System.Guid)">
            <summary>
                Finds the history item by id.
            </summary>
            <param name="historyId">The history id.</param>
            <returns>History.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IHistoryRepository.FindAllByEntityId(System.Guid)">
            <summary>
                Finds all history items for a given Entity, i.e. Project History, Order History, etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IHistoryRepository.Create(UL.Aria.Service.Domain.History)">
            <summary>
                Creates the specified history item.
            </summary>
            <param name="history">The new history item.</param>
            <returns>HistoryId.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IHistoryRepository.Update(UL.Aria.Service.Domain.History)">
            <summary>
                Updates the specified history item.
            </summary>
            <param name="history">The history item.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IHistoryRepository.Delete(System.Guid)">
            <summary>
                Deletes the specified history item.
            </summary>
            <param name="id">The history id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.HistoryRepository.#ctor(UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.HistoryRepository"/> class.
            </summary>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.HistoryRepository.FindById(System.Guid)">
            <summary>
                Finds the history item by id.
            </summary>
            <param name="historyId">The history id.</param>
            <returns>History.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.HistoryRepository.FindAllByEntityId(System.Guid)">
            <summary>
                Finds all history items for a given Entity, i.e. Project History, Order History, etc
            </summary>
            <returns>IList{History}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.HistoryRepository.Create(UL.Aria.Service.Domain.History)">
            <summary>
                Creates the specified history item.
            </summary>
            <param name="history">The new history item.</param>
            <returns>HistoryId.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.HistoryRepository.Update(UL.Aria.Service.Domain.History)">
            <summary>
                Updates the specified history item.
            </summary>
            <param name="history">The history item.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.HistoryRepository.Delete(System.Guid)">
            <summary>
                Deletes the specified history item.
            </summary>
            <param name="historyId">The history id.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.ServiceCodeRepository">
            <summary>
                Repository for <see cref="T:UL.Aria.Service.Domain.Entity.ServiceCode"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IServiceCodeRepository">
            <summary>
            Repository for <see cref="T:UL.Aria.Service.Domain.Entity.ServiceCode"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ServiceCodeRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ServiceCodeRepository"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.ServiceCodeRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.ServiceCodeRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.INotificationRepository">
            <summary>
            Provides an interface for a Notification Repository.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.INotificationRepository.FindAll">
            <summary>
            Finds all notifications in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.INotificationRepository.FindById(System.Guid)">
            <summary>
            Fetches the notification matching the specified id.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.INotificationRepository.Add(UL.Aria.Service.Domain.Entity.Notification)">
            <summary>
            Adds the specified notification.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.INotificationRepository.Update(UL.Aria.Service.Domain.Entity.Notification)">
            <summary>
            Updates the specified notification.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.INotificationRepository.Remove(System.Guid)">
            <summary>
            Removes a notification with the specified notificationId from the database.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.INotificationRepository.FetchNotificationsByUser(System.Guid)">
            <summary>
            Fetches all active notifications associated with the specified userId.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.INotificationRepository.FetchNotificationsByEntity(System.Guid)">
            <summary>
            Fetches all active notifications associated with the specified entityId.
            </summary>
            <param name="entiyId">The entiy identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.INotificationRepository.RemoveNotificationsForEntity(System.Guid)">
            <summary>
            Removes the notifications for the specified entityId from the database.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.INotificationRepository.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},System.Guid)">
            <summary>
            Updates the list of notifications in the bulk for the specified entityId.
            </summary>
            <param name="notifications">The notifications.</param>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.INotificationRepository.Delete(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification})">
            <summary>
            Deletes the specified list of notifications.
            </summary>
            <param name="entities">The entities.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.ISenderRepository">
            <summary>
                Interface ISenderRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ISenderRepository.FetchByName(System.String)">
            <summary>
                Fetches the name of the by.
            </summary>
            <param name="name">The name.</param>
            <returns>Sender.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ISenderRepository.Create(UL.Aria.Service.Domain.Entity.Sender)">
            <summary>
                Creates the specified sender.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.IIndustryCodeRepository">
            <summary>
            Repository for <see cref="T:UL.Aria.Service.Domain.Entity.IndustryCode"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.NotificationRepository">
            <summary>
            Provides an implemenation of the Notification Repository interface.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.NotificationRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.NotificationRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.NotificationRepository.FetchNotificationsByUser(System.Guid)">
            <summary>
            Fetches all active notifications associated with the specified userId.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.NotificationRepository.FetchNotificationsByEntity(System.Guid)">
            <summary>
            Fetches all active notifications associated with the specified entityId.
            </summary>
            <param name="entiyId">The entiy identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.NotificationRepository.RemoveNotificationsForEntity(System.Guid)">
            <summary>
            Removes the notifications for the specified entityId from the database.
            </summary>
            <param name="entityId"></param>
        </member>
        <member name="M:UL.Aria.Service.Repository.NotificationRepository.UpdateBulk(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Notification},System.Guid)">
            <summary>
            Updates the list of notifications in the bulk for the specified entityId.
            </summary>
            <param name="notifications">The notifications.</param>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.NotificationRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.Notification,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.NotificationRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductFamilyAttributeAssociationRepository">
            <summary>
            Implements operations for creating product family feature associations.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductFamilyCharacteristicAssociationRepositoryBase`1">
            <summary>
            Base class for shared characteristic repository functionality.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyCharacteristicAssociationRepositoryBase`1.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductFamilyCharacteristicAssociationRepositoryBase`1"/> class.
            </summary>
            <param name="dbIdFieldName">Name of the database identifier field.</param>
            <param name="tableName">Name of the table.</param>
            <param name="optiondIdFieldName">Name of the optiond identifier field.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyCharacteristicAssociationRepositoryBase`1.InitializeSaveCommand(`0,Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase{`0}.SaveEnum)">
            <summary>
                Initializes the save command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <param name="saveEnum">The save enum.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyCharacteristicAssociationRepositoryBase`1.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyCharacteristicAssociationRepositoryBase`1.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyCharacteristicAssociationRepositoryBase`1.ExecuteReaderCommand(System.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand})">
            <summary>
            Executes the reader command.
            </summary>
            <param name="InitializeCommandDelegate">The initialize command delegate.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductFamilyAssociationRepository`1">
            <summary>
            Defines operations for creating product family feature associations.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyAssociationRepository`1.Create(`0)">
            <summary>
            Adds the specified association.
            </summary>
            <param name="association">The association.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyAssociationRepository`1.GetByFamilyId(System.Guid)">
            <summary>
            Gets the by family id.
            </summary>
            <param name="familyId">The family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyAssociationRepository`1.Remove(System.Guid)">
            <summary>
            Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyAssociationRepository`1.Update(`0)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyAttributeAssociationRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyAttributeAssociationRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductFamilyAttributeAssociation,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyAttributeAssociationRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyAttributeAssociationRepository.GetByFamilyId(System.Guid)">
            <summary>
            Gets the by family id.
            </summary>
            <param name="familyId">The family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyAttributeAssociationRepository.InitializeFindByFamilyCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find by family command.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.SenderRepository">
            <summary>
                Class SenderRepository.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.SenderRepository.FetchByName(System.String)">
            <summary>
                Fetches the name of the by.
            </summary>
            <param name="name">The name.</param>
            <returns>Sender.</returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException">sender not found;null</exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.SenderRepository.Create(UL.Aria.Service.Domain.Entity.Sender)">
            <summary>
                Creates the specified sender.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.OrderServiceLineDetailRepository">
            <summary>
                Class OrderServiceLineDetailRepository.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IOrderServiceLineDetailRepository">
            <summary>
                Interface IOrderServiceLineDetailRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderServiceLineDetailRepository.Create(UL.Aria.Service.Domain.Entity.OrderServiceLineDetail)">
            <summary>
                Creates the specified order service line detail.
            </summary>
            <param name="orderServiceLineDetail">The order service line detail.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderServiceLineDetailRepository.FindAll">
            <summary>
                Finds all order service line details.
            </summary>
            <returns>IList{OrderServiceLineDetail}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderServiceLineDetailRepository.FindByIds(System.Guid,System.String)">
            <summary>
                Finds a order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="lineId">The line identifier.</param>
            <returns>OrderServiceLineDetail.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderServiceLineDetailRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches for order service line details by the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>OrderServiceLineDetailSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderServiceLineDetailRepository.Update(UL.Aria.Service.Domain.Entity.OrderServiceLineDetail)">
            <summary>
                Updates the specified order service line detail.
            </summary>
            <param name="orderServiceLineDetail">The order service line detail.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderServiceLineDetailRepository.Delete(System.Guid,System.String)">
            <summary>
                Deletes the order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="lineId">The line identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.OrderServiceLineDetailRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.OrderServiceLineDetailRepository"/> class.
            </summary>
            <param name="dbIdFieldName">Name of the database identifier field.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.Create(UL.Aria.Service.Domain.Entity.OrderServiceLineDetail)">
            <summary>
                Creates the specified order service line detail.
            </summary>
            <param name="orderServiceLineDetail">The order service line detail.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.Add(UL.Aria.Service.Domain.Entity.OrderServiceLineDetail)">
            <summary>
                Adds the specified order service line detail.
            </summary>
            <param name="orderServiceLineDetail">The order service line detail.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.FindAll">
            <summary>
                Finds all order service line details.
            </summary>
            <returns>IList{OrderServiceLineDetail}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.FindById(System.Guid)">
            <summary>
                Finds the by identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>OrderServiceLineDetail.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.FindByIds(System.Guid,System.String)">
            <summary>
                Finds a order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="lineId">The line identifier.</param>
            <returns>OrderServiceLineDetail.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches for order service line details by the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>OrderServiceLineDetailSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.Update(UL.Aria.Service.Domain.Entity.OrderServiceLineDetail)">
            <summary>
                Updates the specified order service line detail.
            </summary>
            <param name="orderServiceLineDetail">The order service line detail.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.Delete(System.Guid,System.String)">
            <summary>
                Deletes the order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="lineId">The line identifier.</param>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderServiceLineDetailRepository.Remove(System.Guid)">
            <summary>
                Removes the order service line detail by the specified order identifier and line identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProjectRepository">
            <summary>
                Interface IProjectRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.FetchProjectLookups">
            <summary>
            Fetches the project lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.FetchProjects(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
                Fetches the projects.
            </summary>
            <param name="ids">The ids.</param>
            <returns>IList{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.FetchById(System.Guid)">
            <summary>
                Fetches the by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Project.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.FetchByOrderNumber(System.String)">
            <summary>
                Fetches the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>IList{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.Create(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Creates the specified project.
            </summary>
            <param name="project">The project.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.Update(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates the specified project.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.UpdateStatusFromOrder(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates Project Status and LineItems Statuses only.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.UpdateAllContactsForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.UpdateAllCustomersForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderCustomer)">
            <summary>
            Updates all customers for external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="customer">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.Delete(System.Guid)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.UpdateFromIncomingOrder(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates from incoming order.
            </summary>
            <param name="project">The entity.</param>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.FetchAllIds">
            <summary>
            Fetches all headers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.UpdateContact(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectRepository.CreateContact(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Creates the contact.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="contact">The contact.</param>
            <returns>Guid.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProjectRepository">
            <summary>
                Class ProjectRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.#ctor(UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProjectRepository"/> class.
            </summary>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.FetchProjectLookups">
            <summary>
                Fetches the project lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UL#Aria#Service#Repository#IProjectRepository#FetchProjects(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
                Fetches the projects.
            </summary>
            <param name="ids">The ids.</param>
            <returns>IList{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UL#Aria#Service#Repository#IProjectRepository#FetchById(System.Guid)">
            <summary>
                Fetches the by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Project.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UL#Aria#Service#Repository#IProjectRepository#FetchByOrderNumber(System.String)">
            <summary>
                Fetches the by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>IList{Project}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UL#Aria#Service#Repository#IProjectRepository#Create(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Creates the specified project.
            </summary>
            <param name="project">The project.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UL#Aria#Service#Repository#IProjectRepository#Update(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates the specified project.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UL#Aria#Service#Repository#IProjectRepository#UpdateStatusFromOrder(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates Project Status and LineItems Statuses only.
            </summary>
            <param name="project">The project.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UpdateContact(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.CreateContact(System.Guid,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Creates the contact.
            </summary>
            <param name="projectId">The project identifier.</param>
            <param name="contact">The contact.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UpdateAllContactsForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
                Updates the contact.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UpdateAllCustomersForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderCustomer)">
            <summary>
                Updates all customers for external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="customer">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UL#Aria#Service#Repository#IProjectRepository#Delete(System.Guid)">
            <summary>
                Deletes the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.FetchAllIds">
            <summary>
                Fetches all headers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UL#Aria#Service#Repository#IProjectRepository#FetchAll">
            <summary>
                Fetches all.
            </summary>
            <returns>IList{Project}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.FindProjectLookups">
            <summary>
                Fetches the project lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.ConstructProjectLookups(System.Data.IDataReader)">
            <summary>
                Constructs the project lookups.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UpdateFromIncomingOrder(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates from incoming order.
            </summary>
            <param name="project">The entity.</param>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.FindAll">
            <summary>
                Finds all.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
            <returns>IList{Project}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>Project.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.Add(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.Update(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.UpdateStatusFromOrder(UL.Aria.Service.Domain.Entity.Project)">
            <summary>
                Updates Project Status and LineItems Statuses only.
            </summary>
            <param name="entity">The Project entity.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectRepository.Remove(System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.FavoriteSearchRepository">
            <summary>
            Favorite search repository class.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IFavoriteSearchRepository">
            <summary>
            Saved search repository interface definition.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IFavoriteSearchRepository.FindByUserId(System.Guid)">
            <summary>
            Fetches the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <returns>User's saved searches.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IFavoriteSearchRepository.FindByUserIdAndLocation(System.Guid,System.String)">
            <summary>
            Fetches the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <param name="location">The location.</param>
            <returns>User's saved searches for a location.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IFavoriteSearchRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria,System.Guid)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <param name="userId">The user id.</param>
            <returns>User's favorite searches matching keyword.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IFavoriteSearchRepository.FindActiveByUserIdAndLocation(System.Guid,System.String)">
            <summary>
            Finds the active by user identifier and location.
            </summary>        
            <param name="userId">The user identifier.</param>
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IFavoriteSearchRepository.FindAvailableByUserIdAndLocation(System.Guid,System.String)">
            <summary>
            Finds the default by user identifier and location.
            </summary>        
            <param name="userId">The user identifier.</param>
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.FavoriteSearchRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.FavoriteSearch,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.FindByUserId(System.Guid)">
            <summary>
            Fetches the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <returns>
            User's saved searches.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.FindByUserIdAndLocation(System.Guid,System.String)">
            <summary>
            Fetches the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <param name="location">The location.</param>
            <returns>
            User's saved searches for a location.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.FindActiveByUserIdAndLocation(System.Guid,System.String)">
            <summary>
            Finds the active by user identifier and location.
            </summary>        
            <param name="userId">The user identifier.</param>
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.FindAvailableByUserIdAndLocation(System.Guid,System.String)">
            <summary>
            Finds the default by user identifier and location.
            </summary>        
            <param name="userId">The user identifier.</param>
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria,System.Guid)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <param name="userId">The user id.</param>
            <returns>
            User's favorite searches matching keyword.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.InitializeFindByUserCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find by user command.
            </summary>
            <param name="userId">The user id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.InitializeFindByUserAndLocationCommand(System.Guid,System.String,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find by user and location command.
            </summary>
            <param name="userId">The user id.</param>
            <param name="location">The location.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.InitializeFindActiveByUserAndLocationCommand(System.Guid,System.String,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find active by user and location command.
            </summary>        
            <param name="userId">The user identifier.</param>
            <param name="location">The location.</param>
            <param name="db">The database.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.InitializeFindAvailableByUserAndLocationCommand(System.Guid,System.String,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find available by user and location command.
            </summary>        
            <param name="userId">The user identifier.</param>
            <param name="location">The location.</param>
            <param name="db">The database.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.FavoriteSearchRepository.InitializeSearchCommand(System.String,System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the search command.
            </summary>
            <param name="keyword">The keyword.</param>
            <param name="userId">The user id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProjectStatusMessageRepository">
            <summary>
            Defines persistance for <see cref="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessage"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectStatusMessageRepository.GetNext">
            <summary>
            Gets the next <see cref="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProjectStatusMessageRepository">
            <summary>
            Handles persistance for <see cref="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessage"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectStatusMessageRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectStatusMessageRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectStatusMessageRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProjectStatusMessage,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectStatusMessageRepository.GetNext">
            <summary>
            Gets the next <see cref="T:UL.Aria.Service.Domain.Entity.ProjectStatusMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProjectTemplateRepository">
            <summary>
                Class ProjectTemplateRepository
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProjectTemplateRepository">
            <summary>
                Interface IProjectTemplateRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectTemplateRepository.Create(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectTemplateRepository.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="projectTemplateId">The project task template id.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProjectTemplateRepository.GetAllByCorrelationId(System.Guid)">
            <summary>
                Finds the project templates with the same correlationId.
            </summary>
            <returns>IList{ProjectTemplate}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.#ctor(UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProjectTemplateRepository"/> class.
            </summary>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns>IList{ProjectTemplate}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.GetAllByCorrelationId(System.Guid)">
            <summary>
                Finds the project templates with the same correlationId.
            </summary>
            <param name="correlationId">The project template correlation id.</param>
            <returns>IList{ProjectTemplate}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.Add(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.Create(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.Update(UL.Aria.Service.Domain.Entity.ProjectTemplate)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.Remove(System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="projectTemplateId">The project template id.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Aria.Service.Domain.Search.SearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns>ProjectTemplate.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProjectTemplateRepository.ConvertXmlToTaskTemplates(System.String)">
            <summary>
                Deserializes the Xml to TaskTemplates.
            </summary>
            <param name="xmlTaskTemplates">The xml Task Templates.</param>
            <returns>List{TaskTemplate}.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductAttributeOptionRepository">
            <summary>
            Defines repository for AttributeOptions
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductCharacteristicOptionRepository">
            <summary>
            Defines repository for options
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductCharacteristicOptionRepository.FillOption``1(System.Data.IDataReader,System.Collections.Generic.IList{``0})">
            <summary>
            Fills the option.
            </summary>
            <typeparam name="TCharacteristic">The type of the characteristic.</typeparam>
            <param name="reader">The reader.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductFamilyFeatureAllowedValueDependencyRepository">
            <summary>
            Defines persistance of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyFeatureAllowedValueDependencyRepository.FindByFamilyAllowedFeatureId(System.Guid)">
            <summary>
            Finds <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency"/> by family feature allowed value id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyFeatureAllowedValueDependencyRepository.FindByParentFamilyAllowedFeatureValueId(System.Guid)">
            <summary>
            Finds dependencies by parent family allowed feature value id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductFamilyFeatureAllowedValueRepository">
            <summary>
            Defines persistance of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyFeatureAllowedValueRepository.FindByFeatureId(System.Guid,System.Guid)">
            <summary>
            Gets a collection of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue"/> by family id.
            </summary>
            <param name="featureId">The family id.</param>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyFeatureAllowedValueRepository.FindByFamilyId(System.Guid)">
            <summary>
            Finds the by family id.
            </summary>
            <param name="familyId">The family id.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductFamilyFeatureValueRepository">
            <summary>
            Defines persistance of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyFeatureValueRepository.FindByFeatureId(System.Guid)">
            <summary>
            Finds the values by feature id.
            </summary>
            <param name="featureId">The feature id.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IUnitOfMeasureRepository">
            <summary>
            Repository for <see cref="T:UL.Aria.Service.Domain.Entity.UnitOfMeasure"/>
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.OrderRepository">
            <summary>
                Class OrderRepository
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IOrderRepository">
            <summary>
                Interface IOrderRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderRepository.Create(UL.Aria.Service.Domain.Entity.Order)">
            <summary>
                Creates the specified <see cref="T:UL.Aria.Service.Domain.Entity.Order"/>
            </summary>
            <param name="order">The new order.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderRepository.Update(UL.Aria.Service.Domain.Entity.Order)">
            <summary>
                Updates the specified <see cref="T:UL.Aria.Service.Domain.Entity.Order"/>.
            </summary>
            <param name="order">The order.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderRepository.Delete(System.Guid)">
            <summary>
                Deletes the specified <see cref="T:UL.Aria.Service.Domain.Entity.Order"/>.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderRepository.FindById(System.Guid)">
            <summary>
                Finds the order by id.
            </summary>
            <param name="entityId">The order id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderRepository.FindByOrderNumber(System.String)">
            <summary>
                Finds the order by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>Order.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderRepository.FetchOrderLookups">
            <summary>
            Fetches the order lookups.
            </summary>
            <returns>A list of order lookups</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IOrderRepository.FindOrderLookups">
            <summary>
            Finds the order lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.OrderRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.OrderRepository"/> class.
            </summary>
            <param name="dbIdFieldName">Name of the db id field.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.Create(UL.Aria.Service.Domain.Entity.Order)">
            <summary>
                Creates the specified order.
            </summary>
            <param name="order">The order.</param>
            <returns>Order id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.FindById(System.Guid)">
            <summary>
                Finds the order by id.
            </summary>
            <param name="entityId">The order id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.FindByOrderNumber(System.String)">
            <summary>
                Finds the order by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>Order.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.Update(UL.Aria.Service.Domain.Entity.Order)">
            <summary>
                Update the specified order.
            </summary>
            <param name="order">Order to update from the repository</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.Delete(System.Guid)">
            <summary>
                Deletes the specified <see cref="T:UL.Aria.Service.Domain.Entity.Order"/>.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.Add(UL.Aria.Service.Domain.Entity.Order)">
            <summary>
                Adds the specified order.
            </summary>
            <param name="entity">Order to add to the repository</param>
            <returns>Order's system ID</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.Remove(System.Guid)">
            <summary>
                Removes the specified order.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.FindOrderLookups">
            <summary>
                Fetches the project lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.OrderRepository.FetchOrderLookups">
            <summary>
            Fetches the order lookups.
            </summary>
            <returns>
            A list of order lookups
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.AcceptanceClaimRepository">
            <summary>
                deal with persistance of Acceptance Claim table
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IAcceptanceClaimRepository">
            <summary>
            interface decribing operations available for repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAcceptanceClaimRepository.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAcceptanceClaimRepository.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAcceptanceClaimRepository.Add(UL.Aria.Service.Domain.Entity.AcceptanceClaim)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAcceptanceClaimRepository.Update(UL.Aria.Service.Domain.Entity.AcceptanceClaim)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IAcceptanceClaimRepository.Remove(System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.AcceptanceClaimRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.Add(UL.Aria.Service.Domain.Entity.AcceptanceClaim)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.Update(UL.Aria.Service.Domain.Entity.AcceptanceClaim)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.Remove(System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.InitializeFindByCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
                Initializes the find by command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.InitializeFindAllCommand(Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
                Initializes the find all command.
            </summary>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.InitializeAddCommand(UL.Aria.Service.Domain.Entity.AcceptanceClaim,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
                Initializes the add command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.ConstructAcceptanceClaim(System.Data.IDataReader,System.Guid@)">
            <summary>
                Constructs the acceptance claim.
            </summary>
            <param name="reader">The reader.</param>
            <param name="AcceptanceClaimId">The acceptance claim id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.InitializeUpdateCommand(UL.Aria.Service.Domain.Entity.AcceptanceClaim,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
                Initializes the update command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AcceptanceClaimRepository.InitializeRemoveCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
                Initializes the remove command.
            </summary>
            <param name="id">The id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductAttributeOptionRepository">
            <summary>
            Repository for AttributeOptions
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductCharacteristicOptionRepositoryBase">
            <summary>
            Base repository for options.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductCharacteristicOptionRepositoryBase.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductCharacteristicOptionRepositoryBase"/> class.
            </summary>
            <param name="dbIdFieldName">Name of the db id field.</param>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductCharacteristicOptionRepositoryBase.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOption,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductCharacteristicOptionRepositoryBase.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductCharacteristicOptionRepositoryBase.FillOption``1(System.Data.IDataReader,System.Collections.Generic.IList{``0})">
            <summary>
            Fills the option.
            </summary>
            <typeparam name="TCharacteristic">The type of the characteristic.</typeparam>
            <param name="reader">The reader.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductAttributeOptionRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductAttributeOptionRepository"/> class.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueDependencyRepository">
            <summary>
                Implements persistance of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueDependencyRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueDependencyRepository.Update(UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueDependencyRepository.FindByFamilyAllowedFeatureId(System.Guid)">
            <summary>
                Finds <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency"/> by family feature allowed value id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueDependencyRepository.FindByParentFamilyAllowedFeatureValueId(System.Guid)">
            <summary>
                Finds dependencies by parent family allowed feature value id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueDependencyRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
                Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueDependencyRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueRepository">
            <summary>
            Implements persistance of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueRepository.Update(UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueRepository.Remove(System.Guid)">
            <summary>
            Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueRepository.FindByFeatureId(System.Guid,System.Guid)">
            <summary>
            Gets a collection of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue"/> by feature id.
            </summary>
            <param name="featureId">The family id.</param>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAllowedValueRepository.FindByFamilyId(System.Guid)">
            <summary>
            Gets a collection of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValue"/> by feature id.
            </summary>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductFamilyFeatureValueRepository">
            <summary>
            Implements persistance of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureValueRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureValueRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureValueRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureValueRepository.FindByFeatureId(System.Guid)">
            <summary>
            Finds the values by feature id.
            </summary>
            <param name="featureId">The feature id.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductFeatureOptionRepository">
            <summary>
            Defines repository for Feature Options
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductFeatureOptionRepository">
            <summary>
            Repository for Feature Options
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFeatureOptionRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductFeatureOptionRepository"/> class.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductUploadMessageRepository">
            <summary>
                Class ProductUploadMessageRepository
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductUploadMessageRepository">
            <summary>
                Interface IProductUploadMessageRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductUploadMessageRepository.Create(UL.Aria.Service.Domain.Entity.ProductUploadMessage)">
            <summary>
                Creates the specified product upload message.
            </summary>
            <param name="productUploadMessage">The product upload message.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductUploadMessageRepository.GetByProductUploadResultId(System.Guid)">
            <summary>
                Gets the by product upload result id.
            </summary>
            <param name="productUploadResultId">The product upload result id.</param>
            <returns>IEnumerable{ProductUploadMessage}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadMessageRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductUploadResultRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadMessageRepository.GetByProductUploadResultId(System.Guid)">
            <summary>
                Gets the by product upload result id.
            </summary>
            <param name="productUploadResultId">The product upload result id.</param>
            <returns>IEnumerable{ProductUploadMessage}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadMessageRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductUploadMessage,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
                Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">
                if set to <c>true</c> [is new].
            </param>
            <param name="isDirty">
                if set to <c>true</c> [is dirty].
            </param>
            <param name="isDelete">
                if set to <c>true</c> [is delete].
            </param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadMessageRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductUploadResultRepository">
            <summary>
                Repository for <see cref="T:UL.Aria.Service.Domain.Entity.ProductUploadResult"/> instances
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductUploadResultRepository">
            <summary>
                Product Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductUploadResultRepository.Create(UL.Aria.Service.Domain.Entity.ProductUploadResult)">
            <summary>
                Creates the specified product upload result.
            </summary>
            <param name="productUploadResult">The product upload result.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductUploadResultRepository.GetByProductUploadId(System.Guid)">
            <summary>
                Gets the by product upload id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUploadResultSearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadResultRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductUploadResultRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadResultRepository.GetByProductUploadId(System.Guid)">
            <summary>
                Gets the by product upload id.
            </summary>
            <param name="productUploadId">The product upload id.</param>
            <returns>ProductUploadResultSearchResultSet.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadResultRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductUploadResult,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
                Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">
                if set to <c>true</c> [is new].
            </param>
            <param name="isDirty">
                if set to <c>true</c> [is dirty].
            </param>
            <param name="isDelete">
                if set to <c>true</c> [is delete].
            </param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadResultRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.TermsAndConditionsProvider">
            <summary>
            class that delegate work to the Terms and Conditions Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.TermsAndConditionsProvider.#ctor(UL.Aria.Service.Repository.ITermsAndConditionsRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.TermsAndConditionsProvider"/> class.
            </summary>
            <param name="termsAndConditionsRepository">The terms and conditions repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.TermsAndConditionsProvider.FindByType(UL.Aria.Service.Domain.Entity.TermsAndConditionsType)">
            <summary>
            Finds all.
            </summary>
            <param name="conditionsType">Type of the conditions.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.TermsAndConditionsProvider.FetchById(System.Guid)">
            <summary>
            Fetches the by id.
            </summary>
            <param name="id">The GUID.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductUploadRepository">
            <summary>
                Product Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductUploadRepository.Upload(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Uploads the specified file.
            </summary>
            <param name="productUpload">The product upload.</param>
            <returns>Confirmation Id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductUploadRepository.FetchByUserId(System.Guid,System.Int64,System.Int64)">
            <summary>
                Fetches the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <param name="rowStartIndex"></param>
            <param name="rowEndIndex"></param>
            <returns>List{ProductUpload}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductUploadRepository.FetchNextForProcessing">
            <summary>
            Fetches the next available <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/> for processing.
            </summary>
            <returns>The next <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/>. May return null (will not throw) if there is none.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ITermsAndConditionsRepository">
            <summary>
            contract that defines operations available for manipulating terms and conditions
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITermsAndConditionsRepository.FindAll">
            <summary>
            Finds all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITermsAndConditionsRepository.FindById(System.Guid)">
            <summary>
            Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITermsAndConditionsRepository.FindByUserId(System.Guid)">
            <summary>
            Finds the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITermsAndConditionsRepository.Add(UL.Aria.Service.Domain.Entity.TermsAndConditions)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITermsAndConditionsRepository.Update(UL.Aria.Service.Domain.Entity.TermsAndConditions)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ITermsAndConditionsRepository.Remove(System.Guid)">
            <summary>
            Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductUploadRepository">
            <summary>
                Repository for <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> instances
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadRepository.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns>IList{ProductUpload}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadRepository.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>ProductUpload.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadRepository.Add(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadRepository.Update(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Int32.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadRepository.Remove(System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadRepository.UL#Aria#Service#Repository#IProductUploadRepository#Upload(UL.Aria.Service.Domain.Entity.ProductUpload)">
            <summary>
                Uploads the specified file.
            </summary>
            <param name="productUpload">The product upload.</param>
            <returns>Confirmation Id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadRepository.FetchByUserId(System.Guid,System.Int64,System.Int64)">
            <summary>
                Fetches the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <param name="rowStartIndex"></param>
            <param name="rowEndIndex"></param>
            <returns>List{ProductUpload}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadRepository.FetchNextForProcessing">
            <summary>
            Fetches the next available <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/> for processing.
            </summary>
            <returns>The next <see cref="T:UL.Aria.Service.Domain.Entity.ProductUpload"/>. May return null (will not throw) if there is none.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductUploadRepository.InitializeInsertCommand(UL.Aria.Service.Domain.Entity.ProductUpload,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
                Initializes the add command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SmtpClientProvider">
            <summary>
                defines operations to fulfill email capabilities
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SmtpClientProvider.Send(System.Net.Mail.MailMessage,System.String@)">
            <summary>
                Sends the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="errorMessage"></param>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductCharacteristicRepository">
            <summary>
                Product Characteristic Repository
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductCharacteristicRepository">
            <summary>
                Product characteristic repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductCharacteristicRepository.FindByProductId(System.Nullable{System.Guid})">
            <summary>
                Finds the by product id.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductCharacteristicRepository.DeleteChildren(System.Guid)">
            <summary>
                Deletes the children.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductCharacteristicRepository.ConstructProductCharacteristic(System.Data.IDataReader)">
            <summary>
            Constructs the product characteristic.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductCharacteristicRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductCharacteristicRepository.FindByProductId(System.Nullable{System.Guid})">
            <summary>
                Finds the by product id.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductCharacteristicRepository.DeleteChildren(System.Guid)">
            <summary>
                Deletes the children.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductCharacteristicRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductCharacteristic,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
                Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">
                if set to <c>true</c> [is new].
            </param>
            <param name="isDirty">
                if set to <c>true</c> [is dirty].
            </param>
            <param name="isDelete">
                if set to <c>true</c> [is delete].
            </param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductCharacteristicRepository.ConstructProductCharacteristic(System.Data.IDataReader)">
            <summary>
            Constructs the product characteristic.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductCharacteristicRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductRepository">
            <summary>
                Product Repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductRepository.Create(UL.Aria.Service.Domain.Entity.Product)">
            <summary>
                Creates the specified product.
            </summary>
            <param name="product">The product.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductRepository.GetByProductFamilyId(System.Guid)">
            <summary>
                Gets all <see cref="T:UL.Aria.Service.Domain.Entity.Product"/>s that match the given product family id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductRepository.Remove(System.Guid)">
            <summary>
            Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductRepository.UpdateStatus(System.Guid,UL.Aria.Service.Contracts.Dto.ProductStatus,System.Nullable{System.DateTime})">
            <summary>
            Updates the status.
            </summary>
            <param name="productId">The product id.</param>
            <param name="status">The status.</param>
            <param name="submittedDateTime"></param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductRepository.GetStatus(System.Guid)">
            <summary>
            Gets the status.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductRepository.GetProductForStatusOnly(System.Guid)">
            <summary>
            Gets the status.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IScratchSpaceConfigurationSource">
            <summary>
            externalized representation of Configuration
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.IScratchSpaceConfigurationSource.Item(System.Guid)">
            <summary>
            Gets the full path.
            </summary>
            <param name="userid">The userid.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.IScratchSpaceConfigurationSource.Expiration">
            <summary>
            Gets the expiration.
            </summary>
            <value></value>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductFamilyFeatureAssociationRepository">
            <summary>
            Implements operations for creating product family feature associations.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAssociationRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase`1"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAssociationRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAssociation,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAssociationRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAssociationRepository.GetByFamilyId(System.Guid)">
            <summary>
            Gets the by family id.
            </summary>
            <param name="familyId">The family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureAssociationRepository.InitializeFindByFamilyCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find by family command.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductRepository">
            <summary>
                Repository for <see cref="T:UL.Aria.Service.Domain.Entity.Product"/> instances
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.#ctor(UL.Aria.Service.Repository.IProductCharacteristicRepository,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductRepository"/> class.
            </summary>
            <param name="productCharacteristicRepository">The product characteristic repository.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.GetByProductFamilyId(System.Guid)">
            <summary>
                Gets all <see cref="T:UL.Aria.Service.Domain.Entity.Product"/>s that match the given product family id.
            </summary>
            <param name="productFamilyId">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.Remove(System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.UpdateStatus(System.Guid,UL.Aria.Service.Contracts.Dto.ProductStatus,System.Nullable{System.DateTime})">
            <summary>
                Updates the status.
            </summary>
            <param name="productId">The product id.</param>
            <param name="status">The status.</param>
            <param name="submittedDateTime"></param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.GetStatus(System.Guid)">
            <summary>
                Gets the status.
            </summary>
            <param name="productId">The product id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.GetProductForStatusOnly(System.Guid)">
            <summary>
                DOES A NON-TRANSACTIONAL READ. Gets the product for status.
            </summary>
            <param name="productId">The product id.</param>
            <remarks>
                This is intended to get product <b>WHILE</b> it is being updated or inserted and hence an uncommitted read is
                desired.
                <b>DO NOT USE </b> for transactional sensitive operations.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.Product,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
                Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">
                if set to <c>true</c> [is new].
            </param>
            <param name="isDirty">
                if set to <c>true</c> [is dirty].
            </param>
            <param name="isDelete">
                if set to <c>true</c> [is delete].
            </param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.InitializeRemoveCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
                Initializes the remove command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.InitializeUpdateStatusCommand(System.Guid,UL.Aria.Service.Contracts.Dto.ProductStatus,System.Nullable{System.DateTime},Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
                Initializes the remove command.
            </summary>
            <param name="productId">The product id.</param>
            <param name="status">The status.</param>
            <param name="submittedDateTime">The submitted date time.</param>
            <param name="db">The db.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductRepository.InitializedGetByProductFamilyCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
                Initializes the find command.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Domain.ScratchFileInfo">
            <summary>
            represents meta data of the file maintained in the scratch space
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileInfo.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileInfo.Extension">
            <summary>
            Gets or sets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileInfo.CreationTime">
            <summary>
            Gets or sets the creation time.
            </summary>
            <value>
            The creation time.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileInfo.CreationTimeUtc">
            <summary>
            Gets or sets the creation time UTC.
            </summary>
            <value>
            The creation time UTC.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileInfo.LastAccessTime">
            <summary>
            Gets or sets the last access time.
            </summary>
            <value>
            The last access time.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileInfo.LastAccessTimeUtc">
            <summary>
            Gets or sets the last access time UTC.
            </summary>
            <value>
            The last access time UTC.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileInfo.LastWriteTime">
            <summary>
            Gets or sets the last write time.
            </summary>
            <value>
            The last write time.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileInfo.LastWriteTimeUtc">
            <summary>
            Gets or sets the last write time UTC.
            </summary>
            <value>
            The last write time UTC.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.ScratchFileInfo.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ScratchSpaceService">
            <summary>
            a class that implemements the contract for Scratch storage space whereby temporary files can be stored
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Implementation.ScratchSpaceService._scratchSpaceRepository">
            <summary>
            The _stratch space storage
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Implementation.ScratchSpaceService._mapperRegistry">
            <summary>
            The _mapper registry
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ScratchSpaceService.#ctor(UL.Aria.Service.Repository.IScratchSpaceRepository,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            constructor
            </summary>
            <param name="scratchSpaceRepository">The stratch space storage.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ScratchSpaceService.FetchAll(System.String)">
            <summary>
            Fetches all.
            </summary>
            <param name="userId"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ScratchSpaceService.FetchContent(System.String,System.String)">
            <summary>
            Fetches the content.
            </summary>
            <param name="userId">The user id.</param>
            <param name="fileId">The file id.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ScratchSpaceService.PublishContent(System.String,System.String,System.IO.Stream)">
            <summary>
            Publishes the content.
            </summary>
            <param name="userId">The user id.</param>
            <param name="fileName"></param>
            <param name="contentStream">The content stream.</param>
            <returns>
            return the Id for that file
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ScratchSpaceService.Delete(System.String)">
            <summary>
            Deletes the specified user id.
            </summary>
            <param name="userId">The user id.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.LocalScratchSpaceRepository">
            <summary>
            Conrete implementation of ScratchSpaceStorage for the Windows File System
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocalScratchSpaceRepository.#ctor(UL.Aria.Service.Repository.IScratchSpaceConfigurationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.LocalScratchSpaceRepository"/> class.
            </summary>
            <param name="configurationSource">The configuration source.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocalScratchSpaceRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.LocalScratchSpaceRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocalScratchSpaceRepository.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.LocalScratchSpaceRepository"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocalScratchSpaceRepository.FetchAll(System.Guid)">
            <summary>
            Fetches all.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocalScratchSpaceRepository.Selector(System.IO.FileInfo)">
            <summary>
            Selectors the specified file info.
            </summary>
            <param name="fileInfo">The file info.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocalScratchSpaceRepository.FetchContent(System.Guid,System.Guid)">
            <summary>
            Fetches the content.
            </summary>
            <param name="userId">The user id.</param>
            <param name="fileId">The file id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocalScratchSpaceRepository.PublishContent(System.Guid,System.String,System.IO.Stream)">
            <summary>
            Publishes the content.
            </summary>
            <param name="userId">The user id.</param>
            <param name="fileName"></param>
            <param name="contentStream">The content stream.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocalScratchSpaceRepository.Provision(System.Guid)">
            <summary>
            Provisions the specified userid.
            </summary>
            <param name="userid">The userid.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.LocalScratchSpaceRepository.Purge(System.Guid,System.Boolean)">
            <summary>
            Purges the specified user's files
            </summary>
            <param name="userid">The userid.</param>
            <param name="forceDelete">True to delete all files regardless of age</param>
        </member>
        <member name="P:UL.Aria.Service.Repository.LocalScratchSpaceRepository.Item(System.Guid)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified userid.
            </summary>
            <value>
            The <see cref="T:System.String"/>.
            </value>
            <param name="userid">The userid.</param>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.LocalScratchSpaceRepository.Expiration">
            <summary>
            Gets the expiration in minutes.
            </summary>
            <value></value>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductFamilyTemplateManager">
            <summary>
            Defines operations for managing templates for <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyTemplateManager.FetchProductFamilyTemplate(System.Guid,UL.Aria.Service.Contracts.Dto.ProductFamilyTemplate)">
            <summary>
            Fetches the template whose <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/> is identified by <paramref name="id"/>.
            </summary>
            <param name="id">The id of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/>.</param>
            <param name="templateType"></param>
            <returns>A <see cref="T:System.IO.Stream"/> with the contents of the template.</returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductFamilyTemplateManager">
            <summary>
                Implements operations for managing templates for <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/> objects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyTemplateManager.#ctor(UL.Aria.Service.Manager.IProductFamilyManager,UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Logging.ILogManager,UL.Aria.Service.Provider.IProductFamilyDocumentBuilderLocator,UL.Aria.Service.Manager.IProductFamilyCharacteristicGroupHelper,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductFamilyTemplateManager"/> class.
            </summary>
            <param name="productFamilyManager">The product family manager.</param>
            <param name="profileManager">The profile manager.</param>
            <param name="logManager">The log manager.</param>
            <param name="providerLocator">The provider locator.</param>
            <param name="productFamilyCharacteristicGroupHelper">The product family characteristic group helper.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyTemplateManager.FetchProductFamilyTemplate(System.Guid,UL.Aria.Service.Contracts.Dto.ProductFamilyTemplate)">
            <summary>
                Fetches the template whose <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/> is identified by <paramref name="id"/>.
            </summary>
            <param name="id">The id of the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/>.</param>
            <param name="templateType"></param>
            <returns>
                A <see cref="T:System.IO.Stream"/> with the contents of the template.
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Parser.IncomingOrderXmlParser">
            <summary>
                Class IncomingOrderXmlParser. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Parser.IncomingOrderXmlParser.Parse(System.String)">
            <summary>
                Parses the specified incoming order message.
            </summary>
            <param name="xml"></param>
            <returns>NewProjectDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Parser.IncomingOrderXmlParser.ProcessSubTree``1(``0,System.Xml.XmlReader,System.Action{``0,System.Xml.XmlReader,UL.Aria.Service.Domain.Entity.ContactRoleEnum},UL.Aria.Service.Domain.Entity.ContactRoleEnum)">
            <summary>
                Processes the sub tree.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dto">The dto.</param>
            <param name="xmlReader">The XML reader.</param>
            <param name="processSubTreeProcessor">The process sub tree processor.</param>
            <param name="contactRole">The contact role.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.ContainerManager">
            <summary>
                Class ContainerManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerManager.#ctor(UL.Aria.Service.Provider.ISearchProvider,UL.Aria.Service.Repository.IContainerRepository,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Domain.Entity.IAssetFieldMetadata,UL.Aria.Service.Repository.IProductRepository,UL.Aria.Service.Repository.IOrderRepository,UL.Aria.Service.Parser.IXmlParser,UL.Aria.Service.Manager.IContainerDefinitionBuilder,UL.Aria.Service.Repository.IAriaMetaDataRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ContainerManager"/> class.
            </summary>
            <param name="searchProvider">The search provider.</param>
            <param name="containerRepository">The container repository.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="assetFieldMetadata">The asset field metadata.</param>
            <param name="productRepository">The product provider.</param>
            <param name="orderRepository">The order repository.</param>
            <param name="incomingOrderParser">The incoming order parser.</param>
            <param name="containerDefinitionBuilder">The container definition builder.</param>
            <param name="ariaMetaDataRepository">The aria meta data repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerManager.Delete(System.Guid)">
            <summary>
                Deletes the specified container by id.
            </summary>
            <param name="containerId">The container id.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerManager.Create(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase)">
            <summary>
                Creates entity metadata.
            </summary>
            <param name="primarySearchEntityBase">The container.</param>
            <returns>The created content id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerManager.Create(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,System.Nullable{System.Guid})">
            <summary>
                Creates entity metadata.
            </summary>
            <param name="primarySearchEntityBase">The container.</param>
            <param name="containerId"></param>
            <returns>The created content id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerManager.FindById(System.Guid)">
            <summary>
                Fetches the specified container by id.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>Container.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerManager.Update(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Updates the specified container.
            </summary>
            <param name="container">The container.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerManager.GetAvailableUserClaims(System.Guid)">
            <summary>
                Gets all assignable user claims.
            </summary>
            <param name="containerId">The container id.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerManager.GetByCompanyId(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Get all containers by company id
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ContainerManager.Update(UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase,System.Nullable{System.Guid})">
            <summary>
                Updates the specified primary search entity base.
            </summary>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <param name="containerId">The container id.</param>
            <returns>Guid.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IIncomingOrderProvider">
            <summary>
                Interface IIncomingOrderProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IIncomingOrderProvider.PublishProjectCreationRequest(UL.Aria.Service.Domain.Entity.ProjectCreationRequest)">
            <summary>
            Publishes the project creation request.
            </summary>
            <param name="projectCreationRequest">The project creation request.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductFamilyFeatureProvider">
            <summary>
                Defines the product family feature provider.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.Get(System.Guid)">
            <summary>
            Gets the specified product family feature by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.Update(UL.Aria.Service.Domain.Entity.ProductFamilyFeature)">
            <summary>
            Updates the specified product family feature.
            </summary>
            <param name="productFamilyFeature">The product family feature.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.Create(UL.Aria.Service.Domain.Entity.ProductFamilyFeature)">
            <summary>
            Creates the specified product family feature.
            </summary>
            <param name="productFamilyFeature">The product family feature.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.GetByProductFamilyId(System.Guid)">
            <summary>
            Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.Get(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Gets the specified product family features ids.
            </summary>
            <param name="productFamilyIds">The product family attribute ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.AddOption(System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOption)">
            <summary>
            Adds the option.
            </summary>
            <param name="characteristicId">The characteristic id.</param>
            <param name="option">The option.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.RemoveOption(System.Guid)">
            <summary>
            Adds the option.
            </summary>
            <param name="optionId">The option id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.FindAllowedValues(System.Guid,System.Guid)">
            <summary>
            Gets the values.
            </summary>
            <param name="featureId">The feature id.</param>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.FindByScopeId(System.Guid)">
            <summary>
            Finds the by scope id.
            </summary>
            <param name="scopeId">The scope id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.GetValueDependenciesByFamilyAllowedFeatureId(System.Guid)">
            <summary>
            Finds the dependencies by family allowed feature id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.RemoveValueDependency(System.Guid)">
            <summary>
            Removes the dependency.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.GetValueDependency(System.Guid)">
            <summary>
            Gets the value dependency.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.AddValueDependency(UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency)">
            <summary>
            Adds the dependency.
            </summary>
            <param name="dependency">The dependency.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.FindAllowedValuesByFamily(System.Guid)">
            <summary>
            Finds the allowed values by family.
            </summary>
            <param name="familyId">The family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.GetValueDependenciesByParentFamilyAllowedFeatureValueId(System.Guid)">
            <summary>
            Gets the value dependencies by parent family allowed feature value id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyFeatureProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified feature.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeature">
            <summary>
                Product family feature.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeature.AllowChanges">
            <summary>
                Gets or sets a value indicating whether [allow changes].
            </summary>
            <value>
                <c>true</c> if [allow changes]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.ProductFamilyFeature.AllowedValues">
            <summary>
                Gets or sets the allowed values.
            </summary>
            <value>The allowed values.</value>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ProductFamilyFeatureService">
            <summary>
                Class ProductFamilyFeatureService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureService.#ctor(UL.Aria.Service.Manager.IProductFamilyFeatureManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ProductFamilyFeatureService"/> class.
            </summary>
            <param name="productFamilyFeatureManager">The ProductFamilyFeature manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory"></param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureService.Create(UL.Aria.Service.Contracts.Dto.ProductFamilyFeatureDto)">
            <summary>
                Creates the specified ProductFamilyFeature.
            </summary>
            <param name="productFamilyFeatureDto">The ProductFamilyFeature dto.</param>
            <returns>The created ProductFamilyFeature id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureService.Update(System.String,UL.Aria.Service.Contracts.Dto.ProductFamilyFeatureDto)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="productFamilyFeatureDto">The ProductFamilyFeature dto.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureService.GetById(System.String)">
            <summary>
                Gets the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeature"/>specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>ProductFamilyFeatureDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureService.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureService.GetByScope(System.String)">
            <summary>
            Gets features by scope.
            </summary>
            <param name="scopeids">The scopeids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyFeatureService.Remove(System.String)">
            <summary>
            Removes the specified unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ProductFamilyAttributeService">
            <summary>
            Class ProductFamilyAttributeService
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyAttributeService.#ctor(UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Manager.IProductFamilyAttributeManager,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ProductFamilyAttributeService"/> class.
            </summary>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="productFamilyAttributeManager">The product family attribute provider.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyAttributeService.Create(UL.Aria.Service.Contracts.Dto.ProductFamilyAttributeDto)">
            <summary>
            Creates the product family attribute.
            </summary>
            <param name="productFamilyAttributeDto">The product family attribute.</param>
            <returns>
            Product family attribute id.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyAttributeService.Update(System.String,UL.Aria.Service.Contracts.Dto.ProductFamilyAttributeDto)">
            <summary>
            Updates the product family attribute.
            </summary>
            <param name="id">The id.</param>
            <param name="productFamilyAttributeDto">The product family attribute.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyAttributeService.GetById(System.String)">
            <summary>
            Gets the product family attribute by id.
            </summary>
            <param name="id">The id.</param>
            <returns>
            Product family attribute data transfer object.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyAttributeService.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyAttributeService.GetByScope(System.String)">
            <summary>
            Gets attributes by scope.
            </summary>
            <param name="scopeids">The scopeids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyAttributeService.Remove(System.String)">
            <summary>
            Removes the specified unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProductFamilyManager">
            <summary>
                Product Family Manager Interface definition
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.Upload(System.IO.Stream)">
            <summary>
                Uploads the specified file to upload.
            </summary>
            <param name="fileToUpload">The file to upload.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.Create(UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Creates the specified product family.
            </summary>
            <param name="productFamily">The product family.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.Update(UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Updates the specified family.
            </summary>
            <param name="productFamily">The family.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.Get(System.Guid)">
            <summary>
                Gets the specified id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.GetAll">
            <summary>
                Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.GetProductFamiliesByBusinessUnit(System.Guid)">
            <summary>
                Gets the product families by business unit.
            </summary>
            <param name="businessUnitId">The expected GUID.</param>
            <returns>
                Readonly dictionary of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/> keyed by id.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.GetProductFamilyCharacteristics(System.Guid)">
            <summary>
                Gets the product family characteristics.
            </summary>
            <param name="productFamilyId">The expected id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.SaveProductFamilyAttributeAssociations(System.Guid,System.Collections.Generic.IList{System.Guid})">
            <summary>
                Saves the product family attribute associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <param name="productFamilyAttributeAssociationIds">The product family attribute association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.SaveProductFamilyFeatureAssociations(System.Guid,System.Collections.Generic.IList{System.Guid})">
            <summary>
                Saves the product family feature associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <param name="productFamilyFeatureAssociationIds">The product family feature association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.GetProductFamilyAttributeAssociations(System.Guid)">
            <summary>
                Gets the product family attribute associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.GetProductFamilyFeatureAssociations(System.Guid)">
            <summary>
                Gets the product family Feature associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.GetValueDependenciesByFamilyAllowedFeatureId(System.Guid)">
            <summary>
                Gets the value dependencies by family allowed feature id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.GetAllowedValues(System.Guid,System.Guid)">
            <summary>
                Gets the values.
            </summary>
            <param name="featureId">The feature id.</param>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.GetAllowedValuesByFamily(System.Guid)">
            <summary>
                Gets the allowed values by family.
            </summary>
            <param name="familyId">The family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.GetDependencies(System.Guid,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAssociation})">
            <summary>
                Gets the dependencies.
            </summary>
            <param name="familiyId">The familiy id.</param>
            <param name="featureAssociations">The feature associations.</param>
            <returns>List{ProductFamilyFeatureAllowedValueDependencyMapping}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProductFamilyManager.GetDetail(System.Guid)">
            <summary>
                Get the detail.
            </summary>
            <param name="id">The id.</param>
            <returns>ProductFamilyDetail.</returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ProductFamilyService">
            <summary>
                Product Family Service implementation.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyService.#ctor(UL.Aria.Service.Manager.IProductFamilyManager,UL.Aria.Service.Manager.IProductFamilyTemplateManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Manager.IProductFamilyImportManager)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ProductFamilyService"/> class.
            </summary>
            <param name="productFamilyManager">The product family manager.</param>
            <param name="productFamilyTemplateManager">The product family template manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="productFamilyImportManager">The product family import manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyService.Create(UL.Aria.Service.Contracts.Dto.ProductFamilyDetailDto)">
            <summary>
                Creates the specified product family from the create request.
            </summary>
            <param name="productFamilyCreateUpdateRequest">The product family create request.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyService.Update(UL.Aria.Service.Contracts.Dto.ProductFamilyDetailDto)">
            <summary>
                Updates the specified product family from the update request.
            </summary>
            <param name="productFamilyCreateUpdateRequest">The product family update request.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyService.GetProductFamilyById(System.String)">
            <summary>
                Gets the product family by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyService.GetProductFamilyDetailById(System.String)">
            <summary>
            Gets the product family detail by id.
            </summary>
            <param name="id">The id.</param>
            <returns>ProductFamilyDetailDto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyService.GetProductFamilyTemplate(System.String,System.String)">
            <summary>
                Gets the product family template.
            </summary>
            <param name="id">The id.</param>
            <param name="template"></param>
            <returns>
                A <see cref="T:System.IO.Stream"/> with the template contents.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyService.GetProductFamiliesByBusinessUnit(System.String)">
            <summary>
                Gets the product families by business unit.
            </summary>
            <param name="businessUnitId">The business unit id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyService.GetProductFamilies">
            <summary>
                Gets the product families.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyService.SaveProductFamilyAttributeAssociations(System.String,System.Collections.Generic.IList{System.Guid})">
            <summary>
                Saves the product family attribute associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <param name="productFamilyAttributeAssociationIds">The product family attribute association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProductFamilyService.Upload(System.IO.Stream)">
            <summary>
                Uploads the specified file to upload.
            </summary>
            <param name="fileToUpload">The file to upload.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.CompanyService">
            <summary>
                Service for Company
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CompanyService.#ctor(UL.Aria.Service.Manager.ICompanyManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Configuration.IServiceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.CompanyService"/> class.
            </summary>
            <param name="companyManager">The company manager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="serviceConfiguration">The service configuration.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CompanyService.GetULCompanyId">
            <summary>
            Gets the ul company identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CompanyService.FetchAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CompanyService.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CompanyService.Search(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Search based on the provided criteria
            </summary>
            <param name="searchCriteria"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CompanyService.FetchById(System.String)">
            <summary>
                Gets the company by id.
            </summary>
            <param name="id">The id.</param>
            <returns>
                Company Dto
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CompanyService.FetchByExternalId(System.String)">
            <summary>
            Gets the company by external id.
            </summary>
            <param name="externalId">The external id.</param>
            <returns>Company Dto.</returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CompanyService.Create(UL.Aria.Service.Contracts.Dto.CompanyDto)">
            <summary>
                Publishes the company.
            </summary>
            <param name="company">The company.</param>
            <returns>
                The published company
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CompanyService.Update(UL.Aria.Service.Contracts.Dto.CompanyDto)">
            <summary>
                Updates the company.
            </summary>
            <param name="company">The company.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.CompanyService.Delete(System.String)">
            <summary>
                Deletes the company by id.
            </summary>
            <param name="id">The id.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Implementation.IUserBusinessClaimServiceValidator">
            <summary>
            Validates and formats parameters for claims.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.IUserBusinessClaimServiceValidator.TryParseSearchParameters(System.String,System.String,UL.Aria.Service.Domain.Entity.BusinessClaim@,System.String@)">
            <summary>
            Parses the search parameters.
            </summary>
            <param name="claim">The claim.</param>
            <param name="loginId">The user id.</param>
            <param name="mappedDto">The mapped dto.</param>
            <param name="validatedLoginId"></param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.ProfileService">
            <summary>
            Profile service class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.#ctor(UL.Aria.Service.Manager.IProfileManager,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IUserBusinessClaimProvider,UL.Aria.Service.Manager.ISmtpClientManager,UL.Aria.Service.Configuration.IServiceConfiguration,UL.Enterprise.Foundation.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.ProfileService"/> class.
            </summary>
            <param name="profileManager">The profileManager.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="claimProvider">The claim provider.</param>
            <param name="smtpClientManager">The SMTP client manager.</param>
            <param name="serviceConfiguration">The service configuration.</param>
            <param name="logManager"></param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.FetchByIdOrUserName(System.String)">
            <summary>
                Gets the profile by id.
            </summary>
            <param name="id">The id.</param>
            <returns>
                ProfileDto
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.FetchAllByCompanyId(System.String)">
            <summary>
                Gets the profiles by company id.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.FetchImageById(System.String)">
            <summary>
                Gets the profile by id.
            </summary>
            <param name="id">The id.</param>
            <returns>
                ProfileDto
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.Create(UL.Aria.Service.Contracts.Dto.ProfileBasicDto,System.Guid)">
            <summary>
                Adds the company user.
            </summary>
            <param name="profile">The profile.</param>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.Update(UL.Aria.Service.Contracts.Dto.ProfileBasicDto,System.String)">
            <summary>
                Updates the specified profile.
            </summary>
            <param name="profile">The profile.</param>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.Delete(System.String)">
            <summary>
            Removes the User
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.Search(UL.Aria.Service.Contracts.Dto.ProfileSearchSpecificationDto)">
            <summary>
                Searches the specified profile search specification dto.
            </summary>
            <param name="searchSpecification">The search specification.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.GetTermsAndConditions(System.String)">
            <summary>
            Gets the terms and conditions.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.AcceptTermsAndConditions(UL.Aria.Service.Contracts.Dto.TermsAndConditionsDto,System.Guid,System.Boolean)">
            <summary>
            Accepts the terms and conditions.
            </summary>
            <param name="termsAndConditionsDto">The terms and conditions dto.</param>
            <param name="userId">The user id.</param>
            <param name="hasAccepted">if set to <c>true</c> [has accepted].</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.SearchCompanyUsers(System.String,UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Search based on the provided company id and criteria.
            </summary>
            <param name="companyId"></param>
            <param name="searchCriteria"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.FetchFavoriteSearches">
            <summary>
            Fetches the saved searches by user id.
            </summary>
            <returns>
            List of save search data transfer objects.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.FetchFavoriteSearchesByLocation(System.String)">
            <summary>
            Fetches the saved searches by user id and location.
            </summary>
            <param name="location">The location URI.</param>
            <returns>
            List of save search data transfer objects.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.FetchActiveFavoriteSearchesByLocation(System.String)">
            <summary>
            Fetches the active favorite searches by location.
            </summary>        
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.FetchAvailableFavoriteSearchesByLocation(System.String)">
            <summary>
            Fetches the available favorite searches by location.
            </summary>        
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.CreateFavoriteSearch(UL.Aria.Service.Contracts.Dto.FavoriteSearchDto)">
            <summary>
            Creates the saved search.
            </summary>
            <param name="favoriteSearchDto">The saved search dto.</param>
            <returns>
            Created saved search.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.UpdateFavoriteSearch(System.String,UL.Aria.Service.Contracts.Dto.FavoriteSearchDto)">
            <summary>
            Updates the saved search.
            </summary>
            <param name="favoriteSearchId"></param>
            <param name="favoriteSearchDto">The saved search dto.</param>
            <returns>
            Updated saved search.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.DeleteFavoriteSearch(System.String)">
            <summary>
            Deletes the saved search.
            </summary>
            <param name="favoriteSearchId">The saved search id.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.SearchFavoriteSearches(UL.Aria.Service.Contracts.Dto.SearchCriteriaDto)">
            <summary>
            Searches the favorite searches.
            </summary>
            <param name="searchCriteriaDto">The search criteria dto.</param>
            <returns>
            Matching search result for favorite search criteris specified.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.FetchFavoriteSearchById(System.String)">
            <summary>
            Fetches the favorite searches by id.
            </summary>
            <param name="favoriteSearchId">The favorite search id.</param>
            <returns>
            Favorite search with matching id.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.PartialUpdateFavoriteSearch(System.String,UL.Aria.Service.Contracts.Dto.FavoriteSearchDto)">
            <summary>
            Partials the update favorite search.
            </summary>
            <param name="favoriteSearchId">The favorite search id.</param>
            <param name="favoriteSearchDto">The favorite search dto.</param>
            <returns>
            Updated favorite search.
            </returns>
            <remarks>
            This operation is a partial update, so not all values contained in the favorite search DTO will be respected.  Attempts to update an unsupported member will throw an exception.
            </remarks>
        </member>
        <member name="M:UL.Aria.Service.Implementation.ProfileService.FetchUsersByTeamId(System.String,System.String,System.String)">
            <summary>
            Fetches the list of user whom belong to the specified team.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
            <param name="includeTeamMemberTeams">if set to <c>true</c> Includes the Team members of teams owned by team members recursively.</param>
            <param name="maxDepth">The maximum depth of recursion.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.UserBusinessClaimService">
            <summary>
            Service for User Business Claims
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserBusinessClaimService.#ctor(UL.Aria.Service.Provider.IUserBusinessClaimProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Aria.Service.Implementation.IUserBusinessClaimServiceValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.UserBusinessClaimService"/> class.
            </summary>
            <param name="claimProvider">The claim provider.</param>
            <param name="mapperRegistry">The mapper registry.</param>
            <param name="userBusinessClaimServiceValidator">The user business claim service validator.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserBusinessClaimService.Add(UL.Aria.Service.Contracts.Dto.UserBusinessClaimDto)">
            <summary>
            Adds a user role..
            </summary>
            <param name="userClaimDto">The user role dto.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserBusinessClaimService.Remove(System.String)">
            <summary>
            Removes the specified user claim.
            </summary>
            <param name="userClaimId"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserBusinessClaimService.GetUserClaimValues(System.String,System.String)">
            <summary>
            Gets the user claim values.
            </summary>
            <param name="claim"></param>
            <param name="loginId"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserBusinessClaimService.GetUserClaimHistory(System.String,System.String)">
            <summary>
            Gets the user claim history.
            </summary>
            <param name="claim"></param>
            <param name="userId">To string.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserBusinessClaimService.GetUserClaimsByValue(System.String)">
            <summary>
            Finds the claims.
            </summary>
            <param name="claimValue">The claim value.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserBusinessClaimService.GetUserClaimsByClaimAndValue(System.String,System.String)">
            <summary>
            Finds the user claim values.
            </summary>
            <param name="claim">The claim.</param>
            <param name="claimValue">The claim value.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Implementation.UserBusinessClaimServiceValidator">
            <summary>
            Validator for User business claim.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserBusinessClaimServiceValidator.#ctor(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Implementation.UserBusinessClaimServiceValidator"/> class.
            </summary>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Implementation.UserBusinessClaimServiceValidator.TryParseSearchParameters(System.String,System.String,UL.Aria.Service.Domain.Entity.BusinessClaim@,System.String@)">
            <summary>
            Parses the search parameters.
            </summary>
            <param name="claim">The claim.</param>
            <param name="loginId">The user id.</param>
            <param name="mappedDto">The mapped dto.</param>
            <param name="validatedLoginId"></param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.CompanyManager">
            <summary>
            Manager for Companies.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Manager.ICompanyManager">
            <summary>
            Interface defining a Company Manager class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICompanyManager.FetchById(System.Guid)">
            <summary>
            Gets the company by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICompanyManager.FetchByExternalId(System.String)">
            <summary>
            Gets the company by external id.
            </summary>
            <param name="externalId">The external id.</param>
            <returns>Company.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICompanyManager.Create(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Publishes the company.
            </summary>
            <param name="company">The company.</param>
            <returns>The published company</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICompanyManager.Update(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Updates the company.
            </summary>
            <param name="company">The company.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICompanyManager.Delete(System.Guid)">
            <summary>
            Deletes the company by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICompanyManager.FetchAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICompanyManager.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ICompanyManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.CompanyManager.#ctor(UL.Aria.Service.Provider.ICompanyProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.CompanyManager"/> class.
            </summary>
            <param name="companyProvider">The company provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.CompanyManager.FetchById(System.Guid)">
            <summary>
            Gets the company by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.CompanyManager.FetchByExternalId(System.String)">
            <summary>
            Gets the company by external id.
            </summary>
            <param name="externalId">The external id.</param>
            <returns>Company.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.CompanyManager.Create(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Publishes the company.
            </summary>
            <param name="company">The company.</param>
            <returns>
            The published company
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.CompanyManager.Update(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Updates the company.
            </summary>
            <param name="company">The company.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.CompanyManager.Delete(System.Guid)">
            <summary>
            Deletes the company by id.
            </summary>
            <param name="id">The id.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.CompanyManager.FetchAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.CompanyManager.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.CompanyManager.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.IProfileManager">
            <summary>
            Profile manager interface.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.FetchById(System.Guid)">
            <summary>
            Gets the profile by id.
            </summary>
            <param name="id">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.FetchByUserName(System.String)">
            <summary>
            Gets the name of the profile by user.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.FetchAllByCompanyId(System.Guid)">
            <summary>
            Gets the profiles by company id.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.FetchImageById(System.Guid)">
            <summary>
            Gets the profile image by id.
            </summary>
            <param name="id">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.Create(UL.Aria.Service.Domain.Entity.ProfileEditBasicBo,System.Guid)">
            <summary>
            Adds the company user.
            </summary>
            <param name="profile">The profile.</param>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.Delete(System.Guid)">
            <summary>
            Removes the user.
            </summary>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.Search(UL.Aria.Service.Domain.Entity.ProfileSearchSpecification)">
            <summary>
            Searches the specified search specification.
            </summary>
            <param name="searchSpecification">The search specification.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.Update(UL.Aria.Service.Domain.Entity.ProfileEditBasicBo)">
            <summary>
            Updates the specified profile.
            </summary>
            <param name="profile">The profile.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.GetTermsAndConditions(System.Guid)">
            <summary>
            Gets the terms and conditions.
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.AcceptTermsAndConditions(UL.Aria.Service.Domain.Entity.TermsAndConditions,System.Guid,System.Boolean)">
            <summary>
            Accepts the terms and conditions.
            </summary>
            <param name="termsAndConditions">The terms and conditions.</param>
            <param name="userId">The user id.</param>
            <param name="hasAccepted">if set to <c>true</c> [has accepted].</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.FetchFavoriteSearches">
            <summary>
            Fetches the saved searches by user id.
            </summary>
            <returns>Saved search listing.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.FetchFavoriteSearchesByLocation(System.String)">
            <summary>
            Fetches the saved searches by user id and location uri.
            </summary>
            <param name="location">The location.</param>
            <returns>Saved search listing.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.CreateFavoriteSearch(UL.Aria.Service.Domain.Entity.FavoriteSearch)">
            <summary>
            Creates the saved search.
            </summary>
            <param name="favoriteSearch">The saved search.</param>
            <returns>Created saved search entity.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.UpdateFavoriteSearch(UL.Aria.Service.Domain.Entity.FavoriteSearch)">
            <summary>
            Updates the saved search.
            </summary>
            <param name="favoriteSearch">The saved search.</param>
            <returns>Updated saved search entity.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.DeleteFavoriteSearch(System.Guid)">
            <summary>
            Deletes the saved search.
            </summary>
            <param name="favoriteSearchId">The saved search id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.SearchFavoriteSearches(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the favorite searches.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>Matching favorite search search result listing.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.FetchFavoriteSearchById(System.Guid)">
            <summary>
            Fetches the favorite search by id.
            </summary>
            <param name="favoriteSearchId">The favorite search id.</param>
            <returns>Favorite search with matching id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.PartialUpdateFavoriteSearch(UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch)">
            <summary>
            Partials the update favorite search.
            </summary>
            <param name="partialUpdateFavoriteSearch">The partial update favorite search.</param>
            <returns>Updated favorite search.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.FetchActiveFavoriteSearchesByLocation(System.String)">
            <summary>
            Fetches the active favorite searches by location.
            </summary>        
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.FetchAvailableFavoriteSearchesByLocation(System.String)">
            <summary>
            Fetches the available favorite searches by location.
            </summary>        
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.IProfileManager.FetchUsersByTeamId(System.Guid,System.Boolean,System.Int32)">
            <summary>
            Fetches the list of user whom belong to the specified team.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
            <param name="includeTeamMemberTeams">if set to <c>true</c> Includes the Team members of teams owned by team members recursively.</param>
            <param name="maxDepth">The maximum depth of recursion.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProductFamilyManager">
            <summary>
                Class ProductFamilyManager
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.#ctor(UL.Aria.Service.Provider.IProductFamilyProvider,UL.Aria.Service.Provider.IProductFamilyFeatureProvider,UL.Aria.Service.Provider.IProductFamilyAttributeProvider,UL.Aria.Service.Manager.IProductFamilyImportManager,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProductFamilyManager"/> class.
            </summary>
            <param name="productFamilyProvider">The product family provider.</param>
            <param name="productFamilyFeatureProvider">The product family feature provider.</param>
            <param name="productFamilyAttributeProvider">The product family attribute provider.</param>
            <param name="importManager">The import manager.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.Upload(System.IO.Stream)">
            <summary>
                Uploads the specified file to upload.
            </summary>
            <param name="fileToUpload">The file to upload.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.Create(UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Creates the specified product family.
            </summary>
            <param name="productFamily">The product family.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.Update(UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Updates the specified family.
            </summary>
            <param name="productFamily">The family.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetDetail(System.Guid)">
            <summary>
                Get the details.
            </summary>
            <param name="id">The id.</param>
            <returns>ProductFamilyDetail.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetDependenciesForDto(System.Guid,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAssociation})">
            <summary>
                Gets the dependencies.
            </summary>
            <param name="familiyId">The familiy id.</param>
            <param name="featureAssociations">The feature associations.</param>
            <returns>List{ProductFamilyFeatureAllowedValueDependencyMapping}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetDependencies(System.Guid,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAssociation})">
            <summary>
                Gets the dependencies.
            </summary>
            <param name="familiyId">The familiy id.</param>
            <param name="featureAssociations">The feature associations.</param>
            <returns>List{ProductFamilyFeatureAllowedValueDependencyMapping}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.Get(System.Guid)">
            <summary>
                Gets the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>ProductFamily.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetAll">
            <summary>
                Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetProductFamiliesByBusinessUnit(System.Guid)">
            <summary>
                Gets the product families by business unit.
            </summary>
            <param name="businessUnitId">The expected GUID.</param>
            <returns>
                Readonly dictionary of <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamily"/> keyed by id.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetProductFamilyCharacteristics(System.Guid)">
            <summary>
                Gets the product family characteristics.
            </summary>
            <param name="productFamilyId">The expected id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.SaveProductFamilyAttributeAssociations(System.Guid,System.Collections.Generic.IList{System.Guid})">
            <summary>
                Saves the product family attribute associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <param name="productFamilyAttributeAssociationIds">The product family attribute association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.SaveProductFamilyFeatureAssociations(System.Guid,System.Collections.Generic.IList{System.Guid})">
            <summary>
                Saves the product family feature associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <param name="productFamilyFeatureAssociationIds">The product family feature association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetProductFamilyAttributeAssociations(System.Guid)">
            <summary>
                Gets the product family attribute associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetProductFamilyFeatureAssociations(System.Guid)">
            <summary>
                Gets the product family Feature associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetValueDependenciesByFamilyAllowedFeatureId(System.Guid)">
            <summary>
                Gets the value dependencies by family allowed feature id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetAllowedValues(System.Guid,System.Guid)">
            <summary>
                Gets the values.
            </summary>
            <param name="featureId">The feature id.</param>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProductFamilyManager.GetAllowedValuesByFamily(System.Guid)">
            <summary>
                Gets the allowed values by family.
            </summary>
            <param name="familyId">The family id.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Manager.ProfileManager">
            <summary>
                Managees the Profile info from the repository and possibly applies business rules and validation
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Manager.ProfileManager._profileRepository">
            <summary>
                The _profile repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.#ctor(UL.Aria.Service.Repository.IProfileRepository,UL.Aria.Service.Manager.ICompanyManager,UL.Aria.Common.BusinessMessage.IBusinessMessageProvider,UL.Enterprise.Foundation.Mapper.IMapperRegistry,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.IAcceptanceClaimManager,UL.Aria.Service.Provider.IFavoriteSearchProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Manager.ProfileManager"/> class.
            </summary>
            <param name="profileRepository">The profile repository.</param>
            <param name="companyManager">The company manager.</param>
            <param name="businessMessageProvider">The business message provider.</param>
            <param name="mapper">The mapper.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="acceptanceClaimManager">The acceptance claim manager.</param>
            <param name="favoriteSearchProvider">The saved search provider.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.FetchById(System.Guid)">
            <summary>
                Gets the profile by id.
            </summary>
            <param name="profileId">The profile id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.FetchByUserName(System.String)">
            <summary>
                Gets the name of the profile by user.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.FetchAllByCompanyId(System.Guid)">
            <summary>
                Gets the profiles by company id.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.FetchImageById(System.Guid)">
            <summary>
                Gets the profile image by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.Create(UL.Aria.Service.Domain.Entity.ProfileEditBasicBo,System.Guid)">
            <summary>
                Adds the company user.
            </summary>
            <param name="profile">The profile.</param>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.Update(UL.Aria.Service.Domain.Entity.ProfileEditBasicBo)">
            <summary>
                Updates the specified profile.
            </summary>
            <param name="profile">The profile.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.Delete(System.Guid)">
            <summary>
                Removes the user.
            </summary>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.Search(UL.Aria.Service.Domain.Entity.ProfileSearchSpecification)">
            <summary>
                Searches the specified search specification.
            </summary>
            <param name="searchSpecification">The search specification.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.GetTermsAndConditions(System.Guid)">
            <summary>
                Gets the terms and conditions.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.AcceptTermsAndConditions(UL.Aria.Service.Domain.Entity.TermsAndConditions,System.Guid,System.Boolean)">
            <summary>
                Accepts the terms and conditions.
            </summary>
            <param name="termsAndConditions">The terms and conditions.</param>
            <param name="userId">The user id.</param>
            <param name="hasAccepted">if set to <c>true</c> [has accepted].</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.FetchFavoriteSearches">
            <summary>
                Fetches the saved searches by user id.
            </summary>
            <returns>Saved search listing.</returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.FetchFavoriteSearchesByLocation(System.String)">
            <summary>
                Fetches the saved searches by user id and location uri.
            </summary>
            <param name="location">The location.</param>
            <returns>
                Saved search listing.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.FetchActiveFavoriteSearchesByLocation(System.String)">
            <summary>
            Fetches the active favorite searches by location.
            </summary>        
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.FetchAvailableFavoriteSearchesByLocation(System.String)">
            <summary>
            Fetches the available favorite searches by location.
            </summary>        
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.CreateFavoriteSearch(UL.Aria.Service.Domain.Entity.FavoriteSearch)">
            <summary>
                Creates the saved search.
            </summary>
            <param name="favoriteSearch">The saved search.</param>
            <returns>
                Created saved search entity.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.UpdateFavoriteSearch(UL.Aria.Service.Domain.Entity.FavoriteSearch)">
            <summary>
                Updates the saved search.
            </summary>
            <param name="favoriteSearch">The saved search.</param>
            <returns>
                Updated saved search entity.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.DeleteFavoriteSearch(System.Guid)">
            <summary>
                Deletes the saved search.
            </summary>
            <param name="favoriteSearchId">The saved search id.</param>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.SearchFavoriteSearches(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches the favorite searches.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns>
                Matching favorite search search result listing.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.FetchFavoriteSearchById(System.Guid)">
            <summary>
                Fetches the favorite search by id.
            </summary>
            <param name="favoriteSearchId">The favorite search id.</param>
            <returns>
                Favorite search with matching id.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.PartialUpdateFavoriteSearch(UL.Aria.Service.Domain.Entity.PartialUpdateFavoriteSearch)">
            <summary>
                Partials the update favorite search.
            </summary>
            <param name="partialUpdateFavoriteSearch">The partial update favorite search.</param>
            <returns>
                Updated favorite search.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Manager.ProfileManager.FetchUsersByTeamId(System.Guid,System.Boolean,System.Int32)">
            <summary>
            Fetches the list of user whom belong to the specified team.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
            <param name="includeTeamMemberTeams">if set to <c>true</c> Includes the Team members of teams owned by team members recursively.</param>
            <param name="maxDepth">The maximum depth of recursion.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator">
            <summary>
                Business message user claim provider decorator to provide logging services.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator.#ctor(UL.Aria.Service.Claim.Provider.IUserClaimProvider,UL.Aria.Common.BusinessMessage.IBusinessMessageProvider,UL.Aria.Service.Claim.Data.IUserClaimRepository)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator"/> class.
            </summary>
            <param name="instanceToWrap">The instance to wrap.</param>
            <param name="businessMessageProvider">The business message provider.</param>
            <param name="userClaimRepository">The user claim repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator.Add(UL.Aria.Service.Claim.Domain.UserClaim)">
            <summary>
                Adds the specified user claim.
            </summary>
            <param name="userClaim">The user claim.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator.Remove(System.Guid)">
            <summary>
                Removes the specified user claim id.
            </summary>
            <param name="userClaimId">The user claim id.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator.GetUserClaimValues(System.Uri,System.String)">
            <summary>
                Gets the user claim values.
            </summary>
            <param name="claimId">The claim id.</param>
            <param name="loginId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator.GetUserClaimsByValue(System.String)">
            <summary>
                Finds the user claim values.
            </summary>
            <param name="claimValue">The claim value.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator.GetUserClaimsByIdAndValue(System.String,System.String)">
            <summary>
                Finds the user claim values.
            </summary>
            <param name="claimId">The claim id.</param>
            <param name="claimValue">The claim value.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator.GetUserClaimHistory(System.Uri,System.String)">
            <summary>
                Gets the user claim history.
            </summary>
            <param name="claimId">The claim id.</param>
            <param name="loginId"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator.GetUserClaimValues(System.String)">
            <summary>
                Gets all the user claim values for a user.
            </summary>
            <param name="loginId"></param>
            <returns>
                All the user claims values for a particular user.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.BusinessMessageUserClaimProviderDecorator.RemoveUserClaims(System.String)">
            <summary>
            Removes the user claims.
            </summary>
            <param name="loginId"></param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IncomingOrderProvider">
            <summary>
                Class IncomingOrderProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderProvider.#ctor(UL.Aria.Service.Repository.IIncomingOrderRepository,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Provider.IProjectProvider,UL.Enterprise.Foundation.Logging.ILogManager,UL.Aria.Common.BusinessMessage.IBusinessMessageProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Manager.ISmtpClientManager,UL.Aria.Service.Manager.INotificationManager,UL.Aria.Service.Notifications.IOrderNotificationCheckManager,UL.Aria.Service.Notifications.IOrderLineNotificationCheckManager,UL.Aria.Service.Provider.IAssetProvider,UL.Aria.Service.Provider.IInboundMessageProvider,UL.Aria.Service.Provider.IProjectTemplateTaskCreationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.IncomingOrderProvider"/> class.
            </summary>
            <param name="incomingOrderRepository">The incoming order repository.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="projectProvider">The project provider.</param>
            <param name="logManager">The log manager.</param>
            <param name="businessMessageProvider">The business message provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="smtpClientManager">SMTP Client Manager</param>
            <param name="notificationManager">The notification manager.</param>
            <param name="orderNotificationCheckManager">The order notification check manager.</param>
            <param name="orderLineNotificationCheckManager">The order line notification check manager.</param>
            <param name="assetProvider">The asset provider.</param>
            <param name="inboundMessageProvider">The inbound message provider.</param>
            <param name="projectTemplateTaskCreationManager">The project template task creation manager.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IncomingOrderProvider.PublishProjectCreationRequest(UL.Aria.Service.Domain.Entity.ProjectCreationRequest)">
            <summary>
                Publishes the project creation request.
            </summary>
            <param name="projectCreationRequest">The project creation request.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductFamilyAttributeProvider">
            <summary>
            Class ProductFamilyAttributeProvider
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductFamilyAttributeProvider">
            <summary>
            Interface IProductFamilyAttributeProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyAttributeProvider.Create(UL.Aria.Service.Domain.Entity.ProductFamilyAttribute)">
            <summary>
            Creates the specified product family attribute.
            </summary>
            <param name="productFamilyAttribute">The product family attribute.</param>
            <returns>
            Guid.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyAttributeProvider.Update(UL.Aria.Service.Domain.Entity.ProductFamilyAttribute)">
            <summary>
            Updates the specified product family attribute.
            </summary>
            <param name="productFamilyAttribute">The product family attribute.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyAttributeProvider.Get(System.Guid)">
            <summary>
                Gets the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>Characteristic.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyAttributeProvider.GetByProductFamilyId(System.Guid)">
            <summary>
            Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyAttributeProvider.Get(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Gets the specified product family attribute ids.
            </summary>
            <param name="productFamilyIds">The product family attribute ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyAttributeProvider.AddOption(System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOption)">
            <summary>
            Adds the option.
            </summary>
            <param name="characteristicId">The characteristic id.</param>
            <param name="option">The option.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyAttributeProvider.RemoveOption(System.Guid)">
            <summary>
            Adds the option.
            </summary>
            <param name="optionId">The option id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyAttributeProvider.FindByScopeId(System.Guid)">
            <summary>
            Finds the by scope id.
            </summary>
            <param name="scopeId">The scope id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyAttributeProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyAttributeProvider.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.#ctor(UL.Aria.Service.Repository.IProductFamilyAttributeRepository,UL.Aria.Service.Repository.IProductAttributeOptionRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProductFamilyAttributeProvider"/> class.
            </summary>
            <param name="productFamilyAttributeRepository">The product family attribute repository.</param>
            <param name="optionRepository"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.Create(UL.Aria.Service.Domain.Entity.ProductFamilyAttribute)">
            <summary>
            Creates the specified product family attribute.
            </summary>
            <param name="productFamilyAttribute">The product family attribute.</param>
            <returns>
            Guid.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.Update(UL.Aria.Service.Domain.Entity.ProductFamilyAttribute)">
            <summary>
            Updates the specified product family attribute.
            </summary>
            <param name="productFamilyAttribute">The product family attribute.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.Get(System.Guid)">
            <summary>
            Gets the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>
            Characteristic.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.AddOption(System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOption)">
            <summary>
            Adds the option.
            </summary>
            <param name="characteristicId">The characteristic id.</param>
            <param name="option">The option.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.RemoveOption(System.Guid)">
            <summary>
            Adds the option.
            </summary>
            <param name="optionId">The option id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.FindByScopeId(System.Guid)">
            <summary>
            Finds the by scope id.
            </summary>
            <param name="scopeId">The scope id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.GetByProductFamilyId(System.Guid)">
            <summary>
            Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns>Product family attribute list.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.Get(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Gets the specified product family attribute ids.
            </summary>
            <param name="productFamilyIds">The product family attribute ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyAttributeProvider.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.CompanyProvider">
            <summary>
                Company provider class.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.ICompanyProvider">
            <summary>
            Provider for Companies
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICompanyProvider.FetchById(System.Guid)">
            <summary>
            Gets the company by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICompanyProvider.FetchByExternalId(System.String)">
            <summary>
            Gets the company by external id.
            </summary>
            <param name="externalId">The external id.</param>
            <returns>Company.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICompanyProvider.Create(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Publishes the company.
            </summary>
            <param name="company">The company.</param>
            <returns>The published company</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICompanyProvider.Update(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Updates the company.
            </summary>
            <param name="company">The company.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICompanyProvider.Delete(System.Guid)">
            <summary>
            Deletes the company by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICompanyProvider.FetchAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICompanyProvider.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ICompanyProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.CompanyProvider.#ctor(UL.Aria.Service.Repository.ICompanyRepository,UL.Aria.Common.BusinessMessage.IBusinessMessageProvider,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.CompanyProvider"/> class.
            </summary>
            <param name="companyRepository">The company repository.</param>
            <param name="businessMessageProvider">The business message provider.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.CompanyProvider.FetchById(System.Guid)">
            <summary>
                Gets the company by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.CompanyProvider.FetchByExternalId(System.String)">
            <summary>
                Gets the company by external id.
            </summary>
            <param name="externalId">The external id.</param>
            <returns>Company.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.CompanyProvider.Create(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
                Publishes the company.
            </summary>
            <param name="company">The company.</param>
            <returns>
                The published company
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.CompanyProvider.Update(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
                Updates the company.
            </summary>
            <param name="company">The company.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.CompanyProvider.Delete(System.Guid)">
            <summary>
                Deletes the company by id.
            </summary>
            <param name="id">The id.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.CompanyProvider.FetchAll">
            <summary>
                Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.CompanyProvider.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.CompanyProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ContainerProvider">
            <summary>
                Container provider implementation for entities like products, orders and projects.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContainerProvider.#ctor(UL.Aria.Service.Repository.IContainerRepository)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ContainerProvider"/> class.
            </summary>
            <param name="containerRepository">The container repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContainerProvider.Create(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Creates the specified container.
            </summary>
            <param name="container">The container.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContainerProvider.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContainerProvider.GetByCompanyId(System.Guid)">
            <summary>
                Gets the by company id.
            </summary>
            <param name="companyId">The company id.</param>
            <returns>IEnumerable{Container}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContainerProvider.Update(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Updates the specified container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContainerProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified container id.
            </summary>
            <param name="containerId">The container id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContainerProvider.DeleteList(System.Guid,System.String)">
            <summary>
            Deletes the list.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ContainerProvider.FetchByPrimarySearchEntityId(System.Guid)">
            <summary>
            Fetches the by entity identifier.
            </summary>
            <param name="primarySearchEntityId">The primary search entity identifier.</param>
            <returns>Container.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.AssetProvider">
            <summary>
                Asset provider implementation for content(assets in SharePoint) like documents and tasks.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.IAssetProvider">
            <summary>
                Content provider interface for assets like documents and tasks.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.FetchAllAssets(System.Guid,System.Nullable{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto})">
            <summary>
                Fetches all assets in a container.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="assetType"></param>
            <returns>SearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.FetchContent(System.Guid)">
            <summary>
                Fetches the specified entity content.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>The content</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.Fetch(System.Guid)">
            <summary>
                Fetches the specified entity metadata.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>The metadata.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.CreateContent(System.Guid,System.IO.Stream)">
            <summary>
                Creates entity content.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="contentStream">The content stream.</param>
            <returns>The created content id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.Create(System.Guid,System.Collections.Generic.IDictionary{System.String,System.String},System.Guid)">
            <summary>
                Creates entity metadata.
            </summary>
            <param name="containerId"></param>
            <param name="metadataStream">The metadata stream.</param>
            <param name="newEntityId"></param>
            <returns>The created content id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.UpdateContent(System.Guid,System.IO.Stream)">
            <summary>
                Updates entity content.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="contentStream">The content stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.UpdateContentUriAndSize(System.Guid,System.Uri,System.Int64)">
            <summary>
            Updates the content's uri and size.
            </summary>
            <param name="assetId">The asset identifier.</param>
            <param name="contentUri">The content URI.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.Update(System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
                Updates entity metadata.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="metadataStream">The metadata stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase)">
            <summary>
                Updates entity metadata.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="primarySearchEntityBase">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.DeleteContent(System.Guid)">
            <summary>
                Deletes the content.
            </summary>
            <param name="assetId">The asset id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.Create(System.Guid,System.Guid,UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase)">
            <summary>
                Creates the specified new container id.
            </summary>
            <param name="newContainerId">The new container id.</param>
            <param name="newAssetId">The new asset id.</param>
            <param name="primarySearchEntityBase">The primary search entity base.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.CreateAssetLink(UL.Aria.Service.Domain.Entity.AssetLink)">
            <summary>
            Creates the asset link.
            </summary>
            <param name="assetLink">The asset link.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.DeleteAssetLink(UL.Aria.Service.Domain.Entity.AssetLink)">
            <summary>
            Deletes the asset link.
            </summary>
            <param name="assetLink">The asset link.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.FetchAssetLinks(System.Guid)">
            <summary>
                Fetches the asset links.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>IList{System.String}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.FetchParentAssetLinks(System.Guid)">
            <summary>
                Fetches the parent asset links.
            </summary>
            <param name="parentId">The parent id.</param>
            <returns>System.Collections.Generic.IList{System.String}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified asset id.
            </summary>
            <param name="assetId">The asset id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.FetchMultipleParentAssetLinks(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
                Fetches the multiple parent asset links.
            </summary>
            <param name="parentIds">The parent ids.</param>
            <returns>IEnumerable{MetaDataLink}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.SaveAssets(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase})">
            <summary>
                Saves the assets.
            </summary>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IAssetProvider.FetchAllDocuments(System.Guid)">
            <summary>
            Fetches all documents.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="F:UL.Aria.Service.Provider.AssetProvider.ClaimSchema">
            <summary>
            The claim schema
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.AssetProvider.ClaimProvider">
            <summary>
            The claim provider
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Provider.AssetProvider.PermissionKey">
            <summary>
            The permission key
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.#ctor(UL.Aria.Service.Manager.IContainerManager,UL.Enterprise.Foundation.Data.ITransactionFactory,UL.Aria.Service.Domain.Entity.IAssetFieldMetadata,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Repository.IAriaMetaDataRepository,UL.Aria.Service.Repository.IAriaMetaDataLinkRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.AssetProvider"/> class.
            </summary>
            <param name="containerManager">The container manager.</param>
            <param name="transactionFactory">The transaction factory.</param>
            <param name="assetFieldMetaData">The asset field meta data.</param>
            <param name="principalResolver">The principal resolver.</param>
            <param name="ariaMetaDataRepository">The aria meta data repository.</param>
            <param name="ariaMetaDataLinkRepository">The aria meta data link repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.FetchAllDocuments(System.Guid)">
            <summary>
            Fetches all documents.
            </summary>
            <param name="containerId">The container identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.FetchAllAssets(System.Guid,System.Nullable{UL.Aria.Service.Contracts.Dto.EntityTypeEnumDto})">
            <summary>
                Fetches all assets in a container.
            </summary>
            <param name="containerId">The container id.</param>
            <param name="assetType"></param>
            <returns>SearchResultSet.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.FetchContent(System.Guid)">
            <summary>
                Fetches entity content.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>The found content.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.Fetch(System.Guid)">
            <summary>
                Fetches entity meta data.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>The found meta data.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.CreateContent(System.Guid,System.IO.Stream)">
            <summary>
                Creates entity content.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="contentStream">The content stream.</param>
            <returns>The created content id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.Create(System.Guid,System.Collections.Generic.IDictionary{System.String,System.String},System.Guid)">
            <summary>
                Creates entity metadata.
            </summary>
            <param name="containerId"></param>
            <param name="metadataStream">The metadata stream.</param>
            <param name="newEntityId"></param>
            <returns>The created content id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.Create(System.Guid,System.Guid,UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase)">
            <summary>
                Creates entity metadata.
            </summary>
            <param name="newContainerId"></param>
            <param name="newAssetId"></param>
            <param name="primarySearchEntityBase">The container.</param>
            <returns>The created content id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.UpdateContent(System.Guid,System.IO.Stream)">
            <summary>
                Updates entity content.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="contentStream">The content stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.UpdateContentUriAndSize(System.Guid,System.Uri,System.Int64)">
            <summary>
            Updates the content's uri and size.
            </summary>
            <param name="assetId">The asset identifier.</param>
            <param name="contentUri">The content URI.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.Update(System.Guid,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
                Updates entity metadata.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="metadataStream">The metadata stream.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.Update(System.Guid,UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase)">
            <summary>
                Updates entity metadata.
            </summary>
            <param name="assetId">The asset id.</param>
            <param name="primarySearchEntityBase">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.DeleteContent(System.Guid)">
            <summary>
                Deletes the content.
            </summary>
            <param name="assetId">The asset id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.CreateAssetLink(UL.Aria.Service.Domain.Entity.AssetLink)">
            <summary>
            Creates the asset link.
            </summary>
            <param name="assetLink">The asset link.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.DeleteAssetLink(UL.Aria.Service.Domain.Entity.AssetLink)">
            <summary>
            Deletes the asset link.
            </summary>
            <param name="assetLink">The asset link.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.FetchAssetLinks(System.Guid)">
            <summary>
                Fetches the asset links.
            </summary>
            <param name="assetId">The asset id.</param>
            <returns>IList{System.String}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.FetchParentAssetLinks(System.Guid)">
            <summary>
                Fetches the parent asset links.
            </summary>
            <param name="parentId">The parent id.</param>
            <returns>System.Collections.Generic.IList{System.String}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.Delete(System.Guid)">
            <summary>
                Deletes the specified asset id.
            </summary>
            <param name="assetId">The asset id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.FetchMultipleParentAssetLinks(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
                Fetches the multiple parent asset links.
            </summary>
            <param name="parentIds">The parent ids.</param>
            <returns>IEnumerable{MetaDataLink}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.SaveAssets(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.PrimarySearchEntityBase})">
            <summary>
            Saves the assets.
            </summary>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.ParseAllMetadataToDictionary(System.String)">
            <summary>
            Parses all metadata to dictionary.
            </summary>
            <param name="metaData">The meta data.</param>
            <returns>Dictionary&lt;System.String, MetaDataTypeAndValue&gt;.</returns>
            <exception cref="T:System.Exception"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.AssetProvider.CompoundClaimStringForSearch(System.String,System.String,System.Collections.Generic.Dictionary{System.String,UL.Aria.Service.Domain.SharePoint.MetaDataTypeAndValue})">
            <summary>
            Compounds the claim string for search.
            </summary>
            <param name="claimSchema">The claim schema.</param>
            <param name="claimProvider">The claim provider.</param>
            <param name="metaDataDictionary">The meta data dictionary.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1">
            <summary>
            Base implementation for <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicDomainEntity"/> domain entities.
            </summary>
            <typeparam name="TCharacteristic">The type of the characteristic.</typeparam>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1"/> class.
            </summary>
            <param name="tableName">Name of the base field.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.FindById(System.Guid)">
            <summary>
            Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.Create(`0)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.Update(`0)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.AddTableRowFields(`0,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.ConstructOptions(System.Data.IDataReader,System.Collections.Generic.IList{`0})">
            <summary>
            Constructs the options.
            </summary>
            <param name="reader">The reader.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.FillCharacteristicOptions(`0)">
            <summary>
            Fills the characteristic options.
            </summary>
            <param name="characteristic">The characteristic.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.InitializeFindOptionsCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find command.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.SaveOptions(`0)">
            <summary>
            Saves the options.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.InitializeSaveOptionsCommand(`0,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the save options command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The database.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.FindByProductFamilyId(System.Guid)">
            <summary>
            Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.FindByScopeId(System.Guid)">
            <summary>
            Finds the by scope id.
            </summary>
            <param name="scopeId">The scope id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CharacteristicRepositoryBase`1.InitializeFindByScopeCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find command.
            </summary>
            <param name="scopeId">The scope id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IIncomingOrderRepository">
            <summary>
                Interface IIncomingOrderRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.Create(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
                Creates the specified <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/>
            </summary>
            <param name="incomingOrder">The new order mock.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.Update(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
                Updates the specified <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/>.
            </summary>
            <param name="incomingOrder">The incoming order.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.UpdateAllContactsForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.UpdateAllCustomersForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderCustomer)">
            <summary>
            Updates all customers for external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.Delete(System.Guid)">
            <summary>
                Deletes the specified <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/>.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.DeleteServiceLine(System.Guid)">
            <summary>
                Deletes the service line <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine"/>.
            </summary>
            <param name="id">The service line id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches for <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> objects using the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.FindById(System.Guid)">
            <summary>
                Finds the incoming order by id.
            </summary>
            <param name="entityId">The incoming order id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.FindByOrderNumber(System.String)">
            <summary>
                Finds the incoming order by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>IncomingOrder.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.FindByServiceLineId(System.Guid)">
            <summary>
                Finds the by service line id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.AddServiceLine(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine)">
            <summary>
                Adds the service line.
            </summary>
            <param name="serviceLine">The service line.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.FetchIncomingOrderLookups">
            <summary>
            Fetches the Incoming Order lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.UpdateContact(UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IIncomingOrderRepository.CreateContact(UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Creates the contact.
            </summary>
            <param name="contact">The contact.</param>
            <returns>Guid.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IncomingOrderRepository">
            <summary>
                Class IncomingOrderRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.#ctor(UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.IncomingOrderRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.IncomingOrderRepository"/> class.
            </summary>
            <param name="dbIdFieldName">Name of the db id field.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.Create(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
                Creates the specified incoming order.
            </summary>
            <param name="incomingOrder">The incoming order.</param>
            <returns>Incoming order id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.FindById(System.Guid)">
            <summary>
                Finds the incoming order by id.
            </summary>
            <param name="entityId">The incoming order id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.FindByOrderNumber(System.String)">
            <summary>
                Finds the incoming order by order number.
            </summary>
            <param name="orderNumber">The order number.</param>
            <returns>IncomingOrder.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.FindByServiceLineId(System.Guid)">
            <summary>
                Finds the by service line id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.Update(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
                Update the specified incoming order.
            </summary>
            <param name="incomingOrder">Incoming order to update from the repository</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.UpdateAllContactsForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.UpdateContact(UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Updates the contact.
            </summary>
            <param name="contact">The contact.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.CreateContact(UL.Aria.Service.Domain.Entity.IncomingOrderContact)">
            <summary>
            Creates the contact.
            </summary>
            <param name="contact">The contact.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.UpdateAllCustomersForExternalId(System.String,UL.Aria.Service.Domain.Entity.IncomingOrderCustomer)">
            <summary>
            Updates all customers for external identifier.
            </summary>
            <param name="externalId">The external identifier.</param>
            <param name="customer">The customer.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.Delete(System.Guid)">
            <summary>
                Deletes the specified <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/>.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.DeleteServiceLine(System.Guid)">
            <summary>
                Deletes the service line <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine"/>.
            </summary>
            <param name="id">The service line id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches for <see cref="T:UL.Aria.Service.Domain.Entity.IncomingOrder"/> objects using the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.AddServiceLine(UL.Aria.Service.Domain.Entity.IncomingOrderServiceLine)">
            <summary>
                Adds the service line.
            </summary>
            <param name="serviceLine">The service line.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.Add(UL.Aria.Service.Domain.Entity.IncomingOrder)">
            <summary>
                Adds the specified incoming order.
            </summary>
            <param name="entity">Incoming order to add to the repository</param>
            <returns>Incoming order's system ID</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.Remove(System.Guid)">
            <summary>
                Removes the specified incoming order.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IncomingOrderRepository.FetchIncomingOrderLookups">
            <summary>
            Fetches the Incoming Order lookups.
            </summary>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductFamilyAttributeRepository">
            <summary>
            Product family attribute repository class.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductFamilyAttributeRepository">
            <summary>
                Interface IProductFamilyAttributeRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyAttributeRepository.Create(UL.Aria.Service.Domain.Entity.ProductFamilyAttribute)">
            <summary>
            Creates the specified product family attribute.
            </summary>
            <param name="productFamilyAttribute">The product family attribute.</param>
            <returns>Product family attribute id.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyAttributeRepository.FindByProductFamilyId(System.Guid)">
            <summary>
            Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyAttributeRepository.FindByIds(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Finds the attributes by id list.
            </summary>
            <param name="productFamilyIds">The product family ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyAttributeRepository.FindByScopeId(System.Guid)">
            <summary>
            Finds the by scope id.
            </summary>
            <param name="scopeId">The scope id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyAttributeRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductFamilyAttributeRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyAttributeRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductFamilyAttribute,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyAttributeRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyAttributeRepository.FindByIds(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Finds the attributes by id list.
            </summary>
            <param name="productFamilyIds">The product family ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyAttributeRepository.RemoveOption(System.Guid,System.Guid)">
            <summary>
            Removes the option.
            </summary>
            <param name="attributeId">The attribute unique identifier.</param>
            <param name="optionId">The option unique identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TermsAndConditions">
            <summary>
            domain entity dealing with Terms and Conditions
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TermsAndConditions.#ctor(System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TermsAndConditions"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Domain.Entity.TermsAndConditions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Domain.Entity.TermsAndConditions"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TermsAndConditions.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TermsAndConditions.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TermsAndConditions.LegalText">
            <summary>
            Gets or sets the legal text.
            </summary>
            <value>
            The legal text.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TermsAndConditions.CreatedDateTime">
            <summary>
            Gets or sets the created date time.
            </summary>
            <value>
            The created date time.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TermsAndConditions.CreatedById">
            <summary>
            Gets or sets the created by id.
            </summary>
            <value>
            The created by id.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TermsAndConditions.UpdatedDateTime">
            <summary>
            Gets or sets the updated date time.
            </summary>
            <value>
            The updated date time.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Domain.Entity.TermsAndConditions.UpdatedById">
            <summary>
            Gets or sets the updated by id.
            </summary>
            <value>
            The updated by id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.ResultBuilder">
            <summary>
            Builds results for filtered and sorted result sets.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ResultBuilder.Sort``1(System.Collections.Generic.IList{UL.Enterprise.Foundation.Data.ISort},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Sorts the specified results.
            </summary>
            <param name="sorts">The sorts.</param>
            <param name="resultsToSort">The results to sort.</param>
            <returns>Sorted list</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ResultBuilder.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Pages the specified results to page.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="resultsToPage">The results to page.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <returns>Single paged result set.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.TaskRepository">
            <summary>
            Class TaskRepository.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TaskRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.FetchByProject(System.Guid)">
            <summary>
            Gets the count of tasks for the pr.
            </summary>
            <param name="projectId">The project identifier.</param>
            <returns></returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.FetchPredecessorsByProject(System.Guid)">
            <summary>
            Fetches the predecessors by project.
            </summary>
            <param name="projectId">The project identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.FindById(System.Guid)">
            <summary>
            Finds the by identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>Task.</returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.FetchCountByPrimarySearchEntityId(System.Guid)">
            <summary>
            Gets the count of tasks for the pr.
            </summary>
            <param name="primarySearchEntityId">The entity identifier.</param>
            <returns></returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.FindByIdTaskOnly(System.Guid)">
            <summary>
            Finds the by identifier task only.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>Task.</returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.FindIdsByPrimarySearchEntityId(System.Guid,System.Boolean)">
            <summary>
            Finds the ids by primary search entity identifier.
            </summary>
            <param name="primarySearchEntityId">The primary search entity identifier.</param>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <returns>List&lt;Lookup&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.FindByPrimarySearchEntityId(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Finds the by primary search entity identifier.
            </summary>
            <param name="primarySearchEntityId">The primary search entity identifier.</param>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <param name="flatList">if set to <c>true</c> [return flat list of tasks]</param>
            <returns>List&lt;Task&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.FindByMultiplePrimarySearchEntityIds(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Finds the by multiple primary search entity ids.
            </summary>
            <param name="primarySearchEntityIds">The primary search entity ids.</param>
            <returns>List&lt;Task&gt;.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.Remove(System.Guid,System.Guid)">
            <summary>
            Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="userId">The user identifier.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.BulkCreate(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Bulk create tasks.
            </summary>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.BulkUpdate(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Task})">
            <summary>
            Bulk update tasks.
            </summary>
            <param name="tasks">The tasks.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.InitializeSaveCommand(UL.Aria.Service.Domain.Entity.Task,Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase{UL.Aria.Service.Domain.Entity.Task}.SaveEnum)">
            <summary>
            Initializes the save command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <param name="saveEnum">The save enum.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.InitializeMultiSaveCommand(System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.Task},Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Aria.Service.Repository.TrackedDomainEntityRepositoryBase{UL.Aria.Service.Domain.Entity.Task}.SaveEnum)">
            <summary>
            Initializes the multi save command.
            </summary>
            <param name="entities">The entities.</param>
            <param name="db">The database.</param>
            <param name="saveEnum">The save enum.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.PendingTasks(System.Guid)">
            <summary>
            Determines if there are pending tasks for the given entity.
            </summary>
            <param name="primarySearchEntityId">The primary search entity identifier.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.Task,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
                Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">
                if set to <c>true</c> [is new].
            </param>
            <param name="isDirty">
                if set to <c>true</c> [is dirty].
            </param>
            <param name="isDelete">
                if set to <c>true</c> [is delete].
            </param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.TaskTemplateRepository">
            <summary>
            Repository implementation for Task Templates.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTemplateRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.LinkRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTemplateRepository.FetchByProjectTemplate(System.Guid,System.Boolean)">
            <summary>
            Fetches the links by entity.
            </summary>
            <param name="projectTemplateId">The project template identifier.</param>
            <param name="Flattened">if set to <c>true</c> [flattened].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTemplateRepository.Remove(System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTemplateRepository.FetchTaskTemplateByProjectTemplate(System.Guid)">
            <summary>
            Fetches the task template by project template.
            </summary>
            <param name="projectTemplateId">The project identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTemplateRepository.UpdateBulk(System.Guid,System.Collections.Generic.IEnumerable{UL.Aria.Service.Domain.Entity.TaskTemplate})">
            <summary>
            Updates the a list of TaskTemplates in bulk.
            </summary>
            <param name="ProjectTemplateId"></param>
            <param name="taskTemplates">The task templates.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTemplateRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTemplateRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.TaskTemplate,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="T:UL.Aria.Service.Repository.TaskTypeRepository">
            <summary>
            Class TaskTypeRepository.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeRepository.AddSearchParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,UL.Enterprise.Foundation.Data.ISearchCriteria,System.Data.Common.DbCommand)">
            <summary>
            Adds the search parameters.
            </summary>      
            <param name="db">The database.</param>
            <param name="searchCriteria">The search criteria.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeRepository.DefineMappings(UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Defines the mappings.
            </summary>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeRepository.MapPrimaryEntityToDataReader(AutoMapper.IMappingExpression{System.Data.IDataReader,UL.Aria.Service.Domain.TaskType})">
            <summary>
            Maps the primary entity to data reader.
            </summary>
            <param name="expressionChain">The expression chain.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeRepository.GetLookups(System.Boolean)">
            <summary>
            Gets the lookups.
            </summary>
            <param name="includeDeleted">if set to <c>true</c> [include deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeRepository.ConstructTaskTypeLookups(System.Data.IDataReader)">
            <summary>
            Constructs the task type lookups.
            </summary>
            <param name="reader">The reader.</param>
            <returns>Lookup.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeRepository.Fetch(System.Guid,System.Boolean)">
            <summary>
            Fetches the active by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="isDeleted">if set to <c>true</c> [is deleted].</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskTypeRepository.FetchAll">
            <summary>
            Fetches the active by identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.TaskTypeRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.TaskCategoryRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskCategoryRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TaskCategoryRepository"/> class.
            </summary>       
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskCategoryRepository.FetchById(System.Guid)">
            <summary>
            Fetches the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskCategoryRepository.FetchActiveById(System.Guid)">
            <summary>
            Fetches the active by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskCategoryRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskCategoryRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.TaskCategory,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskCategoryRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskCategoryRepository.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskCategoryRepository.InitializeSearchCommand(UL.Aria.Service.Domain.Search.SearchCriteria,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the search command.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TaskCategoryRepository.InitializeFindActiveCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find active command.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="db">The database.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.TermsAndConditionsRepository">
            <summary>
            class that implements CRUD for Terms and Conditions
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.TermsAndConditionsRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.FindAll">
            <summary>
            Finds all.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.FindById(System.Guid)">
            <summary>
            Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.FindByUserId(System.Guid)">
            <summary>
            Finds the by user id.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
            <exception cref="T:UL.Enterprise.Foundation.Data.DatabaseItemNotFoundException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.Add(UL.Aria.Service.Domain.Entity.TermsAndConditions)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.Update(UL.Aria.Service.Domain.Entity.TermsAndConditions)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.Remove(System.Guid)">
            <summary>
            Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.InitializeFindByCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find by command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.InitializeFindByUserCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find by user id command.
            </summary>
            <param name="userId">The user id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.InitializeFindAllCommand(Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find all command.
            </summary>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.InitializeAddCommand(UL.Aria.Service.Domain.Entity.TermsAndConditions,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the add command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.ConstructTermsAndConditions(System.Data.IDataReader,System.Guid@)">
            <summary>
            Constructs the terms and conditions.
            </summary>
            <param name="reader">The reader.</param>
            <param name="termsAndConditionsId">The terms and conditions id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.InitializeUpdateCommand(UL.Aria.Service.Domain.Entity.TermsAndConditions,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the update command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.TermsAndConditionsRepository.InitializeRemoveCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the remove command.
            </summary>
            <param name="id">The id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Domain.Entity.TermsAndConditionsType">
            <summary>
            enum to specifiy the type of Terms and Coniditions as there will be different kinds
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.TermsAndConditionsType.CompanyAdministrator">
            <summary>
            Facilitates administrtaive access upon accepting Ts and Cs
            </summary>
        </member>
        <member name="F:UL.Aria.Service.Domain.Entity.TermsAndConditionsType.None">
            <summary>
            The none{CC2D43FA-BBC4-448A-9D0B-7B57ADF2655C}
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductFamilyFeatureRepository">
            <summary>
                Repository for the <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeature"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyFeatureRepository.Create(UL.Aria.Service.Domain.Entity.ProductFamilyFeature)">
            <summary>
                Creates the specified product family feature.
            </summary>
            <param name="productFamilyFeature">The product family feature.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyFeatureRepository.FindByProductFamilyId(System.Guid)">
            <summary>
            Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyFeatureRepository.FindByIds(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Finds the features by id list.
            </summary>
            <param name="productFamilyIds">The product family ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyFeatureRepository.FindByScopeId(System.Guid)">
            <summary>
            Finds the by scope id.
            </summary>
            <param name="scopeId">The scope id.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductFamilyFeatureProvider">
            <summary>
                Class ProductFamilyFeatureProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.#ctor(UL.Aria.Service.Repository.IProductFamilyFeatureRepository,UL.Aria.Service.Repository.IProductFeatureOptionRepository,UL.Aria.Service.Repository.IProductFamilyFeatureValueRepository,UL.Aria.Service.Repository.IProductFamilyFeatureAllowedValueRepository,UL.Aria.Service.Repository.IProductFamilyFeatureAllowedValueDependencyRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProductFamilyFeatureProvider"/> class.
            </summary>
            <param name="productFamilyFeatureRepository">The product family feature repository.</param>
            <param name="optionRepository">The option repository.</param>
            <param name="valueRepository">The value repository.</param>
            <param name="allowedValueRepository">The value repository.</param>
            <param name="dependencyRepository"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.Create(UL.Aria.Service.Domain.Entity.ProductFamilyFeature)">
            <summary>
            Creates the specified product family feature.
            </summary>
            <param name="productFamilyFeature">The product family feature.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.GetByProductFamilyId(System.Guid)">
            <summary>
            Gets the by product family id.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.Get(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Gets the specified product family features ids.
            </summary>
            <param name="productFamilyIds">The product family attribute ids.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.Update(UL.Aria.Service.Domain.Entity.ProductFamilyFeature)">
            <summary>
            Updates the specified product family feature.
            </summary>
            <param name="productFamilyFeature">The product family feature.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.AddOption(System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyCharacteristicOption)">
            <summary>
            Adds the option.
            </summary>
            <param name="characteristicId">The characteristic id.</param>
            <param name="option">The option.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.RemoveOption(System.Guid)">
            <summary>
            Adds the option.
            </summary>
            <param name="optionId">The option id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.Get(System.Guid)">
            <summary>
            Gets the specified product family feature by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.FindAllowedValues(System.Guid,System.Guid)">
            <summary>
            Gets the values.
            </summary>
            <param name="featureId">The feature id.</param>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.FindAllowedValuesByFamily(System.Guid)">
            <summary>
            Finds the allowed values by family.
            </summary>
            <param name="familyId">The family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.FindByScopeId(System.Guid)">
            <summary>
            Finds the by scope id.
            </summary>
            <param name="scopeId">The scope id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.GetValueDependenciesByFamilyAllowedFeatureId(System.Guid)">
            <summary>
            Finds the dependencies by family allowed feature id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.GetValueDependenciesByParentFamilyAllowedFeatureValueId(System.Guid)">
            <summary>
            Gets the value dependencies by parent family allowed feature value id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.RemoveValueDependency(System.Guid)">
            <summary>
            Removes the dependency.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.GetValueDependency(System.Guid)">
            <summary>
            Gets the value dependency.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.AddValueDependency(UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAllowedValueDependency)">
            <summary>
            Adds the dependency.
            </summary>
            <param name="dependency">The dependency.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.FindValues(System.Guid)">
            <summary>
            Finds the values.
            </summary>
            <param name="featureId">The feature id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyFeatureProvider.Delete(System.Guid)">
            <summary>
            Deletes the specified feature.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.IProductFamilyProvider">
            <summary>
                Interface IProductFamilyProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.Create(UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Creates the specified product family.
            </summary>
            <param name="productFamily">The product family.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.Update(UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="productFamily">The product family.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.Get(System.Guid)">
            <summary>
                Gets the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>ProductFamily.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.GetProductFamiliesByBusinessUnit(System.Guid)">
            <summary>
                Gets the product families by business unit.
            </summary>
            <param name="businessUnitId">The business unit id.</param>
            <returns>IReadOnlyDictionary{GuidProductFamily}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.SaveProductFamilyAttributeAssociations(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ProductFamilyAttributeAssociation})">
            <summary>
            Saves the product family attribute associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <param name="models">The product family attribute association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.SaveProductFamilyFeatureAssociations(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAssociation})">
            <summary>
            Saves the product family feature associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <param name="models">The product family feature association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.GetProductFamilyAttributeAssociations(System.Guid)">
            <summary>
            Gets the product family attribute associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.GetProductFamilyFeatureAssociations(System.Guid)">
            <summary>
            Gets the product family Feature associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.RemoveProductFamilyAttributeAssociations(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Removes the product family attribute associations.
            </summary>
            <param name="productFamilyAttributeAssociationIds">The product family attribute association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.RemoveProductFamilyFeatureAssociations(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Saves the product family feature associations.
            </summary>
            <param name="productFamilyFeatureAssociationIds">The product family feature association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.GetProductFamilyFeatureValueByFeatureIdAndValue(System.Guid,System.String)">
            <summary>
            Gets the product family feature value by id and value.
            </summary>
            <param name="featureId">The feature id.</param>
            <param name="value">The value.</param>
            <returns>ProductFamilyFeatureValue.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.CreateProductFamilyFeatureValue(UL.Aria.Service.Domain.Entity.ProductFamilyFeature,System.String,System.Nullable{System.Guid})">
            <summary>
            Creates the product family feature value.
            </summary>
            <param name="productFamilyFeature">The product family feature.</param>
            <param name="value">The value.</param>
            <param name="unitOfMeasureId"></param>
            <returns>ProductFamilyFeatureValue.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.RemoveProductFamilyAllowedFeatureValue(System.Guid,System.Guid)">
            <summary>
            Removes the product family allowed feature value.
            </summary>
            <param name="familyId">The family id.</param>
            <param name="featureValueId">The feature value id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.CreateProductFamilyAllowedFeatureValue(System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue)">
            <summary>
            Creates the product family allowed feature value.
            </summary>
            <param name="familyId">The family id.</param>
            <param name="productFamilyFeatureValue">The product family feature value.</param>
            <returns>ProductFamilyFeatureAllowedValue.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IProductFamilyProvider.RemoveProductFamilyAllowedFeatureValue(System.Guid)">
            <summary>
            Removes the product family allowed feature value.
            </summary>
            <param name="allowedFeatureValueId">The allowed feature value id.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.ISharePointQuery">
            <summary>
                SharePoint Query class
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ISharePointQuery.SubmitQuery(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Int64,System.Int64,System.Collections.Generic.List{UL.Enterprise.Foundation.Data.ISort},System.String)">
            <summary>
            Runs the SharePoint web request.
            </summary>
            <param name="query">The SharePoint query parameter.</param>
            <param name="selectProperties">The SharePoint select properties parameter.</param>
            <param name="refiners">The refiners.</param>
            <param name="refinementFilters">The refinement filters.</param>
            <param name="startindex">The SharePoint start index parameter.</param>
            <param name="rowlimit">The SharePoint row limit parameter.</param>
            <param name="sortList">The sort list.</param>
            <param name="additionalFilter">The additional filter.</param>
            <returns>
            SharePointQueryResult.
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ISharepointConfigurationSource">
            <summary>
                Configuration Options for service proxies.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.ISharepointConfigurationSource.TaskService">
            <summary>
                Gets the task service URL.
            </summary>
            <value>The task service URL.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.ISharepointConfigurationSource.ContentService">
            <summary>
                Gets the content service.
            </summary>
            <value>The content service.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.ISharepointConfigurationSource.SearchService">
            <summary>
                Gets the sharepoint search service uri.
            </summary>
            <value>
                The sharepoint search service uri.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Provider.ISharepointConfigurationSource.Credentials">
            <summary>
                Gets the network credentials.
            </summary>
            <value>
                The network credentials.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Provider.ISharepointConfigurationSource.Timeout">
            <summary>
            Gets or sets the time-out value in milliseconds
            </summary> 
            <returns>
            The number of milliseconds to wait before the request times out. The default value is 30,000 milliseconds (30 seconds).
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ISearchProvider">
            <summary>
                A search provider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ISearchProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ISearchProvider.Create(UL.Aria.Service.Domain.Entity.Container,System.String)">
            <summary>
                Creates the specified container.
            </summary>
            <param name="container">The container.</param>
            <param name="containerMetadata">The container metadata.</param>
            <returns>The created entity id</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ISearchProvider.Update(UL.Aria.Service.Domain.Entity.Container,System.String)">
            <summary>
                Updates the specified container.
            </summary>
            <param name="container">The container.</param>
            <param name="containerMetadata">The container metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ISearchProvider.FetchProductsByProjectId(System.Guid)">
            <summary>
            Gets the products for the specified project.
            </summary>
            <param name="projectId">The project unique identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.IUserBusinessClaimProvider">
            <summary>
            Interface for a 
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserBusinessClaimProvider.Add(UL.Aria.Service.Domain.Entity.UserBusinessClaim)">
            <summary>
            Adds the specified user claim dto.
            </summary>
            <param name="userClaim">The user claim dto.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserBusinessClaimProvider.Remove(System.String)">
            <summary>
            Removes the specified user claim.
            </summary>
            <param name="userClaimId">The user claim id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserBusinessClaimProvider.RemoveAllUserClaims(System.String)">
            <summary>
            Removes user's claim.
            </summary>
            <param name="loginId"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserBusinessClaimProvider.GetUserClaimValues(UL.Aria.Service.Domain.Entity.BusinessClaim,System.String)">
            <summary>
            Gets the user claim values.
            </summary>
            <param name="claim">The claim.</param>
            <param name="loginId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserBusinessClaimProvider.GetUserClaims(System.String)">
            <summary>
            Gets the user claims.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserBusinessClaimProvider.GetUserClaimHistory(UL.Aria.Service.Domain.Entity.BusinessClaim,System.String)">
            <summary>
            Gets the user claim history.
            </summary>
            <param name="claim">The claim.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserBusinessClaimProvider.GetUserClaimsByValue(System.String)">
            <summary>
            Finds the claims.
            </summary>
            <param name="claimValue">The claim value.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.IUserBusinessClaimProvider.GetUserClaimsByClaimAndValue(System.String,System.String)">
            <summary>
            Finds the user claim values.
            </summary>
            <param name="claim">The claim.</param>
            <param name="claimValue">The claim value.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.ProductFamilyProvider">
            <summary>
                Class ProductFamilyProvider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.#ctor(UL.Aria.Service.Repository.IProductFamilyRepository,UL.Aria.Service.Repository.IProductFamilyAssociationRepository{UL.Aria.Service.Domain.Entity.ProductFamilyAttributeAssociation},UL.Aria.Service.Repository.IProductFamilyAssociationRepository{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAssociation},UL.Aria.Service.Repository.IProductFamilyFeatureAllowedValueRepository,UL.Aria.Service.Repository.IProductFamilyFeatureValueRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.ProductFamilyProvider"/> class.
            </summary>
            <param name="productFamilyRepository">The product family repository.</param>
            <param name="attributeAssociationRepository">The attribute association repository.</param>
            <param name="featureAssociationRepository">The feature association repository.</param>
            <param name="productFamilyFeatureAllowedValueRepository">The product family feature allowed value repository.</param>
            <param name="productFamilyFeatureValueRepository">The product family feature value repository.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.Create(UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Creates the specified product family.
            </summary>
            <param name="productFamily">The product family.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.Update(UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Updates the specified id.
            </summary>
            <param name="productFamily">The product family.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.Get(System.Guid)">
            <summary>
                Gets the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>ProductFamily.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.GetProductFamiliesByBusinessUnit(System.Guid)">
            <summary>
                Gets the product families by business unit.
            </summary>
            <param name="businessUnitId">The business unit id.</param>
            <returns>IReadOnlyDictionary{GuidProductFamily}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.SaveProductFamilyAttributeAssociations(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ProductFamilyAttributeAssociation})">
            <summary>
            Saves the product family attribute associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <param name="models">The product family attribute association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.RemoveProductFamilyAttributeAssociations(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Removes the product family attribute associations.
            </summary>
            <param name="productFamilyAttributeAssociationIds">The product family attribute association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.GetProductFamilyAttributeAssociations(System.Guid)">
            <summary>
            Gets the product family attribute associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.GetProductFamilyFeatureAssociations(System.Guid)">
            <summary>
            Gets the product family Feature associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.SaveProductFamilyFeatureAssociations(System.Guid,System.Collections.Generic.IList{UL.Aria.Service.Domain.Entity.ProductFamilyFeatureAssociation})">
            <summary>
            Saves the product family feature associations.
            </summary>
            <param name="productFamilyId">The product family id.</param>
            <param name="models">The product family feature association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.RemoveProductFamilyFeatureAssociations(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Saves the product family feature associations.
            </summary>
            <param name="productFamilyFeatureAssociationIds">The product family feature association ids.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.GetProductFamilyFeatureValueByFeatureIdAndValue(System.Guid,System.String)">
            <summary>
            Gets the product family feature value by id and value.
            </summary>
            <param name="featureId">The feature id.</param>
            <param name="value">The value.</param>
            <returns>ProductFamilyFeatureValue.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.CreateProductFamilyFeatureValue(UL.Aria.Service.Domain.Entity.ProductFamilyFeature,System.String,System.Nullable{System.Guid})">
            <summary>
            Creates the product family feature value.
            </summary>
            <param name="productFamilyFeature">The product family feature.</param>
            <param name="value">The value.</param>
            <param name="unitOfMeasureId"></param>
            <returns>ProductFamilyFeatureValue.</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.RemoveProductFamilyAllowedFeatureValue(System.Guid,System.Guid)">
            <summary>
            Removes the product family allowed feature value.
            </summary>
            <param name="familyId">The family id.</param>
            <param name="featureValueId">The feature value id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.RemoveProductFamilyAllowedFeatureValue(System.Guid)">
            <summary>
            Removes the product family allowed feature value.
            </summary>
            <param name="allowedFeatureValueId">The allowed feature value id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.ProductFamilyProvider.CreateProductFamilyAllowedFeatureValue(System.Guid,UL.Aria.Service.Domain.Entity.ProductFamilyFeatureValue)">
            <summary>
            Creates the product family allowed feature value.
            </summary>
            <param name="familyId">The family id.</param>
            <param name="productFamilyFeatureValue">The product family feature value.</param>
            <returns>ProductFamilyFeatureAllowedValue.</returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SharepointConfigurationSource">
            <summary>
                Configuration Options for service proxies.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharepointConfigurationSource.TaskService">
            <summary>
                Gets the task service URL.
            </summary>
            <value>The task service URL.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharepointConfigurationSource.ContentService">
            <summary>
                Gets the content service.
            </summary>
            <value>The content service.</value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharepointConfigurationSource.SearchService">
            <summary>
                Gets the sharepoint search service uri.
            </summary>
            <value>
                The sharepoint search service urie.
            </value>
            <remarks>
            The SharePoint search service is used on a different port from the custom Aria SharePoint REST Services.
            The SharePoint Web Application has been extended to support a 2nd 'zone'.
            Gets the uri from the web.config AppSettings.  Defaults to use the local computername for the web application name and use port 801.
            Example:   http://computername:803/_api_search/postquery
            </remarks>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharepointConfigurationSource.Credentials">
            <summary>
                Gets the network credentials.
            </summary>
            <value>
                The network credentials.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharepointConfigurationSource.Timeout">
            <summary>
            Gets or sets the time-out value in milliseconds
            </summary>
            <returns>
            The number of milliseconds to wait before the request times out. The default value is 30,000 milliseconds (30 seconds).
              </returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SearchProvider">
            <summary>
                Search provider
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProvider.#ctor(UL.Aria.Service.Provider.ISharePointQuery,UL.Aria.Service.Domain.Entity.IAssetFieldMetadata,UL.Aria.Service.Provider.IContainerSerializer,UL.Enterprise.Foundation.Logging.ILogManager,UL.Enterprise.Foundation.Authorization.IPrincipalResolver,UL.Aria.Service.Provider.SearchCoordinator.ISearchCoordinatorFactory,UL.Aria.Service.Repository.IAriaMetaDataRepository,UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.SearchProvider"/> class.
            </summary>
            <param name="sharepointQuery">The sharepoint query.</param>
            <param name="assetFieldMetadata">The asset field metadata.</param>
            <param name="containerSerializer">The container serializer.</param>
            <param name="logManager">The log manager.</param>
            <param name="principalResoler">The principal resoler.</param>
            <param name="searchCoordinatorFactory">The search coordinator factory.</param>
            <param name="ariaMetaDataRepository">The aria meta data repository.</param>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProvider.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
                Searches the specified specification.
            </summary>
            <param name="searchCriteria">The specification.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProvider.Create(UL.Aria.Service.Domain.Entity.Container,System.String)">
            <summary>
                Creates the specified container.
            </summary>
            <param name="container">The container.</param>
            <param name="containerMetadata">The container metadata.</param>
            <returns>The created entity id</returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProvider.Update(UL.Aria.Service.Domain.Entity.Container,System.String)">
            <summary>
                Updates the specified container.
            </summary>
            <param name="container">The container.</param>
            <param name="containerMetadata">The container metadata.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SearchProvider.FetchProductsByProjectId(System.Guid)">
            <summary>
            Gets the products for the specified project.
            </summary>
            <param name="projectId">The project unique identifier.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Provider.SharePointQuery">
            <summary>
                Queries SharePoint via the HTTP REST API and parses the results returns.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.SharePointQuery.#ctor(UL.Aria.Service.Provider.ISharepointConfigurationSource,UL.Enterprise.Foundation.Logging.ILogManager,UL.Iam.Common.OAuth.ISharePointRestApiAccessTokenGenerator,UL.Enterprise.Foundation.Authorization.IPrincipalResolver)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.SharePointQuery"/> class.
            </summary>
            <param name="configurationSource">The configuration source.</param>
            <param name="logManager">The log manager.</param>
            <param name="restApiAccessTokenGenerator">The rest API access token generator.</param>
            <param name="principalResolver">The principal resolver.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SharePointQuery.SubmitQuery(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Int64,System.Int64,System.Collections.Generic.List{UL.Enterprise.Foundation.Data.ISort},System.String)">
            <summary>
            Runs the SharePoint web request.
            </summary>
            <param name="query">The SharePoint query parameter.</param>
            <param name="selectProperties">The SharePoint select properties parameter.</param>
            <param name="refiners">The refiners.</param>
            <param name="refinementFilters">The refinement filters.</param>
            <param name="startindex">The SharePoint start index parameter.</param>
            <param name="rowlimit">The SharePoint row limit parameter.</param>
            <param name="sortList">The sort list.</param>
            <param name="additionalFilter">The additional filter.</param>
            <returns>
            SharePointQueryResult.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SharePointQuery.PostRequest(UL.Aria.Service.Provider.ISharepointConfigurationSource,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Int64,System.Int64,System.Collections.Generic.List{UL.Enterprise.Foundation.Data.ISort},System.String)">
            <summary>
            Runs the Sharepoint query as an Http post request.
            </summary>
            <param name="configurationSource">The SharePoint configuration sourcce parameter.</param>
            <param name="query">The SharePoint query parameter.</param>
            <param name="selectProperties">The SharePoint select properties parameter.</param>
            <param name="refiners">The refiners.</param>
            <param name="filters">The filters.</param>
            <param name="startindex">The SharePoint start index parameter.</param>
            <param name="rowlimit">The SharePoint row limit parameter.</param>
            <param name="sortList">The sort list.</param>
            <param name="additionalFilter">The additional filter.</param>
            <returns>
            SharePointQueryResult.
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SharePointQuery.NormailizeBeforeAfterDateRanges(System.Collections.Generic.List{System.String})">
            <summary>
            Normailizes the before and after date ranges. Merges the ranges together when 
            then will contrain the conditiona to a between. if from date is greater than the to date
            do nothing.
            </summary>
            <param name="filters">The filters.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.SharePointQuery.BuildRefinementFilters(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.String)">
            <summary>
            Builds the refinement filters.
            </summary>
            <param name="filters">The filters.</param>
            <param name="additionalFilter">The additional filter.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.SharePointQuery.ProcessSharepointSearchXmlJson(System.IO.Stream,UL.Aria.Service.Provider.SharePointQueryResult)">
            <summary>
            De-serializes the SharePoint Json Xml stream.
            </summary>
            <param name="stream">The Json xml stream to deserialize.</param>
            <param name="sharePointQueryResult">The share point query result.</param>
        </member>
        <member name="T:UL.Aria.Service.Provider.SharePointQuery.Query">
            <summary>
                Represents the parts of a SharePoint Search REST API POST query we are currently leveraging.
                see http://msdn.microsoft.com/en-us/library/sharepoint/jj163876.aspx
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.SharePointQuery.Sort">
            <summary>
                Represents a SharePoint Search REST API Sort structure
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Provider.SharePointQuery.Sort.Direction">
            <summary>
                Gets or sets the direction.  0=ascending, 1=descending.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.SharePointQuery.SortCollection">
            <summary>
                Represents a SharePoint Search REST API sort collection structure
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.SharePointQuery.StringCollection">
            <summary>
                Represents a SharePoint Search REST API string collection structure
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Provider.UserBusinessClaimProvider">
            <summary>
            Provider UserBusinessClaim
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserBusinessClaimProvider.#ctor(UL.Aria.Service.Claim.Contract.IUserClaimService,UL.Enterprise.Foundation.Mapper.IMapperRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Provider.UserBusinessClaimProvider"/> class.
            </summary>
            <param name="userClaimService">The user claim service.</param>
            <param name="mapperRegistry">The mapper registry.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserBusinessClaimProvider.Add(UL.Aria.Service.Domain.Entity.UserBusinessClaim)">
            <summary>
            Adds the specified user claim dto.
            </summary>
            <param name="userClaim">The user claim dto.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserBusinessClaimProvider.Remove(System.String)">
            <summary>
            Removes the specified user claim.
            </summary>
            <param name="userClaimId">The user claim id.</param>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserBusinessClaimProvider.RemoveAllUserClaims(System.String)">
            <summary>
            Removes user's claim.
            </summary>
            <param name="loginId"></param>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserBusinessClaimProvider.GetUserClaimValues(UL.Aria.Service.Domain.Entity.BusinessClaim,System.String)">
            <summary>
            Gets the user claim values.
            </summary>
            <param name="claim">The claim.</param>
            <param name="loginId"></param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserBusinessClaimProvider.GetUserClaims(System.String)">
            <summary>
            Gets the user claims.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserBusinessClaimProvider.GetUserClaimHistory(UL.Aria.Service.Domain.Entity.BusinessClaim,System.String)">
            <summary>
            Gets the user claim history.
            </summary>
            <param name="claim">The claim.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserBusinessClaimProvider.GetUserClaimsByValue(System.String)">
            <summary>
            Finds the claims.
            </summary>
            <param name="claimValue">The claim value.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Provider.UserBusinessClaimProvider.GetUserClaimsByClaimAndValue(System.String,System.String)">
            <summary>
            Finds the user claim values.
            </summary>
            <param name="claim">The claim.</param>
            <param name="claimValue">The claim value.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.CompanyRepository">
            <summary>
            class that facilitates creation, deletion, selection from the database
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.ICompanyRepository">
            <summary>
            Repository methods for a company.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ICompanyRepository.FetchById(System.Guid)">
            <summary>
            Gets the company by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ICompanyRepository.FetchByExternalId(System.String)">
            <summary>
            Gets the company by external id.
            </summary>
            <param name="externalId">The external id.</param>
            <returns>Company.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ICompanyRepository.Create(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Publishes the company.
            </summary>
            <param name="company">The company.</param>
            <returns>The published company</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ICompanyRepository.Update(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Updates the company.
            </summary>
            <param name="company">The company.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ICompanyRepository.Delete(System.Guid)">
            <summary>
            Deletes the company by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ICompanyRepository.FetchAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ICompanyRepository.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ICompanyRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.#ctor(UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.CompanyRepository"/> class.
            </summary>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.UL#Aria#Service#Repository#ICompanyRepository#FetchById(System.Guid)">
            <summary>
            Gets the company by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.UL#Aria#Service#Repository#ICompanyRepository#FetchByExternalId(System.String)">
            <summary>
            Gets the company by external id.
            </summary>
            <param name="externalId">The external id.</param>
            <returns>Company.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.InitializeFetchByExternalIdCommand(System.String,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the fetch by external id command.
            </summary>
            <param name="externalId">The external id.</param>
            <param name="db">The db.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.InitializeFetchExternalIdsByCompanyId(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the fetch external ids by company id.
            </summary>
            <param name="companyId">The company id.</param>
            <param name="db">The db.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.UL#Aria#Service#Repository#ICompanyRepository#Create(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Publishes the company.
            </summary>
            <param name="company">The company.</param>
            <returns>
            The published company
            </returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.UL#Aria#Service#Repository#ICompanyRepository#Update(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Updates the company.
            </summary>
            <param name="company">The company.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.UL#Aria#Service#Repository#ICompanyRepository#Delete(System.Guid)">
            <summary>
            Deletes the company by id.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.UL#Aria#Service#Repository#ICompanyRepository#FetchAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.FetchAllCount">
            <summary>
            Fetches all count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.FindAll">
            <summary>
            Finds all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.Search(UL.Aria.Service.Domain.Search.SearchCriteria)">
            <summary>
            Searches the specified search criteria.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.InitializeFetchAllCommand(Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the ge all command.
            </summary>
            <param name="db">The db.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.FindById(System.Guid)">
            <summary>
            Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.InitializeFindByIdCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the find by id command.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="db">The db.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.Add(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.InitializeInsertCommand(UL.Aria.Service.Domain.Entity.Company,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the add command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.Update(UL.Aria.Service.Domain.Entity.Company)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.InitializeUpdateCommand(UL.Aria.Service.Domain.Entity.Company,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the update command.
            </summary>
            <param name="entity">The entity.</param>
            <param name="db">The db.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.Remove(System.Guid)">
            <summary>
            Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.InitializeRemoveCommand(System.Guid,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>
            Initializes the remove command.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="db">The db.</param>
            <returns>DbCommand.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.ConstructCompanyWithExternalIds(System.Data.IDataReader)">
            <summary>
            Constructs the company.
            </summary>
            <param name="reader">The reader.</param>
            <returns>Company.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.ConstructCompany(System.Data.IDataReader)">
            <summary>
            Constructs the company.
            </summary>
            <param name="reader">The reader.</param>
            <returns>Company.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.GetByCommand(System.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand})">
            <summary>
            Gets the by command.
            </summary>
            <param name="initializeCommand">The initialize command.</param>
            <returns>List{Company}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.GetByCommand``1(System.Func{``0,Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand},``0)">
            <summary>
            Gets the by command.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="initializeCommand">The initialize command.</param>
            <param name="id">The id.</param>
            <returns>IEnumerable{Company}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.ExecuteGetByCommand``1(System.Func{``0,Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand},``0)">
            <summary>
            Gets the by command.
            </summary>
            <typeparam name="TEntity">The type of the T entity.</typeparam>
            <param name="initializeCommand">The initialize command.</param>
            <param name="entity">The entity.</param>
            <returns>IEnumerable{Company}.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.CompanyRepository.ExecuteCommand``1(System.Func{``0,Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand},``0,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Executes the command.
            </summary>
            <typeparam name="TEntity">The type of the T entity.</typeparam>
            <param name="commandInitializer">The command initializer.</param>
            <param name="entity">The entity.</param>
            <param name="afterExecute">The after execute.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ContainerRepository">
            <summary>
                The content repository
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Repository.IContainerRepository">
            <summary>
                The content repository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IContainerRepository.Create(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IContainerRepository.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IContainerRepository.GetByCompanyId(System.Guid)">
            <summary>
                Gets the by company id.
            </summary>
            <param name="companyId">The company id.</param>
            <returns>IEnumerable{Container}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.IContainerRepository.DeleteList(System.Guid,System.String)">
            <summary>
            Deletes the list.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IContainerRepository.GetByPrimarySearchEntityId(System.Guid)">
            <summary>
            Gets the by primary search entity identifier.
            </summary>
            <param name="primarySearchEntityId">The primary search entity identifier.</param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.#ctor(UL.Enterprise.Foundation.Data.ITransactionFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ContainerRepository"/> class.
            </summary>
            <param name="transactionFactory">The transaction factory.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ContainerRepository"/> class.
            </summary>
            <param name="dbIdFieldName">Name of the db id field.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.FindAll">
            <summary>
                Finds all.
            </summary>
            <returns>IList{Container}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.Add(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.Create(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Creates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.Remove(System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.DeleteList(System.Guid,System.String)">
            <summary>
                Deletes the list.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.GetByPrimarySearchEntityId(System.Guid)">
            <summary>
            Gets the by entity identifier.
            </summary>
            <param name="primarySearchEntityId">The primary search entity identifier.</param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.GetById(System.Guid)">
            <summary>
                Gets the by id.
            </summary>
            <param name="containerId">The container id.</param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.GetByCompanyId(System.Guid)">
            <summary>
                Gets the by company id.
            </summary>
            <param name="companyId">The company id.</param>
            <returns>IEnumerable{Container}.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.Update(UL.Aria.Service.Domain.Entity.Container)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns>Container.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ContainerRepository.ConstructEntityCompany(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns>Container.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProductFamilyRepository">
            <summary>
                Interface IProductFamilyRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyRepository.Create(UL.Aria.Service.Domain.Entity.ProductFamily)">
            <summary>
                Creates the specified product family.
            </summary>
            <param name="productFamily">The product family.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProductFamilyRepository.GetProductFamiliesByBusinessUnit(System.Guid)">
            <summary>
                Gets the product familes by business unit.
            </summary>
            <param name="businessUnitId">The business unit id.</param>
            <returns>IReadOnlyDictionary{GuidProductFamily}.</returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.AriaSharepointSerializationHelper">
            <summary>
            String related extension methods
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaSharepointSerializationHelper.ToAriaSharepointXml(System.Collections.Generic.IDictionary{System.String,System.String},UL.Aria.Service.Domain.Entity.IAssetFieldMetadata)">
            <summary>
            Serializes the dictionary to SP Xml.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="assetFieldMetadata">The asset field metadata.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.AriaSharepointSerializationHelper.ToIDictionaryFromAriaSharepointXml(System.String)">
            <summary>
            Deserializes the SP Xml to a dictionary.
            </summary>
            <param name="xml">The xml.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.IProfileRepository">
            <summary>
            contract for getting user information
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProfileRepository.FetchById(System.Guid)">
            <summary>
            Finds the by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProfileRepository.FetchByUserName(System.String)">
            <summary>
            Gets the name of the profile by user.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProfileRepository.Create(UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>    
        </member>
        <member name="M:UL.Aria.Service.Repository.IProfileRepository.Update(UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProfileRepository.Remove(System.Guid,System.Guid)">
            <summary>
            Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="modifyingUser">The modifying user.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProfileRepository.Search(UL.Aria.Service.Domain.Entity.ProfileSearchSpecification)">
            <summary>
            Searches the specified fuzzy search.
            </summary>
            <param name="c">The criteria to use in the search.</param>
            <returns></returns>      
        </member>
        <member name="M:UL.Aria.Service.Repository.IProfileRepository.FetchAllByCompanyId(System.Guid)">
            <summary>
            Gets the profiles by company id.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.IProfileRepository.FetchByTeam(System.Guid,System.Boolean,System.Int32)">
            <summary>
            Fetches the list of user whom belong to the specified team.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
            <param name="includeTeamMemberTeams">if set to <c>true</c> Includes the Team members of teams owned by team members recurcively.</param>
            <param name="maxDepth">The maximum depth of recursion.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductFamilyFeatureRepository">
            <summary>
            Persists <see cref="T:UL.Aria.Service.Domain.Entity.ProductFamilyFeature"/> entities in the database.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductFamilyFeatureRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductFamilyFeature,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyFeatureRepository.FindByIds(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Finds the features by id list.
            </summary>
            <param name="productFamilyIds">The product family ids.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProductFamilyRepository">
            <summary>
            Class ProductFamilyRepository
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProductFamilyRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyRepository.GetProductFamiliesByBusinessUnit(System.Guid)">
            <summary>
            Gets the product familes by business unit.
            </summary>
            <param name="businessUnitId">The business unit id.</param>
            <returns>
            IReadOnlyDictionary{GuidProductFamily}.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.ProductFamily,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
            Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">if set to <c>true</c> [is new].</param>
            <param name="isDirty">if set to <c>true</c> [is dirty].</param>
            <param name="isDelete">if set to <c>true</c> [is delete].</param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProductFamilyRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
            Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Repository.ProfileRepository">
            <summary>
                Profile Repo
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.ProfileRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.FindById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.FetchById(System.Guid)">
            <summary>
                Finds the by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.FetchByUserName(System.String)">
            <summary>
                Gets the name of the profile by user.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.FetchAllByCompanyId(System.Guid)">
            <summary>
                Gets the profiles by compay id.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.FetchByTeam(System.Guid,System.Boolean,System.Int32)">
            <summary>
            Fetches the list of user whom belong to the specified team.
            </summary>
            <param name="userTeamId">The user team identifier.</param>
            <param name="includeTeamMemberTeams">if set to <c>true</c> Includes the Team members of teams owned by team members recurcively.</param>
            <param name="maxDepth">The maximum depth of recursion.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.Add(UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.Search(UL.Aria.Service.Domain.Entity.ProfileSearchSpecification)">
            <summary>
                Searches the specified fuzzy search.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.Create(UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
                Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.Update(UL.Aria.Service.Domain.Entity.ProfileBo)">
            <summary>
                Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.Remove(System.Guid,System.Guid)">
            <summary>
                Removes the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="modifyingUser">The modifying user.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.Remove(System.Guid)">
            <summary>
                Please call the Remove(guid,guid) method, instead.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.ProfileRepository.FindAll">
            <summary>
                FindAll not supported for profiles.  Use Search() instead.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.Repository.SharepointRequest">
            <summary>
            Sharepoint request info.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.SharepointRequest.#ctor">
            <summary>
            Inializes a new instance of the class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.SharepointRequest.Method">
            <summary>
            Gets or sets the Method.
            </summary>
            <value>
            The Method.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.SharepointRequest.ContentType">
            <summary>
            Gets or sets the content type.
            </summary>
            <value>
            The content type.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.SharepointRequest.Accept">
            <summary>
            Gets or sets the accept.
            </summary>
            <value>
            The accept.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.SharepointRequest.RequestUri">
            <summary>
            Gets or sets the request Uri.
            </summary>
            <value>
            The request Uri.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.SharepointRequest.CustomHeaders">
            <summary>
            Gets or sets custom headers.
            </summary>
            <value>
            Custom headers.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.SharepointRequest.IsStream">
            <summary>
            Gets or sets the is stream flag.
            </summary>
            <value>
            The is stream flag.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.SharepointRequest.ResponseDataType">
            <summary>
            Gets or sets the response data type.
            </summary>
            <value>
            The response data type.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.IndustryCodeRepository">
            <summary>
                Repository for <see cref="T:UL.Aria.Service.Domain.Entity.IndustryCode"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.IndustryCodeRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.IndustryCodeRepository"/> class.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Repository.IndustryCodeRepository.IdFieldName">
            <summary>
            Gets the name of the identifier field.
            </summary>
            <value>
            The name of the identifier field.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Repository.IndustryCodeRepository.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="T:UL.Aria.Service.Repository.UnitOfMeasureRepository">
            <summary>
                Repository for <see cref="T:UL.Aria.Service.Domain.Entity.UnitOfMeasure"/>
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.UnitOfMeasureRepository.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.Repository.UnitOfMeasureRepository"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Repository.UnitOfMeasureRepository.AddTableRowFields(UL.Aria.Service.Domain.Entity.UnitOfMeasure,System.Boolean,System.Boolean,System.Boolean,System.Data.DataRow)">
            <summary>
                Adds the table row fields.
            </summary>
            <param name="entity">The entity.</param>
            <param name="isNew">
                if set to <c>true</c> [is new].
            </param>
            <param name="isDirty">
                if set to <c>true</c> [is dirty].
            </param>
            <param name="isDelete">
                if set to <c>true</c> [is delete].
            </param>
            <param name="dr">The dr.</param>
        </member>
        <member name="M:UL.Aria.Service.Repository.UnitOfMeasureRepository.ConstructEntity(System.Data.IDataReader)">
            <summary>
                Constructs the entity.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="T:UL.Aria.Service.Security.CustomClaimsAuthenticationManager">
            <summary>
            Defines the base implementation for a claims authentication manager. The claims authentication manager provides a place in the claims processing pipeline for applying processing logic (filtering, validation, extension) to the claims collection in the incoming principal before execution reaches your application code.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Security.CustomClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            When overridden in a derived class, returns a <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object consistent with the requirements of the RP application. The default implementation does not modify the incoming <see cref="T:System.Security.Claims.ClaimsPrincipal" />.
            </summary>
            <param name="resourceName">The address of the resource that is being requested.</param>
            <param name="incomingPrincipal">The claims principal that represents the authenticated user that is attempting to access the resource.</param>
            <returns>
            A claims principal that contains any modifications necessary for the RP application. The default implementation returns the incoming claims principal unmodified.
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Security.CustomClaimsAuthorizationManager">
            <summary>
            Defines the base implementation for a claims authorization manager.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Security.CustomClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
            <summary>
            When implemented in a derived class, checks authorization for the subject in the specified context to perform the specified action on the specified resource.
            </summary>
            <param name="context">The authorization context that contains the subject, resource, and action for which authorization is to be checked.</param>
            <returns>
            true if the subject is authorized to perform the specified action on the specified resource; otherwise, false.
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Security.PrincipalResolver">
            <summary>
                Methods to get to current principal.
            </summary>
        </member>
        <member name="P:UL.Aria.Service.Security.PrincipalResolver.Current">
            <summary>
                Gets or sets the current.
            </summary>
            <value>
                The current.
            </value>
        </member>
        <member name="P:UL.Aria.Service.Security.PrincipalResolver.UserId">
            <summary>
            Gets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="T:UL.Aria.Service.ServiceMapperRegistry">
            <summary>
            Host project mapper registry class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.ServiceMapperRegistry.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:UL.Aria.Service.ServiceMapperRegistry"/> class.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.ServiceMapperRegistry.CreateLinkMaps">
            <summary>
            Creates the link maps.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.ITaskFetchStatusListStrategy">
            <summary>
            Interface ITaskFetchStatusListStrategy
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.ITaskFetchStatusListStrategy.FetchTaskStatusList">
            <summary>
            Fetches the task status list.
            </summary>
            <returns>Dictionary&lt;TaskStatusEnumDto, System.String&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.ITaskFetchStatusListStrategyFactory">
            <summary>
            Interface ITaskFetchStatusListStrategyFactory
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.ITaskFetchStatusListStrategyFactory.GetStrategy(UL.Aria.Service.Contracts.Dto.TaskStatusEnumDto)">
            <summary>
            Gets the strategy.
            </summary>
            <param name="taskStatus">The task status.</param>
            <returns>ITaskFetchStatusListStrategy.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.ITaskFetchStatusStrategy">
            <summary>
            Interface ITaskFetchStatusStrategy
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.ITaskFetchStatusStrategy.FetchTaskStatus(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Fetches the task status.
            </summary>
            <param name="task">The task.</param>
            <returns>TaskStatusEnumDto.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.ITaskFetchStatusStrategyFactory">
            <summary>
            Interface ITaskFetchStatusStrategyFactory
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.ITaskFetchStatusStrategyFactory.GetStrategy(UL.Aria.Service.Contracts.Dto.TaskStatusEnumDto)">
            <summary>
            Gets the strategy.
            </summary>
            <param name="taskStatus">The task status.</param>
            <returns>ITaskFetchStatusStrategy.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyAwaitingAssignment">
            <summary>
            Class TaskFetchStatusListStrategyAwaitingAssignment. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyAwaitingAssignment.FetchTaskStatusList">
            <summary>
            Fetches the task status list.
            </summary>
            <returns>Dictionary&lt;TaskStatusEnumDto, System.String&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyCanceled">
            <summary>
            Class TaskFetchStatusListStrategyCanceled. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyCanceled.FetchTaskStatusList">
            <summary>
            Fetches the task status list.
            </summary>
            <returns>Dictionary&lt;TaskStatusEnumDto, System.String&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyCompleted">
            <summary>
            Class TaskFetchStatusListStrategyCompleted. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyCompleted.FetchTaskStatusList">
            <summary>
            Fetches the task status list.
            </summary>
            <returns>Dictionary&lt;TaskStatusEnumDto, System.String&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyFactory">
            <summary>
            Class TaskFetchStatusListStrategyFactory. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyFactory.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyFactory"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyFactory.GetStrategy(UL.Aria.Service.Contracts.Dto.TaskStatusEnumDto)">
            <summary>
            Gets the strategy.
            </summary>
            <param name="taskStatus">The task status.</param>
            <returns>ITaskFetchStatusListStrategy.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyInProgress">
            <summary>
            Class TaskFetchStatusListStrategyInProgress. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyInProgress.FetchTaskStatusList">
            <summary>
            Fetches the task status list.
            </summary>
            <returns>Dictionary&lt;TaskStatusEnumDto, System.String&gt;.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyNotScheduled">
            <summary>
            Class TaskFetchStatusListStrategyNotScheduled. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyNotScheduled.FetchTaskStatusList">
            <summary>
            Fetches the task status list.
            </summary>
            <returns>Dictionary&lt;TaskStatusEnumDto, System.String&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyOnHold">
            <summary>
            Class TaskFetchStatusListStrategyOnHold. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusListStrategyOnHold.FetchTaskStatusList">
            <summary>
            Fetches the task status list.
            </summary>
            <returns>Dictionary&lt;TaskStatusEnumDto, System.String&gt;.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusReActivateStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusReActivateStrategy.FetchTaskStatus(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Fetches the task status.
            </summary>
            <param name="task">The task.</param>
            <returns>UL.Aria.Service.Contracts.Dto.TaskStatusEnumDto.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusStrategyCalculate">
            <summary>
            Class TaskFetchStatusStrategyCalculate. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusStrategyCalculate.FetchTaskStatus(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Fetches the task status.
            </summary>
            <param name="task">The task.</param>
            <returns>TaskStatusEnumDto.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusStrategyFactory">
            <summary>
            Class TaskFetchStatusStrategyFactory. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusStrategyFactory.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:UL.Aria.Service.TaskStatus.TaskFetchStatusStrategyFactory"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusStrategyFactory.GetStrategy(UL.Aria.Service.Contracts.Dto.TaskStatusEnumDto)">
            <summary>
            Gets the strategy.
            </summary>
            <param name="taskStatus">The task status.</param>
            <returns>ITaskFetchStatusStrategy.</returns>
        </member>
        <member name="T:UL.Aria.Service.TaskStatus.TaskFetchStatusStrategyNonCalculate">
            <summary>
            Class TaskFetchStatusStrategyMirror.
            </summary>
        </member>
        <member name="M:UL.Aria.Service.TaskStatus.TaskFetchStatusStrategyNonCalculate.FetchTaskStatus(UL.Aria.Service.Domain.Entity.Task)">
            <summary>
            Fetches the task status.
            </summary>
            <param name="task">The task.</param>
            <returns>UL.Aria.Service.Contracts.Dto.TaskStatusEnumDto.</returns>
        </member>
        <member name="T:UL.Aria.Service.Templating.AssemblyManifestTemplateResolver">
            <summary>
            Resolved templates from assembly embedded resources
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Templating.AssemblyManifestTemplateResolver.Resolve(System.String)">
            <summary>
            Resolves the template content with the specified name.
            </summary>
            <param name="name">The name of the template to resolve.</param>
            <returns>
            The template content.
            </returns>
        </member>
        <member name="T:UL.Aria.Service.Templating.AriaTemplateService">
            <summary>
            Templating service that will provide a correct configuration object that uses our configured Template Resolver.
            </summary>
        </member>
        <member name="T:UL.Aria.Service.Templating.IAriaTemplateService">
            <summary>
            The aria templating service
            </summary>
        </member>
        <member name="M:UL.Aria.Service.Templating.IAriaTemplateService.RenderTemplate``1(System.String,``0)">
            <summary>
            Renders the template.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="templateName">Name of the template.</param>
            <param name="model">The model.</param>
            <returns></returns>
        </member>
        <member name="M:UL.Aria.Service.Templating.AriaTemplateService.#ctor(RazorEngine.Templating.ITemplateResolver,UL.Aria.Service.Configuration.IServiceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:RazorEngine.Templating.TemplateService"/> class.
            </summary>
            <param name="resolver">The resolver.</param>
            <param name="serviceConfiguration"></param>
        </member>
        <member name="M:UL.Aria.Service.Templating.AriaTemplateService.RenderTemplate``1(System.String,``0)">
            <summary>
            Renders the template.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="templateName">Name of the template.</param>
            <param name="model">The model.</param>
            <returns></returns>
        </member>
    </members>
</doc>
