@using UL.Aria.Web.Common.Models.Search
@helper TruncatedText(string text, int maxLength)
{
	if (text == null || text.Length < maxLength)
	{
		<span>@text</span>
	}
	else
	{
		<span>@text.Substring(0, maxLength)<span class="more">...</span><span class="more" style="display: none;">@text.Substring(maxLength)</span></span>
		<a class="more" href="#more" onclick=" $('.more').toggle();return false; ">More</a>
		<a class="more" href="#less" onclick=" $('.more').toggle();return false; " style="display: none;">Less</a>
	}
}

@helper TruncateTextWithOutMore(string text, int maxLength)
{
	if (text == null || text.Length < maxLength)
	{
		<span title="@text">@text</span>
	}
	else
	{
		<span title="@text">@text.Substring(0, maxLength)</span>
	}
}



@helper SortColumnHeader(string displayName, string fieldName, SearchCriteria criteria)
{
	<a onclick="return UL.Sort(this);" href="#" data-sort-field="@fieldName" data-sort-order="@criteria.GetSortOrder(fieldName)">@displayName <span class="@criteria.SortClassName(fieldName)"></span></a>
}

@helper SortTableColumnHeader(string displayName, string fieldName, SearchCriteria criteria, int width = 50, string title = "")
{
    <th style="vertical-align:top; width:@(width+20)px;">
        <a onclick="return UL.Sort(this);" href="#" data-sort-field="@fieldName" data-sort-order="@criteria.GetSortOrder(fieldName)" title ="@title">
            <div style="white-space:nowrap; display:inline-block;">
                <span style="width:@(width)px; display:inline-block; white-space:normal">@displayName</span>
                <span class="@criteria.SortClassName(fieldName)" style="vertical-align:top;"></span>
            </div>
        </a>
    </th>
}

@helper ModalSubmitFix()
{
	@* IE8 will only submit forms if the submit button has been viewed on the screen by the user *@
	if (Request.Browser.Id == "ie8")
	{
		<div style="height: 1px; width: 1px; overflow: hidden; float:right;"><input type="submit" value="Submit" /></div>
	}
}

@helper ActionLink(dynamic item)
{
	<li class="@item.Class">
        @if (item.Modal)
        {
			<a href="@item.Url" data-toggle="modal" class="@item.Key" id="@item.Key" data-target="#@item.Target" data-item-href="@item.DataUrl" data-modal-class="@item.ModalClass" data-modal-title="@item.ModalTitle" data-item-name="@item.ModalText" data-action-redirect="@item.ActionRedirect" data-width="@item.ModalWidth">@item.Text</a>
        }
        else
        {
            <a id="@item.Key" class="@item.Key" target="@((item.NewWindow) ? "_blank" : "_self")" href="@item.Url">@item.Text</a>
        }
    </li>
}